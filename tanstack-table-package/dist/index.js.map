{"version":3,"file":"index.js","sources":["../node_modules/@tanstack/table-core/build/lib/index.mjs","../node_modules/@tanstack/react-table/build/lib/index.mjs","../src/components/pivot-table-view.tsx","../src/components/pivot-controls.tsx","../src/utils/export-utils.ts","../src/components/export-controls.tsx","../node_modules/next-themes/dist/index.mjs","../src/config/theme-presets.ts","../src/hooks/useTableTheme.ts","../src/components/table-controls.tsx","../src/components/drag-drop-area.tsx","../src/hooks/useKeyboardNavigation.ts","../src/components/enhanced-table-view.tsx","../node_modules/@tanstack/virtual-core/dist/esm/utils.js","../node_modules/@tanstack/virtual-core/dist/esm/index.js","../node_modules/@tanstack/react-virtual/dist/esm/index.js","../src/components/virtualized-table-view.tsx","../src/components/theme-selector.tsx","../src/config/table-presets.ts","../src/components/PresetSelector.tsx","../src/utils/performance.ts","../src/components/ReusableAdvancedTable.tsx","../src/components/cells/EditableCell.tsx","../src/components/cells/StatusCell.tsx","../src/components/cells/ProgressCell.tsx","../src/components/cells/DepartmentCell.tsx","../src/components/cells/RegionCell.tsx","../src/components/cells/EnhancedEditableCell.tsx","../src/components/column-definitions.ts","../src/config/presets.ts","../src/hooks/useTablePresets.ts","../src/data/sample-data.ts","../src/hooks/useAdvancedTable.ts","../src/utils/validation.ts","../src/utils/column-helpers.tsx"],"sourcesContent":["/**\n   * table-core\n   *\n   * Copyright (c) TanStack\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE.md file in the root directory of this source tree.\n   *\n   * @license MIT\n   */\n// type Person = {\n//   firstName: string\n//   lastName: string\n//   age: number\n//   visits: number\n//   status: string\n//   progress: number\n//   createdAt: Date\n//   nested: {\n//     foo: [\n//       {\n//         bar: 'bar'\n//       }\n//     ]\n//     bar: { subBar: boolean }[]\n//     baz: {\n//       foo: 'foo'\n//       bar: {\n//         baz: 'baz'\n//       }\n//     }\n//   }\n// }\n\n// const test: DeepKeys<Person> = 'nested.foo.0.bar'\n// const test2: DeepKeys<Person> = 'nested.bar'\n\n// const helper = createColumnHelper<Person>()\n\n// helper.accessor('nested.foo', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.foo.0.bar', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.bar', {\n//   cell: info => info.getValue(),\n// })\n\nfunction createColumnHelper() {\n  return {\n    accessor: (accessor, column) => {\n      return typeof accessor === 'function' ? {\n        ...column,\n        accessorFn: accessor\n      } : {\n        ...column,\n        accessorKey: accessor\n      };\n    },\n    display: column => column,\n    group: column => column\n  };\n}\n\n// Is this type a tuple?\n\n// If this type is a tuple, what indices are allowed?\n\n///\n\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction noop() {\n  //\n}\nfunction makeStateUpdater(key, instance) {\n  return updater => {\n    instance.setState(old => {\n      return {\n        ...old,\n        [key]: functionalUpdate(updater, old[key])\n      };\n    });\n  };\n}\nfunction isFunction(d) {\n  return d instanceof Function;\n}\nfunction isNumberArray(d) {\n  return Array.isArray(d) && d.every(val => typeof val === 'number');\n}\nfunction flattenBy(arr, getChildren) {\n  const flat = [];\n  const recurse = subArr => {\n    subArr.forEach(item => {\n      flat.push(item);\n      const children = getChildren(item);\n      if (children != null && children.length) {\n        recurse(children);\n      }\n    });\n  };\n  recurse(arr);\n  return flat;\n}\nfunction memo(getDeps, fn, opts) {\n  let deps = [];\n  let result;\n  return depArgs => {\n    let depTime;\n    if (opts.key && opts.debug) depTime = Date.now();\n    const newDeps = getDeps(depArgs);\n    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => deps[index] !== dep);\n    if (!depsChanged) {\n      return result;\n    }\n    deps = newDeps;\n    let resultTime;\n    if (opts.key && opts.debug) resultTime = Date.now();\n    result = fn(...newDeps);\n    opts == null || opts.onChange == null || opts.onChange(result);\n    if (opts.key && opts.debug) {\n      if (opts != null && opts.debug()) {\n        const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;\n        const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;\n        const resultFpsPercentage = resultEndTime / 16;\n        const pad = (str, num) => {\n          str = String(str);\n          while (str.length < num) {\n            str = ' ' + str;\n          }\n          return str;\n        };\n        console.info(`%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`, `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(0, Math.min(120 - 120 * resultFpsPercentage, 120))}deg 100% 31%);`, opts == null ? void 0 : opts.key);\n      }\n    }\n    return result;\n  };\n}\nfunction getMemoOptions(tableOptions, debugLevel, key, onChange) {\n  return {\n    debug: () => {\n      var _tableOptions$debugAl;\n      return (_tableOptions$debugAl = tableOptions == null ? void 0 : tableOptions.debugAll) != null ? _tableOptions$debugAl : tableOptions[debugLevel];\n    },\n    key: process.env.NODE_ENV === 'development' && key,\n    onChange\n  };\n}\n\nfunction createCell(table, row, column, columnId) {\n  const getRenderValue = () => {\n    var _cell$getValue;\n    return (_cell$getValue = cell.getValue()) != null ? _cell$getValue : table.options.renderFallbackValue;\n  };\n  const cell = {\n    id: `${row.id}_${column.id}`,\n    row,\n    column,\n    getValue: () => row.getValue(columnId),\n    renderValue: getRenderValue,\n    getContext: memo(() => [table, column, row, cell], (table, column, row, cell) => ({\n      table,\n      column,\n      row,\n      cell: cell,\n      getValue: cell.getValue,\n      renderValue: cell.renderValue\n    }), getMemoOptions(table.options, 'debugCells', 'cell.getContext'))\n  };\n  table._features.forEach(feature => {\n    feature.createCell == null || feature.createCell(cell, column, row, table);\n  }, {});\n  return cell;\n}\n\nfunction createColumn(table, columnDef, depth, parent) {\n  var _ref, _resolvedColumnDef$id;\n  const defaultColumn = table._getDefaultColumnDef();\n  const resolvedColumnDef = {\n    ...defaultColumn,\n    ...columnDef\n  };\n  const accessorKey = resolvedColumnDef.accessorKey;\n  let id = (_ref = (_resolvedColumnDef$id = resolvedColumnDef.id) != null ? _resolvedColumnDef$id : accessorKey ? typeof String.prototype.replaceAll === 'function' ? accessorKey.replaceAll('.', '_') : accessorKey.replace(/\\./g, '_') : undefined) != null ? _ref : typeof resolvedColumnDef.header === 'string' ? resolvedColumnDef.header : undefined;\n  let accessorFn;\n  if (resolvedColumnDef.accessorFn) {\n    accessorFn = resolvedColumnDef.accessorFn;\n  } else if (accessorKey) {\n    // Support deep accessor keys\n    if (accessorKey.includes('.')) {\n      accessorFn = originalRow => {\n        let result = originalRow;\n        for (const key of accessorKey.split('.')) {\n          var _result;\n          result = (_result = result) == null ? void 0 : _result[key];\n          if (process.env.NODE_ENV !== 'production' && result === undefined) {\n            console.warn(`\"${key}\" in deeply nested key \"${accessorKey}\" returned undefined.`);\n          }\n        }\n        return result;\n      };\n    } else {\n      accessorFn = originalRow => originalRow[resolvedColumnDef.accessorKey];\n    }\n  }\n  if (!id) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(resolvedColumnDef.accessorFn ? `Columns require an id when using an accessorFn` : `Columns require an id when using a non-string header`);\n    }\n    throw new Error();\n  }\n  let column = {\n    id: `${String(id)}`,\n    accessorFn,\n    parent: parent,\n    depth,\n    columnDef: resolvedColumnDef,\n    columns: [],\n    getFlatColumns: memo(() => [true], () => {\n      var _column$columns;\n      return [column, ...((_column$columns = column.columns) == null ? void 0 : _column$columns.flatMap(d => d.getFlatColumns()))];\n    }, getMemoOptions(table.options, 'debugColumns', 'column.getFlatColumns')),\n    getLeafColumns: memo(() => [table._getOrderColumnsFn()], orderColumns => {\n      var _column$columns2;\n      if ((_column$columns2 = column.columns) != null && _column$columns2.length) {\n        let leafColumns = column.columns.flatMap(column => column.getLeafColumns());\n        return orderColumns(leafColumns);\n      }\n      return [column];\n    }, getMemoOptions(table.options, 'debugColumns', 'column.getLeafColumns'))\n  };\n  for (const feature of table._features) {\n    feature.createColumn == null || feature.createColumn(column, table);\n  }\n\n  // Yes, we have to convert table to unknown, because we know more than the compiler here.\n  return column;\n}\n\nconst debug = 'debugHeaders';\n//\n\nfunction createHeader(table, column, options) {\n  var _options$id;\n  const id = (_options$id = options.id) != null ? _options$id : column.id;\n  let header = {\n    id,\n    column,\n    index: options.index,\n    isPlaceholder: !!options.isPlaceholder,\n    placeholderId: options.placeholderId,\n    depth: options.depth,\n    subHeaders: [],\n    colSpan: 0,\n    rowSpan: 0,\n    headerGroup: null,\n    getLeafHeaders: () => {\n      const leafHeaders = [];\n      const recurseHeader = h => {\n        if (h.subHeaders && h.subHeaders.length) {\n          h.subHeaders.map(recurseHeader);\n        }\n        leafHeaders.push(h);\n      };\n      recurseHeader(header);\n      return leafHeaders;\n    },\n    getContext: () => ({\n      table,\n      header: header,\n      column\n    })\n  };\n  table._features.forEach(feature => {\n    feature.createHeader == null || feature.createHeader(header, table);\n  });\n  return header;\n}\nconst Headers = {\n  createTable: table => {\n    // Header Groups\n\n    table.getHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {\n      var _left$map$filter, _right$map$filter;\n      const leftColumns = (_left$map$filter = left == null ? void 0 : left.map(columnId => leafColumns.find(d => d.id === columnId)).filter(Boolean)) != null ? _left$map$filter : [];\n      const rightColumns = (_right$map$filter = right == null ? void 0 : right.map(columnId => leafColumns.find(d => d.id === columnId)).filter(Boolean)) != null ? _right$map$filter : [];\n      const centerColumns = leafColumns.filter(column => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));\n      const headerGroups = buildHeaderGroups(allColumns, [...leftColumns, ...centerColumns, ...rightColumns], table);\n      return headerGroups;\n    }, getMemoOptions(table.options, debug, 'getHeaderGroups'));\n    table.getCenterHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {\n      leafColumns = leafColumns.filter(column => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));\n      return buildHeaderGroups(allColumns, leafColumns, table, 'center');\n    }, getMemoOptions(table.options, debug, 'getCenterHeaderGroups'));\n    table.getLeftHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left], (allColumns, leafColumns, left) => {\n      var _left$map$filter2;\n      const orderedLeafColumns = (_left$map$filter2 = left == null ? void 0 : left.map(columnId => leafColumns.find(d => d.id === columnId)).filter(Boolean)) != null ? _left$map$filter2 : [];\n      return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'left');\n    }, getMemoOptions(table.options, debug, 'getLeftHeaderGroups'));\n    table.getRightHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.right], (allColumns, leafColumns, right) => {\n      var _right$map$filter2;\n      const orderedLeafColumns = (_right$map$filter2 = right == null ? void 0 : right.map(columnId => leafColumns.find(d => d.id === columnId)).filter(Boolean)) != null ? _right$map$filter2 : [];\n      return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'right');\n    }, getMemoOptions(table.options, debug, 'getRightHeaderGroups'));\n\n    // Footer Groups\n\n    table.getFooterGroups = memo(() => [table.getHeaderGroups()], headerGroups => {\n      return [...headerGroups].reverse();\n    }, getMemoOptions(table.options, debug, 'getFooterGroups'));\n    table.getLeftFooterGroups = memo(() => [table.getLeftHeaderGroups()], headerGroups => {\n      return [...headerGroups].reverse();\n    }, getMemoOptions(table.options, debug, 'getLeftFooterGroups'));\n    table.getCenterFooterGroups = memo(() => [table.getCenterHeaderGroups()], headerGroups => {\n      return [...headerGroups].reverse();\n    }, getMemoOptions(table.options, debug, 'getCenterFooterGroups'));\n    table.getRightFooterGroups = memo(() => [table.getRightHeaderGroups()], headerGroups => {\n      return [...headerGroups].reverse();\n    }, getMemoOptions(table.options, debug, 'getRightFooterGroups'));\n\n    // Flat Headers\n\n    table.getFlatHeaders = memo(() => [table.getHeaderGroups()], headerGroups => {\n      return headerGroups.map(headerGroup => {\n        return headerGroup.headers;\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getFlatHeaders'));\n    table.getLeftFlatHeaders = memo(() => [table.getLeftHeaderGroups()], left => {\n      return left.map(headerGroup => {\n        return headerGroup.headers;\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getLeftFlatHeaders'));\n    table.getCenterFlatHeaders = memo(() => [table.getCenterHeaderGroups()], left => {\n      return left.map(headerGroup => {\n        return headerGroup.headers;\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getCenterFlatHeaders'));\n    table.getRightFlatHeaders = memo(() => [table.getRightHeaderGroups()], left => {\n      return left.map(headerGroup => {\n        return headerGroup.headers;\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getRightFlatHeaders'));\n\n    // Leaf Headers\n\n    table.getCenterLeafHeaders = memo(() => [table.getCenterFlatHeaders()], flatHeaders => {\n      return flatHeaders.filter(header => {\n        var _header$subHeaders;\n        return !((_header$subHeaders = header.subHeaders) != null && _header$subHeaders.length);\n      });\n    }, getMemoOptions(table.options, debug, 'getCenterLeafHeaders'));\n    table.getLeftLeafHeaders = memo(() => [table.getLeftFlatHeaders()], flatHeaders => {\n      return flatHeaders.filter(header => {\n        var _header$subHeaders2;\n        return !((_header$subHeaders2 = header.subHeaders) != null && _header$subHeaders2.length);\n      });\n    }, getMemoOptions(table.options, debug, 'getLeftLeafHeaders'));\n    table.getRightLeafHeaders = memo(() => [table.getRightFlatHeaders()], flatHeaders => {\n      return flatHeaders.filter(header => {\n        var _header$subHeaders3;\n        return !((_header$subHeaders3 = header.subHeaders) != null && _header$subHeaders3.length);\n      });\n    }, getMemoOptions(table.options, debug, 'getRightLeafHeaders'));\n    table.getLeafHeaders = memo(() => [table.getLeftHeaderGroups(), table.getCenterHeaderGroups(), table.getRightHeaderGroups()], (left, center, right) => {\n      var _left$0$headers, _left$, _center$0$headers, _center$, _right$0$headers, _right$;\n      return [...((_left$0$headers = (_left$ = left[0]) == null ? void 0 : _left$.headers) != null ? _left$0$headers : []), ...((_center$0$headers = (_center$ = center[0]) == null ? void 0 : _center$.headers) != null ? _center$0$headers : []), ...((_right$0$headers = (_right$ = right[0]) == null ? void 0 : _right$.headers) != null ? _right$0$headers : [])].map(header => {\n        return header.getLeafHeaders();\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getLeafHeaders'));\n  }\n};\nfunction buildHeaderGroups(allColumns, columnsToGroup, table, headerFamily) {\n  var _headerGroups$0$heade, _headerGroups$;\n  // Find the max depth of the columns:\n  // build the leaf column row\n  // build each buffer row going up\n  //    placeholder for non-existent level\n  //    real column for existing level\n\n  let maxDepth = 0;\n  const findMaxDepth = function (columns, depth) {\n    if (depth === void 0) {\n      depth = 1;\n    }\n    maxDepth = Math.max(maxDepth, depth);\n    columns.filter(column => column.getIsVisible()).forEach(column => {\n      var _column$columns;\n      if ((_column$columns = column.columns) != null && _column$columns.length) {\n        findMaxDepth(column.columns, depth + 1);\n      }\n    }, 0);\n  };\n  findMaxDepth(allColumns);\n  let headerGroups = [];\n  const createHeaderGroup = (headersToGroup, depth) => {\n    // The header group we are creating\n    const headerGroup = {\n      depth,\n      id: [headerFamily, `${depth}`].filter(Boolean).join('_'),\n      headers: []\n    };\n\n    // The parent columns we're going to scan next\n    const pendingParentHeaders = [];\n\n    // Scan each column for parents\n    headersToGroup.forEach(headerToGroup => {\n      // What is the latest (last) parent column?\n\n      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0];\n      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth;\n      let column;\n      let isPlaceholder = false;\n      if (isLeafHeader && headerToGroup.column.parent) {\n        // The parent header is new\n        column = headerToGroup.column.parent;\n      } else {\n        // The parent header is repeated\n        column = headerToGroup.column;\n        isPlaceholder = true;\n      }\n      if (latestPendingParentHeader && (latestPendingParentHeader == null ? void 0 : latestPendingParentHeader.column) === column) {\n        // This column is repeated. Add it as a sub header to the next batch\n        latestPendingParentHeader.subHeaders.push(headerToGroup);\n      } else {\n        // This is a new header. Let's create it\n        const header = createHeader(table, column, {\n          id: [headerFamily, depth, column.id, headerToGroup == null ? void 0 : headerToGroup.id].filter(Boolean).join('_'),\n          isPlaceholder,\n          placeholderId: isPlaceholder ? `${pendingParentHeaders.filter(d => d.column === column).length}` : undefined,\n          depth,\n          index: pendingParentHeaders.length\n        });\n\n        // Add the headerToGroup as a subHeader of the new header\n        header.subHeaders.push(headerToGroup);\n        // Add the new header to the pendingParentHeaders to get grouped\n        // in the next batch\n        pendingParentHeaders.push(header);\n      }\n      headerGroup.headers.push(headerToGroup);\n      headerToGroup.headerGroup = headerGroup;\n    });\n    headerGroups.push(headerGroup);\n    if (depth > 0) {\n      createHeaderGroup(pendingParentHeaders, depth - 1);\n    }\n  };\n  const bottomHeaders = columnsToGroup.map((column, index) => createHeader(table, column, {\n    depth: maxDepth,\n    index\n  }));\n  createHeaderGroup(bottomHeaders, maxDepth - 1);\n  headerGroups.reverse();\n\n  // headerGroups = headerGroups.filter(headerGroup => {\n  //   return !headerGroup.headers.every(header => header.isPlaceholder)\n  // })\n\n  const recurseHeadersForSpans = headers => {\n    const filteredHeaders = headers.filter(header => header.column.getIsVisible());\n    return filteredHeaders.map(header => {\n      let colSpan = 0;\n      let rowSpan = 0;\n      let childRowSpans = [0];\n      if (header.subHeaders && header.subHeaders.length) {\n        childRowSpans = [];\n        recurseHeadersForSpans(header.subHeaders).forEach(_ref => {\n          let {\n            colSpan: childColSpan,\n            rowSpan: childRowSpan\n          } = _ref;\n          colSpan += childColSpan;\n          childRowSpans.push(childRowSpan);\n        });\n      } else {\n        colSpan = 1;\n      }\n      const minChildRowSpan = Math.min(...childRowSpans);\n      rowSpan = rowSpan + minChildRowSpan;\n      header.colSpan = colSpan;\n      header.rowSpan = rowSpan;\n      return {\n        colSpan,\n        rowSpan\n      };\n    });\n  };\n  recurseHeadersForSpans((_headerGroups$0$heade = (_headerGroups$ = headerGroups[0]) == null ? void 0 : _headerGroups$.headers) != null ? _headerGroups$0$heade : []);\n  return headerGroups;\n}\n\nconst createRow = (table, id, original, rowIndex, depth, subRows, parentId) => {\n  let row = {\n    id,\n    index: rowIndex,\n    original,\n    depth,\n    parentId,\n    _valuesCache: {},\n    _uniqueValuesCache: {},\n    getValue: columnId => {\n      if (row._valuesCache.hasOwnProperty(columnId)) {\n        return row._valuesCache[columnId];\n      }\n      const column = table.getColumn(columnId);\n      if (!(column != null && column.accessorFn)) {\n        return undefined;\n      }\n      row._valuesCache[columnId] = column.accessorFn(row.original, rowIndex);\n      return row._valuesCache[columnId];\n    },\n    getUniqueValues: columnId => {\n      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {\n        return row._uniqueValuesCache[columnId];\n      }\n      const column = table.getColumn(columnId);\n      if (!(column != null && column.accessorFn)) {\n        return undefined;\n      }\n      if (!column.columnDef.getUniqueValues) {\n        row._uniqueValuesCache[columnId] = [row.getValue(columnId)];\n        return row._uniqueValuesCache[columnId];\n      }\n      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(row.original, rowIndex);\n      return row._uniqueValuesCache[columnId];\n    },\n    renderValue: columnId => {\n      var _row$getValue;\n      return (_row$getValue = row.getValue(columnId)) != null ? _row$getValue : table.options.renderFallbackValue;\n    },\n    subRows: subRows != null ? subRows : [],\n    getLeafRows: () => flattenBy(row.subRows, d => d.subRows),\n    getParentRow: () => row.parentId ? table.getRow(row.parentId, true) : undefined,\n    getParentRows: () => {\n      let parentRows = [];\n      let currentRow = row;\n      while (true) {\n        const parentRow = currentRow.getParentRow();\n        if (!parentRow) break;\n        parentRows.push(parentRow);\n        currentRow = parentRow;\n      }\n      return parentRows.reverse();\n    },\n    getAllCells: memo(() => [table.getAllLeafColumns()], leafColumns => {\n      return leafColumns.map(column => {\n        return createCell(table, row, column, column.id);\n      });\n    }, getMemoOptions(table.options, 'debugRows', 'getAllCells')),\n    _getAllCellsByColumnId: memo(() => [row.getAllCells()], allCells => {\n      return allCells.reduce((acc, cell) => {\n        acc[cell.column.id] = cell;\n        return acc;\n      }, {});\n    }, getMemoOptions(table.options, 'debugRows', 'getAllCellsByColumnId'))\n  };\n  for (let i = 0; i < table._features.length; i++) {\n    const feature = table._features[i];\n    feature == null || feature.createRow == null || feature.createRow(row, table);\n  }\n  return row;\n};\n\n//\n\nconst ColumnFaceting = {\n  createColumn: (column, table) => {\n    column._getFacetedRowModel = table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, column.id);\n    column.getFacetedRowModel = () => {\n      if (!column._getFacetedRowModel) {\n        return table.getPreFilteredRowModel();\n      }\n      return column._getFacetedRowModel();\n    };\n    column._getFacetedUniqueValues = table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, column.id);\n    column.getFacetedUniqueValues = () => {\n      if (!column._getFacetedUniqueValues) {\n        return new Map();\n      }\n      return column._getFacetedUniqueValues();\n    };\n    column._getFacetedMinMaxValues = table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, column.id);\n    column.getFacetedMinMaxValues = () => {\n      if (!column._getFacetedMinMaxValues) {\n        return undefined;\n      }\n      return column._getFacetedMinMaxValues();\n    };\n  }\n};\n\nconst includesString = (row, columnId, filterValue) => {\n  var _filterValue$toString, _row$getValue;\n  const search = filterValue == null || (_filterValue$toString = filterValue.toString()) == null ? void 0 : _filterValue$toString.toLowerCase();\n  return Boolean((_row$getValue = row.getValue(columnId)) == null || (_row$getValue = _row$getValue.toString()) == null || (_row$getValue = _row$getValue.toLowerCase()) == null ? void 0 : _row$getValue.includes(search));\n};\nincludesString.autoRemove = val => testFalsey(val);\nconst includesStringSensitive = (row, columnId, filterValue) => {\n  var _row$getValue2;\n  return Boolean((_row$getValue2 = row.getValue(columnId)) == null || (_row$getValue2 = _row$getValue2.toString()) == null ? void 0 : _row$getValue2.includes(filterValue));\n};\nincludesStringSensitive.autoRemove = val => testFalsey(val);\nconst equalsString = (row, columnId, filterValue) => {\n  var _row$getValue3;\n  return ((_row$getValue3 = row.getValue(columnId)) == null || (_row$getValue3 = _row$getValue3.toString()) == null ? void 0 : _row$getValue3.toLowerCase()) === (filterValue == null ? void 0 : filterValue.toLowerCase());\n};\nequalsString.autoRemove = val => testFalsey(val);\nconst arrIncludes = (row, columnId, filterValue) => {\n  var _row$getValue4;\n  return (_row$getValue4 = row.getValue(columnId)) == null ? void 0 : _row$getValue4.includes(filterValue);\n};\narrIncludes.autoRemove = val => testFalsey(val);\nconst arrIncludesAll = (row, columnId, filterValue) => {\n  return !filterValue.some(val => {\n    var _row$getValue5;\n    return !((_row$getValue5 = row.getValue(columnId)) != null && _row$getValue5.includes(val));\n  });\n};\narrIncludesAll.autoRemove = val => testFalsey(val) || !(val != null && val.length);\nconst arrIncludesSome = (row, columnId, filterValue) => {\n  return filterValue.some(val => {\n    var _row$getValue6;\n    return (_row$getValue6 = row.getValue(columnId)) == null ? void 0 : _row$getValue6.includes(val);\n  });\n};\narrIncludesSome.autoRemove = val => testFalsey(val) || !(val != null && val.length);\nconst equals = (row, columnId, filterValue) => {\n  return row.getValue(columnId) === filterValue;\n};\nequals.autoRemove = val => testFalsey(val);\nconst weakEquals = (row, columnId, filterValue) => {\n  return row.getValue(columnId) == filterValue;\n};\nweakEquals.autoRemove = val => testFalsey(val);\nconst inNumberRange = (row, columnId, filterValue) => {\n  let [min, max] = filterValue;\n  const rowValue = row.getValue(columnId);\n  return rowValue >= min && rowValue <= max;\n};\ninNumberRange.resolveFilterValue = val => {\n  let [unsafeMin, unsafeMax] = val;\n  let parsedMin = typeof unsafeMin !== 'number' ? parseFloat(unsafeMin) : unsafeMin;\n  let parsedMax = typeof unsafeMax !== 'number' ? parseFloat(unsafeMax) : unsafeMax;\n  let min = unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin;\n  let max = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax;\n  if (min > max) {\n    const temp = min;\n    min = max;\n    max = temp;\n  }\n  return [min, max];\n};\ninNumberRange.autoRemove = val => testFalsey(val) || testFalsey(val[0]) && testFalsey(val[1]);\n\n// Export\n\nconst filterFns = {\n  includesString,\n  includesStringSensitive,\n  equalsString,\n  arrIncludes,\n  arrIncludesAll,\n  arrIncludesSome,\n  equals,\n  weakEquals,\n  inNumberRange\n};\n// Utils\n\nfunction testFalsey(val) {\n  return val === undefined || val === null || val === '';\n}\n\n//\n\nconst ColumnFiltering = {\n  getDefaultColumnDef: () => {\n    return {\n      filterFn: 'auto'\n    };\n  },\n  getInitialState: state => {\n    return {\n      columnFilters: [],\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnFiltersChange: makeStateUpdater('columnFilters', table),\n      filterFromLeafRows: false,\n      maxLeafRowFilterDepth: 100\n    };\n  },\n  createColumn: (column, table) => {\n    column.getAutoFilterFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0];\n      const value = firstRow == null ? void 0 : firstRow.getValue(column.id);\n      if (typeof value === 'string') {\n        return filterFns.includesString;\n      }\n      if (typeof value === 'number') {\n        return filterFns.inNumberRange;\n      }\n      if (typeof value === 'boolean') {\n        return filterFns.equals;\n      }\n      if (value !== null && typeof value === 'object') {\n        return filterFns.equals;\n      }\n      if (Array.isArray(value)) {\n        return filterFns.arrIncludes;\n      }\n      return filterFns.weakEquals;\n    };\n    column.getFilterFn = () => {\n      var _table$options$filter, _table$options$filter2;\n      return isFunction(column.columnDef.filterFn) ? column.columnDef.filterFn : column.columnDef.filterFn === 'auto' ? column.getAutoFilterFn() : // @ts-ignore\n      (_table$options$filter = (_table$options$filter2 = table.options.filterFns) == null ? void 0 : _table$options$filter2[column.columnDef.filterFn]) != null ? _table$options$filter : filterFns[column.columnDef.filterFn];\n    };\n    column.getCanFilter = () => {\n      var _column$columnDef$ena, _table$options$enable, _table$options$enable2;\n      return ((_column$columnDef$ena = column.columnDef.enableColumnFilter) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnFilters) != null ? _table$options$enable : true) && ((_table$options$enable2 = table.options.enableFilters) != null ? _table$options$enable2 : true) && !!column.accessorFn;\n    };\n    column.getIsFiltered = () => column.getFilterIndex() > -1;\n    column.getFilterValue = () => {\n      var _table$getState$colum;\n      return (_table$getState$colum = table.getState().columnFilters) == null || (_table$getState$colum = _table$getState$colum.find(d => d.id === column.id)) == null ? void 0 : _table$getState$colum.value;\n    };\n    column.getFilterIndex = () => {\n      var _table$getState$colum2, _table$getState$colum3;\n      return (_table$getState$colum2 = (_table$getState$colum3 = table.getState().columnFilters) == null ? void 0 : _table$getState$colum3.findIndex(d => d.id === column.id)) != null ? _table$getState$colum2 : -1;\n    };\n    column.setFilterValue = value => {\n      table.setColumnFilters(old => {\n        const filterFn = column.getFilterFn();\n        const previousFilter = old == null ? void 0 : old.find(d => d.id === column.id);\n        const newFilter = functionalUpdate(value, previousFilter ? previousFilter.value : undefined);\n\n        //\n        if (shouldAutoRemoveFilter(filterFn, newFilter, column)) {\n          var _old$filter;\n          return (_old$filter = old == null ? void 0 : old.filter(d => d.id !== column.id)) != null ? _old$filter : [];\n        }\n        const newFilterObj = {\n          id: column.id,\n          value: newFilter\n        };\n        if (previousFilter) {\n          var _old$map;\n          return (_old$map = old == null ? void 0 : old.map(d => {\n            if (d.id === column.id) {\n              return newFilterObj;\n            }\n            return d;\n          })) != null ? _old$map : [];\n        }\n        if (old != null && old.length) {\n          return [...old, newFilterObj];\n        }\n        return [newFilterObj];\n      });\n    };\n  },\n  createRow: (row, _table) => {\n    row.columnFilters = {};\n    row.columnFiltersMeta = {};\n  },\n  createTable: table => {\n    table.setColumnFilters = updater => {\n      const leafColumns = table.getAllLeafColumns();\n      const updateFn = old => {\n        var _functionalUpdate;\n        return (_functionalUpdate = functionalUpdate(updater, old)) == null ? void 0 : _functionalUpdate.filter(filter => {\n          const column = leafColumns.find(d => d.id === filter.id);\n          if (column) {\n            const filterFn = column.getFilterFn();\n            if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {\n              return false;\n            }\n          }\n          return true;\n        });\n      };\n      table.options.onColumnFiltersChange == null || table.options.onColumnFiltersChange(updateFn);\n    };\n    table.resetColumnFilters = defaultState => {\n      var _table$initialState$c, _table$initialState;\n      table.setColumnFilters(defaultState ? [] : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnFilters) != null ? _table$initialState$c : []);\n    };\n    table.getPreFilteredRowModel = () => table.getCoreRowModel();\n    table.getFilteredRowModel = () => {\n      if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {\n        table._getFilteredRowModel = table.options.getFilteredRowModel(table);\n      }\n      if (table.options.manualFiltering || !table._getFilteredRowModel) {\n        return table.getPreFilteredRowModel();\n      }\n      return table._getFilteredRowModel();\n    };\n  }\n};\nfunction shouldAutoRemoveFilter(filterFn, value, column) {\n  return (filterFn && filterFn.autoRemove ? filterFn.autoRemove(value, column) : false) || typeof value === 'undefined' || typeof value === 'string' && !value;\n}\n\nconst sum = (columnId, _leafRows, childRows) => {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return childRows.reduce((sum, next) => {\n    const nextValue = next.getValue(columnId);\n    return sum + (typeof nextValue === 'number' ? nextValue : 0);\n  }, 0);\n};\nconst min = (columnId, _leafRows, childRows) => {\n  let min;\n  childRows.forEach(row => {\n    const value = row.getValue(columnId);\n    if (value != null && (min > value || min === undefined && value >= value)) {\n      min = value;\n    }\n  });\n  return min;\n};\nconst max = (columnId, _leafRows, childRows) => {\n  let max;\n  childRows.forEach(row => {\n    const value = row.getValue(columnId);\n    if (value != null && (max < value || max === undefined && value >= value)) {\n      max = value;\n    }\n  });\n  return max;\n};\nconst extent = (columnId, _leafRows, childRows) => {\n  let min;\n  let max;\n  childRows.forEach(row => {\n    const value = row.getValue(columnId);\n    if (value != null) {\n      if (min === undefined) {\n        if (value >= value) min = max = value;\n      } else {\n        if (min > value) min = value;\n        if (max < value) max = value;\n      }\n    }\n  });\n  return [min, max];\n};\nconst mean = (columnId, leafRows) => {\n  let count = 0;\n  let sum = 0;\n  leafRows.forEach(row => {\n    let value = row.getValue(columnId);\n    if (value != null && (value = +value) >= value) {\n      ++count, sum += value;\n    }\n  });\n  if (count) return sum / count;\n  return;\n};\nconst median = (columnId, leafRows) => {\n  if (!leafRows.length) {\n    return;\n  }\n  const values = leafRows.map(row => row.getValue(columnId));\n  if (!isNumberArray(values)) {\n    return;\n  }\n  if (values.length === 1) {\n    return values[0];\n  }\n  const mid = Math.floor(values.length / 2);\n  const nums = values.sort((a, b) => a - b);\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;\n};\nconst unique = (columnId, leafRows) => {\n  return Array.from(new Set(leafRows.map(d => d.getValue(columnId))).values());\n};\nconst uniqueCount = (columnId, leafRows) => {\n  return new Set(leafRows.map(d => d.getValue(columnId))).size;\n};\nconst count = (_columnId, leafRows) => {\n  return leafRows.length;\n};\nconst aggregationFns = {\n  sum,\n  min,\n  max,\n  extent,\n  mean,\n  median,\n  unique,\n  uniqueCount,\n  count\n};\n\n//\n\nconst ColumnGrouping = {\n  getDefaultColumnDef: () => {\n    return {\n      aggregatedCell: props => {\n        var _toString, _props$getValue;\n        return (_toString = (_props$getValue = props.getValue()) == null || _props$getValue.toString == null ? void 0 : _props$getValue.toString()) != null ? _toString : null;\n      },\n      aggregationFn: 'auto'\n    };\n  },\n  getInitialState: state => {\n    return {\n      grouping: [],\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onGroupingChange: makeStateUpdater('grouping', table),\n      groupedColumnMode: 'reorder'\n    };\n  },\n  createColumn: (column, table) => {\n    column.toggleGrouping = () => {\n      table.setGrouping(old => {\n        // Find any existing grouping for this column\n        if (old != null && old.includes(column.id)) {\n          return old.filter(d => d !== column.id);\n        }\n        return [...(old != null ? old : []), column.id];\n      });\n    };\n    column.getCanGroup = () => {\n      var _column$columnDef$ena, _table$options$enable;\n      return ((_column$columnDef$ena = column.columnDef.enableGrouping) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableGrouping) != null ? _table$options$enable : true) && (!!column.accessorFn || !!column.columnDef.getGroupingValue);\n    };\n    column.getIsGrouped = () => {\n      var _table$getState$group;\n      return (_table$getState$group = table.getState().grouping) == null ? void 0 : _table$getState$group.includes(column.id);\n    };\n    column.getGroupedIndex = () => {\n      var _table$getState$group2;\n      return (_table$getState$group2 = table.getState().grouping) == null ? void 0 : _table$getState$group2.indexOf(column.id);\n    };\n    column.getToggleGroupingHandler = () => {\n      const canGroup = column.getCanGroup();\n      return () => {\n        if (!canGroup) return;\n        column.toggleGrouping();\n      };\n    };\n    column.getAutoAggregationFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0];\n      const value = firstRow == null ? void 0 : firstRow.getValue(column.id);\n      if (typeof value === 'number') {\n        return aggregationFns.sum;\n      }\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        return aggregationFns.extent;\n      }\n    };\n    column.getAggregationFn = () => {\n      var _table$options$aggreg, _table$options$aggreg2;\n      if (!column) {\n        throw new Error();\n      }\n      return isFunction(column.columnDef.aggregationFn) ? column.columnDef.aggregationFn : column.columnDef.aggregationFn === 'auto' ? column.getAutoAggregationFn() : (_table$options$aggreg = (_table$options$aggreg2 = table.options.aggregationFns) == null ? void 0 : _table$options$aggreg2[column.columnDef.aggregationFn]) != null ? _table$options$aggreg : aggregationFns[column.columnDef.aggregationFn];\n    };\n  },\n  createTable: table => {\n    table.setGrouping = updater => table.options.onGroupingChange == null ? void 0 : table.options.onGroupingChange(updater);\n    table.resetGrouping = defaultState => {\n      var _table$initialState$g, _table$initialState;\n      table.setGrouping(defaultState ? [] : (_table$initialState$g = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.grouping) != null ? _table$initialState$g : []);\n    };\n    table.getPreGroupedRowModel = () => table.getFilteredRowModel();\n    table.getGroupedRowModel = () => {\n      if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {\n        table._getGroupedRowModel = table.options.getGroupedRowModel(table);\n      }\n      if (table.options.manualGrouping || !table._getGroupedRowModel) {\n        return table.getPreGroupedRowModel();\n      }\n      return table._getGroupedRowModel();\n    };\n  },\n  createRow: (row, table) => {\n    row.getIsGrouped = () => !!row.groupingColumnId;\n    row.getGroupingValue = columnId => {\n      if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n        return row._groupingValuesCache[columnId];\n      }\n      const column = table.getColumn(columnId);\n      if (!(column != null && column.columnDef.getGroupingValue)) {\n        return row.getValue(columnId);\n      }\n      row._groupingValuesCache[columnId] = column.columnDef.getGroupingValue(row.original);\n      return row._groupingValuesCache[columnId];\n    };\n    row._groupingValuesCache = {};\n  },\n  createCell: (cell, column, row, table) => {\n    cell.getIsGrouped = () => column.getIsGrouped() && column.id === row.groupingColumnId;\n    cell.getIsPlaceholder = () => !cell.getIsGrouped() && column.getIsGrouped();\n    cell.getIsAggregated = () => {\n      var _row$subRows;\n      return !cell.getIsGrouped() && !cell.getIsPlaceholder() && !!((_row$subRows = row.subRows) != null && _row$subRows.length);\n    };\n  }\n};\nfunction orderColumns(leafColumns, grouping, groupedColumnMode) {\n  if (!(grouping != null && grouping.length) || !groupedColumnMode) {\n    return leafColumns;\n  }\n  const nonGroupingColumns = leafColumns.filter(col => !grouping.includes(col.id));\n  if (groupedColumnMode === 'remove') {\n    return nonGroupingColumns;\n  }\n  const groupingColumns = grouping.map(g => leafColumns.find(col => col.id === g)).filter(Boolean);\n  return [...groupingColumns, ...nonGroupingColumns];\n}\n\n//\n\nconst ColumnOrdering = {\n  getInitialState: state => {\n    return {\n      columnOrder: [],\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnOrderChange: makeStateUpdater('columnOrder', table)\n    };\n  },\n  createColumn: (column, table) => {\n    column.getIndex = memo(position => [_getVisibleLeafColumns(table, position)], columns => columns.findIndex(d => d.id === column.id), getMemoOptions(table.options, 'debugColumns', 'getIndex'));\n    column.getIsFirstColumn = position => {\n      var _columns$;\n      const columns = _getVisibleLeafColumns(table, position);\n      return ((_columns$ = columns[0]) == null ? void 0 : _columns$.id) === column.id;\n    };\n    column.getIsLastColumn = position => {\n      var _columns;\n      const columns = _getVisibleLeafColumns(table, position);\n      return ((_columns = columns[columns.length - 1]) == null ? void 0 : _columns.id) === column.id;\n    };\n  },\n  createTable: table => {\n    table.setColumnOrder = updater => table.options.onColumnOrderChange == null ? void 0 : table.options.onColumnOrderChange(updater);\n    table.resetColumnOrder = defaultState => {\n      var _table$initialState$c;\n      table.setColumnOrder(defaultState ? [] : (_table$initialState$c = table.initialState.columnOrder) != null ? _table$initialState$c : []);\n    };\n    table._getOrderColumnsFn = memo(() => [table.getState().columnOrder, table.getState().grouping, table.options.groupedColumnMode], (columnOrder, grouping, groupedColumnMode) => columns => {\n      // Sort grouped columns to the start of the column list\n      // before the headers are built\n      let orderedColumns = [];\n\n      // If there is no order, return the normal columns\n      if (!(columnOrder != null && columnOrder.length)) {\n        orderedColumns = columns;\n      } else {\n        const columnOrderCopy = [...columnOrder];\n\n        // If there is an order, make a copy of the columns\n        const columnsCopy = [...columns];\n\n        // And make a new ordered array of the columns\n\n        // Loop over the columns and place them in order into the new array\n        while (columnsCopy.length && columnOrderCopy.length) {\n          const targetColumnId = columnOrderCopy.shift();\n          const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId);\n          if (foundIndex > -1) {\n            orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]);\n          }\n        }\n\n        // If there are any columns left, add them to the end\n        orderedColumns = [...orderedColumns, ...columnsCopy];\n      }\n      return orderColumns(orderedColumns, grouping, groupedColumnMode);\n    }, getMemoOptions(table.options, 'debugTable', '_getOrderColumnsFn'));\n  }\n};\n\n//\n\nconst getDefaultColumnPinningState = () => ({\n  left: [],\n  right: []\n});\nconst ColumnPinning = {\n  getInitialState: state => {\n    return {\n      columnPinning: getDefaultColumnPinningState(),\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnPinningChange: makeStateUpdater('columnPinning', table)\n    };\n  },\n  createColumn: (column, table) => {\n    column.pin = position => {\n      const columnIds = column.getLeafColumns().map(d => d.id).filter(Boolean);\n      table.setColumnPinning(old => {\n        var _old$left3, _old$right3;\n        if (position === 'right') {\n          var _old$left, _old$right;\n          return {\n            left: ((_old$left = old == null ? void 0 : old.left) != null ? _old$left : []).filter(d => !(columnIds != null && columnIds.includes(d))),\n            right: [...((_old$right = old == null ? void 0 : old.right) != null ? _old$right : []).filter(d => !(columnIds != null && columnIds.includes(d))), ...columnIds]\n          };\n        }\n        if (position === 'left') {\n          var _old$left2, _old$right2;\n          return {\n            left: [...((_old$left2 = old == null ? void 0 : old.left) != null ? _old$left2 : []).filter(d => !(columnIds != null && columnIds.includes(d))), ...columnIds],\n            right: ((_old$right2 = old == null ? void 0 : old.right) != null ? _old$right2 : []).filter(d => !(columnIds != null && columnIds.includes(d)))\n          };\n        }\n        return {\n          left: ((_old$left3 = old == null ? void 0 : old.left) != null ? _old$left3 : []).filter(d => !(columnIds != null && columnIds.includes(d))),\n          right: ((_old$right3 = old == null ? void 0 : old.right) != null ? _old$right3 : []).filter(d => !(columnIds != null && columnIds.includes(d)))\n        };\n      });\n    };\n    column.getCanPin = () => {\n      const leafColumns = column.getLeafColumns();\n      return leafColumns.some(d => {\n        var _d$columnDef$enablePi, _ref, _table$options$enable;\n        return ((_d$columnDef$enablePi = d.columnDef.enablePinning) != null ? _d$columnDef$enablePi : true) && ((_ref = (_table$options$enable = table.options.enableColumnPinning) != null ? _table$options$enable : table.options.enablePinning) != null ? _ref : true);\n      });\n    };\n    column.getIsPinned = () => {\n      const leafColumnIds = column.getLeafColumns().map(d => d.id);\n      const {\n        left,\n        right\n      } = table.getState().columnPinning;\n      const isLeft = leafColumnIds.some(d => left == null ? void 0 : left.includes(d));\n      const isRight = leafColumnIds.some(d => right == null ? void 0 : right.includes(d));\n      return isLeft ? 'left' : isRight ? 'right' : false;\n    };\n    column.getPinnedIndex = () => {\n      var _table$getState$colum, _table$getState$colum2;\n      const position = column.getIsPinned();\n      return position ? (_table$getState$colum = (_table$getState$colum2 = table.getState().columnPinning) == null || (_table$getState$colum2 = _table$getState$colum2[position]) == null ? void 0 : _table$getState$colum2.indexOf(column.id)) != null ? _table$getState$colum : -1 : 0;\n    };\n  },\n  createRow: (row, table) => {\n    row.getCenterVisibleCells = memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allCells, left, right) => {\n      const leftAndRight = [...(left != null ? left : []), ...(right != null ? right : [])];\n      return allCells.filter(d => !leftAndRight.includes(d.column.id));\n    }, getMemoOptions(table.options, 'debugRows', 'getCenterVisibleCells'));\n    row.getLeftVisibleCells = memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left], (allCells, left) => {\n      const cells = (left != null ? left : []).map(columnId => allCells.find(cell => cell.column.id === columnId)).filter(Boolean).map(d => ({\n        ...d,\n        position: 'left'\n      }));\n      return cells;\n    }, getMemoOptions(table.options, 'debugRows', 'getLeftVisibleCells'));\n    row.getRightVisibleCells = memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.right], (allCells, right) => {\n      const cells = (right != null ? right : []).map(columnId => allCells.find(cell => cell.column.id === columnId)).filter(Boolean).map(d => ({\n        ...d,\n        position: 'right'\n      }));\n      return cells;\n    }, getMemoOptions(table.options, 'debugRows', 'getRightVisibleCells'));\n  },\n  createTable: table => {\n    table.setColumnPinning = updater => table.options.onColumnPinningChange == null ? void 0 : table.options.onColumnPinningChange(updater);\n    table.resetColumnPinning = defaultState => {\n      var _table$initialState$c, _table$initialState;\n      return table.setColumnPinning(defaultState ? getDefaultColumnPinningState() : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnPinning) != null ? _table$initialState$c : getDefaultColumnPinningState());\n    };\n    table.getIsSomeColumnsPinned = position => {\n      var _pinningState$positio;\n      const pinningState = table.getState().columnPinning;\n      if (!position) {\n        var _pinningState$left, _pinningState$right;\n        return Boolean(((_pinningState$left = pinningState.left) == null ? void 0 : _pinningState$left.length) || ((_pinningState$right = pinningState.right) == null ? void 0 : _pinningState$right.length));\n      }\n      return Boolean((_pinningState$positio = pinningState[position]) == null ? void 0 : _pinningState$positio.length);\n    };\n    table.getLeftLeafColumns = memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left], (allColumns, left) => {\n      return (left != null ? left : []).map(columnId => allColumns.find(column => column.id === columnId)).filter(Boolean);\n    }, getMemoOptions(table.options, 'debugColumns', 'getLeftLeafColumns'));\n    table.getRightLeafColumns = memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.right], (allColumns, right) => {\n      return (right != null ? right : []).map(columnId => allColumns.find(column => column.id === columnId)).filter(Boolean);\n    }, getMemoOptions(table.options, 'debugColumns', 'getRightLeafColumns'));\n    table.getCenterLeafColumns = memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, left, right) => {\n      const leftAndRight = [...(left != null ? left : []), ...(right != null ? right : [])];\n      return allColumns.filter(d => !leftAndRight.includes(d.id));\n    }, getMemoOptions(table.options, 'debugColumns', 'getCenterLeafColumns'));\n  }\n};\n\nfunction safelyAccessDocument(_document) {\n  return _document || (typeof document !== 'undefined' ? document : null);\n}\n\n//\n\n//\n\nconst defaultColumnSizing = {\n  size: 150,\n  minSize: 20,\n  maxSize: Number.MAX_SAFE_INTEGER\n};\nconst getDefaultColumnSizingInfoState = () => ({\n  startOffset: null,\n  startSize: null,\n  deltaOffset: null,\n  deltaPercentage: null,\n  isResizingColumn: false,\n  columnSizingStart: []\n});\nconst ColumnSizing = {\n  getDefaultColumnDef: () => {\n    return defaultColumnSizing;\n  },\n  getInitialState: state => {\n    return {\n      columnSizing: {},\n      columnSizingInfo: getDefaultColumnSizingInfoState(),\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      columnResizeMode: 'onEnd',\n      columnResizeDirection: 'ltr',\n      onColumnSizingChange: makeStateUpdater('columnSizing', table),\n      onColumnSizingInfoChange: makeStateUpdater('columnSizingInfo', table)\n    };\n  },\n  createColumn: (column, table) => {\n    column.getSize = () => {\n      var _column$columnDef$min, _ref, _column$columnDef$max;\n      const columnSize = table.getState().columnSizing[column.id];\n      return Math.min(Math.max((_column$columnDef$min = column.columnDef.minSize) != null ? _column$columnDef$min : defaultColumnSizing.minSize, (_ref = columnSize != null ? columnSize : column.columnDef.size) != null ? _ref : defaultColumnSizing.size), (_column$columnDef$max = column.columnDef.maxSize) != null ? _column$columnDef$max : defaultColumnSizing.maxSize);\n    };\n    column.getStart = memo(position => [position, _getVisibleLeafColumns(table, position), table.getState().columnSizing], (position, columns) => columns.slice(0, column.getIndex(position)).reduce((sum, column) => sum + column.getSize(), 0), getMemoOptions(table.options, 'debugColumns', 'getStart'));\n    column.getAfter = memo(position => [position, _getVisibleLeafColumns(table, position), table.getState().columnSizing], (position, columns) => columns.slice(column.getIndex(position) + 1).reduce((sum, column) => sum + column.getSize(), 0), getMemoOptions(table.options, 'debugColumns', 'getAfter'));\n    column.resetSize = () => {\n      table.setColumnSizing(_ref2 => {\n        let {\n          [column.id]: _,\n          ...rest\n        } = _ref2;\n        return rest;\n      });\n    };\n    column.getCanResize = () => {\n      var _column$columnDef$ena, _table$options$enable;\n      return ((_column$columnDef$ena = column.columnDef.enableResizing) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnResizing) != null ? _table$options$enable : true);\n    };\n    column.getIsResizing = () => {\n      return table.getState().columnSizingInfo.isResizingColumn === column.id;\n    };\n  },\n  createHeader: (header, table) => {\n    header.getSize = () => {\n      let sum = 0;\n      const recurse = header => {\n        if (header.subHeaders.length) {\n          header.subHeaders.forEach(recurse);\n        } else {\n          var _header$column$getSiz;\n          sum += (_header$column$getSiz = header.column.getSize()) != null ? _header$column$getSiz : 0;\n        }\n      };\n      recurse(header);\n      return sum;\n    };\n    header.getStart = () => {\n      if (header.index > 0) {\n        const prevSiblingHeader = header.headerGroup.headers[header.index - 1];\n        return prevSiblingHeader.getStart() + prevSiblingHeader.getSize();\n      }\n      return 0;\n    };\n    header.getResizeHandler = _contextDocument => {\n      const column = table.getColumn(header.column.id);\n      const canResize = column == null ? void 0 : column.getCanResize();\n      return e => {\n        if (!column || !canResize) {\n          return;\n        }\n        e.persist == null || e.persist();\n        if (isTouchStartEvent(e)) {\n          // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n          if (e.touches && e.touches.length > 1) {\n            return;\n          }\n        }\n        const startSize = header.getSize();\n        const columnSizingStart = header ? header.getLeafHeaders().map(d => [d.column.id, d.column.getSize()]) : [[column.id, column.getSize()]];\n        const clientX = isTouchStartEvent(e) ? Math.round(e.touches[0].clientX) : e.clientX;\n        const newColumnSizing = {};\n        const updateOffset = (eventType, clientXPos) => {\n          if (typeof clientXPos !== 'number') {\n            return;\n          }\n          table.setColumnSizingInfo(old => {\n            var _old$startOffset, _old$startSize;\n            const deltaDirection = table.options.columnResizeDirection === 'rtl' ? -1 : 1;\n            const deltaOffset = (clientXPos - ((_old$startOffset = old == null ? void 0 : old.startOffset) != null ? _old$startOffset : 0)) * deltaDirection;\n            const deltaPercentage = Math.max(deltaOffset / ((_old$startSize = old == null ? void 0 : old.startSize) != null ? _old$startSize : 0), -0.999999);\n            old.columnSizingStart.forEach(_ref3 => {\n              let [columnId, headerSize] = _ref3;\n              newColumnSizing[columnId] = Math.round(Math.max(headerSize + headerSize * deltaPercentage, 0) * 100) / 100;\n            });\n            return {\n              ...old,\n              deltaOffset,\n              deltaPercentage\n            };\n          });\n          if (table.options.columnResizeMode === 'onChange' || eventType === 'end') {\n            table.setColumnSizing(old => ({\n              ...old,\n              ...newColumnSizing\n            }));\n          }\n        };\n        const onMove = clientXPos => updateOffset('move', clientXPos);\n        const onEnd = clientXPos => {\n          updateOffset('end', clientXPos);\n          table.setColumnSizingInfo(old => ({\n            ...old,\n            isResizingColumn: false,\n            startOffset: null,\n            startSize: null,\n            deltaOffset: null,\n            deltaPercentage: null,\n            columnSizingStart: []\n          }));\n        };\n        const contextDocument = safelyAccessDocument(_contextDocument);\n        const mouseEvents = {\n          moveHandler: e => onMove(e.clientX),\n          upHandler: e => {\n            contextDocument == null || contextDocument.removeEventListener('mousemove', mouseEvents.moveHandler);\n            contextDocument == null || contextDocument.removeEventListener('mouseup', mouseEvents.upHandler);\n            onEnd(e.clientX);\n          }\n        };\n        const touchEvents = {\n          moveHandler: e => {\n            if (e.cancelable) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n            onMove(e.touches[0].clientX);\n            return false;\n          },\n          upHandler: e => {\n            var _e$touches$;\n            contextDocument == null || contextDocument.removeEventListener('touchmove', touchEvents.moveHandler);\n            contextDocument == null || contextDocument.removeEventListener('touchend', touchEvents.upHandler);\n            if (e.cancelable) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n            onEnd((_e$touches$ = e.touches[0]) == null ? void 0 : _e$touches$.clientX);\n          }\n        };\n        const passiveIfSupported = passiveEventSupported() ? {\n          passive: false\n        } : false;\n        if (isTouchStartEvent(e)) {\n          contextDocument == null || contextDocument.addEventListener('touchmove', touchEvents.moveHandler, passiveIfSupported);\n          contextDocument == null || contextDocument.addEventListener('touchend', touchEvents.upHandler, passiveIfSupported);\n        } else {\n          contextDocument == null || contextDocument.addEventListener('mousemove', mouseEvents.moveHandler, passiveIfSupported);\n          contextDocument == null || contextDocument.addEventListener('mouseup', mouseEvents.upHandler, passiveIfSupported);\n        }\n        table.setColumnSizingInfo(old => ({\n          ...old,\n          startOffset: clientX,\n          startSize,\n          deltaOffset: 0,\n          deltaPercentage: 0,\n          columnSizingStart,\n          isResizingColumn: column.id\n        }));\n      };\n    };\n  },\n  createTable: table => {\n    table.setColumnSizing = updater => table.options.onColumnSizingChange == null ? void 0 : table.options.onColumnSizingChange(updater);\n    table.setColumnSizingInfo = updater => table.options.onColumnSizingInfoChange == null ? void 0 : table.options.onColumnSizingInfoChange(updater);\n    table.resetColumnSizing = defaultState => {\n      var _table$initialState$c;\n      table.setColumnSizing(defaultState ? {} : (_table$initialState$c = table.initialState.columnSizing) != null ? _table$initialState$c : {});\n    };\n    table.resetHeaderSizeInfo = defaultState => {\n      var _table$initialState$c2;\n      table.setColumnSizingInfo(defaultState ? getDefaultColumnSizingInfoState() : (_table$initialState$c2 = table.initialState.columnSizingInfo) != null ? _table$initialState$c2 : getDefaultColumnSizingInfoState());\n    };\n    table.getTotalSize = () => {\n      var _table$getHeaderGroup, _table$getHeaderGroup2;\n      return (_table$getHeaderGroup = (_table$getHeaderGroup2 = table.getHeaderGroups()[0]) == null ? void 0 : _table$getHeaderGroup2.headers.reduce((sum, header) => {\n        return sum + header.getSize();\n      }, 0)) != null ? _table$getHeaderGroup : 0;\n    };\n    table.getLeftTotalSize = () => {\n      var _table$getLeftHeaderG, _table$getLeftHeaderG2;\n      return (_table$getLeftHeaderG = (_table$getLeftHeaderG2 = table.getLeftHeaderGroups()[0]) == null ? void 0 : _table$getLeftHeaderG2.headers.reduce((sum, header) => {\n        return sum + header.getSize();\n      }, 0)) != null ? _table$getLeftHeaderG : 0;\n    };\n    table.getCenterTotalSize = () => {\n      var _table$getCenterHeade, _table$getCenterHeade2;\n      return (_table$getCenterHeade = (_table$getCenterHeade2 = table.getCenterHeaderGroups()[0]) == null ? void 0 : _table$getCenterHeade2.headers.reduce((sum, header) => {\n        return sum + header.getSize();\n      }, 0)) != null ? _table$getCenterHeade : 0;\n    };\n    table.getRightTotalSize = () => {\n      var _table$getRightHeader, _table$getRightHeader2;\n      return (_table$getRightHeader = (_table$getRightHeader2 = table.getRightHeaderGroups()[0]) == null ? void 0 : _table$getRightHeader2.headers.reduce((sum, header) => {\n        return sum + header.getSize();\n      }, 0)) != null ? _table$getRightHeader : 0;\n    };\n  }\n};\nlet passiveSupported = null;\nfunction passiveEventSupported() {\n  if (typeof passiveSupported === 'boolean') return passiveSupported;\n  let supported = false;\n  try {\n    const options = {\n      get passive() {\n        supported = true;\n        return false;\n      }\n    };\n    const noop = () => {};\n    window.addEventListener('test', noop, options);\n    window.removeEventListener('test', noop);\n  } catch (err) {\n    supported = false;\n  }\n  passiveSupported = supported;\n  return passiveSupported;\n}\nfunction isTouchStartEvent(e) {\n  return e.type === 'touchstart';\n}\n\n//\n\nconst ColumnVisibility = {\n  getInitialState: state => {\n    return {\n      columnVisibility: {},\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnVisibilityChange: makeStateUpdater('columnVisibility', table)\n    };\n  },\n  createColumn: (column, table) => {\n    column.toggleVisibility = value => {\n      if (column.getCanHide()) {\n        table.setColumnVisibility(old => ({\n          ...old,\n          [column.id]: value != null ? value : !column.getIsVisible()\n        }));\n      }\n    };\n    column.getIsVisible = () => {\n      var _ref, _table$getState$colum;\n      const childColumns = column.columns;\n      return (_ref = childColumns.length ? childColumns.some(c => c.getIsVisible()) : (_table$getState$colum = table.getState().columnVisibility) == null ? void 0 : _table$getState$colum[column.id]) != null ? _ref : true;\n    };\n    column.getCanHide = () => {\n      var _column$columnDef$ena, _table$options$enable;\n      return ((_column$columnDef$ena = column.columnDef.enableHiding) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableHiding) != null ? _table$options$enable : true);\n    };\n    column.getToggleVisibilityHandler = () => {\n      return e => {\n        column.toggleVisibility == null || column.toggleVisibility(e.target.checked);\n      };\n    };\n  },\n  createRow: (row, table) => {\n    row._getAllVisibleCells = memo(() => [row.getAllCells(), table.getState().columnVisibility], cells => {\n      return cells.filter(cell => cell.column.getIsVisible());\n    }, getMemoOptions(table.options, 'debugRows', '_getAllVisibleCells'));\n    row.getVisibleCells = memo(() => [row.getLeftVisibleCells(), row.getCenterVisibleCells(), row.getRightVisibleCells()], (left, center, right) => [...left, ...center, ...right], getMemoOptions(table.options, 'debugRows', 'getVisibleCells'));\n  },\n  createTable: table => {\n    const makeVisibleColumnsMethod = (key, getColumns) => {\n      return memo(() => [getColumns(), getColumns().filter(d => d.getIsVisible()).map(d => d.id).join('_')], columns => {\n        return columns.filter(d => d.getIsVisible == null ? void 0 : d.getIsVisible());\n      }, getMemoOptions(table.options, 'debugColumns', key));\n    };\n    table.getVisibleFlatColumns = makeVisibleColumnsMethod('getVisibleFlatColumns', () => table.getAllFlatColumns());\n    table.getVisibleLeafColumns = makeVisibleColumnsMethod('getVisibleLeafColumns', () => table.getAllLeafColumns());\n    table.getLeftVisibleLeafColumns = makeVisibleColumnsMethod('getLeftVisibleLeafColumns', () => table.getLeftLeafColumns());\n    table.getRightVisibleLeafColumns = makeVisibleColumnsMethod('getRightVisibleLeafColumns', () => table.getRightLeafColumns());\n    table.getCenterVisibleLeafColumns = makeVisibleColumnsMethod('getCenterVisibleLeafColumns', () => table.getCenterLeafColumns());\n    table.setColumnVisibility = updater => table.options.onColumnVisibilityChange == null ? void 0 : table.options.onColumnVisibilityChange(updater);\n    table.resetColumnVisibility = defaultState => {\n      var _table$initialState$c;\n      table.setColumnVisibility(defaultState ? {} : (_table$initialState$c = table.initialState.columnVisibility) != null ? _table$initialState$c : {});\n    };\n    table.toggleAllColumnsVisible = value => {\n      var _value;\n      value = (_value = value) != null ? _value : !table.getIsAllColumnsVisible();\n      table.setColumnVisibility(table.getAllLeafColumns().reduce((obj, column) => ({\n        ...obj,\n        [column.id]: !value ? !(column.getCanHide != null && column.getCanHide()) : value\n      }), {}));\n    };\n    table.getIsAllColumnsVisible = () => !table.getAllLeafColumns().some(column => !(column.getIsVisible != null && column.getIsVisible()));\n    table.getIsSomeColumnsVisible = () => table.getAllLeafColumns().some(column => column.getIsVisible == null ? void 0 : column.getIsVisible());\n    table.getToggleAllColumnsVisibilityHandler = () => {\n      return e => {\n        var _target;\n        table.toggleAllColumnsVisible((_target = e.target) == null ? void 0 : _target.checked);\n      };\n    };\n  }\n};\nfunction _getVisibleLeafColumns(table, position) {\n  return !position ? table.getVisibleLeafColumns() : position === 'center' ? table.getCenterVisibleLeafColumns() : position === 'left' ? table.getLeftVisibleLeafColumns() : table.getRightVisibleLeafColumns();\n}\n\n//\n\nconst GlobalFaceting = {\n  createTable: table => {\n    table._getGlobalFacetedRowModel = table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, '__global__');\n    table.getGlobalFacetedRowModel = () => {\n      if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {\n        return table.getPreFilteredRowModel();\n      }\n      return table._getGlobalFacetedRowModel();\n    };\n    table._getGlobalFacetedUniqueValues = table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, '__global__');\n    table.getGlobalFacetedUniqueValues = () => {\n      if (!table._getGlobalFacetedUniqueValues) {\n        return new Map();\n      }\n      return table._getGlobalFacetedUniqueValues();\n    };\n    table._getGlobalFacetedMinMaxValues = table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, '__global__');\n    table.getGlobalFacetedMinMaxValues = () => {\n      if (!table._getGlobalFacetedMinMaxValues) {\n        return;\n      }\n      return table._getGlobalFacetedMinMaxValues();\n    };\n  }\n};\n\n//\n\nconst GlobalFiltering = {\n  getInitialState: state => {\n    return {\n      globalFilter: undefined,\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onGlobalFilterChange: makeStateUpdater('globalFilter', table),\n      globalFilterFn: 'auto',\n      getColumnCanGlobalFilter: column => {\n        var _table$getCoreRowMode;\n        const value = (_table$getCoreRowMode = table.getCoreRowModel().flatRows[0]) == null || (_table$getCoreRowMode = _table$getCoreRowMode._getAllCellsByColumnId()[column.id]) == null ? void 0 : _table$getCoreRowMode.getValue();\n        return typeof value === 'string' || typeof value === 'number';\n      }\n    };\n  },\n  createColumn: (column, table) => {\n    column.getCanGlobalFilter = () => {\n      var _column$columnDef$ena, _table$options$enable, _table$options$enable2, _table$options$getCol;\n      return ((_column$columnDef$ena = column.columnDef.enableGlobalFilter) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableGlobalFilter) != null ? _table$options$enable : true) && ((_table$options$enable2 = table.options.enableFilters) != null ? _table$options$enable2 : true) && ((_table$options$getCol = table.options.getColumnCanGlobalFilter == null ? void 0 : table.options.getColumnCanGlobalFilter(column)) != null ? _table$options$getCol : true) && !!column.accessorFn;\n    };\n  },\n  createTable: table => {\n    table.getGlobalAutoFilterFn = () => {\n      return filterFns.includesString;\n    };\n    table.getGlobalFilterFn = () => {\n      var _table$options$filter, _table$options$filter2;\n      const {\n        globalFilterFn: globalFilterFn\n      } = table.options;\n      return isFunction(globalFilterFn) ? globalFilterFn : globalFilterFn === 'auto' ? table.getGlobalAutoFilterFn() : (_table$options$filter = (_table$options$filter2 = table.options.filterFns) == null ? void 0 : _table$options$filter2[globalFilterFn]) != null ? _table$options$filter : filterFns[globalFilterFn];\n    };\n    table.setGlobalFilter = updater => {\n      table.options.onGlobalFilterChange == null || table.options.onGlobalFilterChange(updater);\n    };\n    table.resetGlobalFilter = defaultState => {\n      table.setGlobalFilter(defaultState ? undefined : table.initialState.globalFilter);\n    };\n  }\n};\n\n//\n\nconst RowExpanding = {\n  getInitialState: state => {\n    return {\n      expanded: {},\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onExpandedChange: makeStateUpdater('expanded', table),\n      paginateExpandedRows: true\n    };\n  },\n  createTable: table => {\n    let registered = false;\n    let queued = false;\n    table._autoResetExpanded = () => {\n      var _ref, _table$options$autoRe;\n      if (!registered) {\n        table._queue(() => {\n          registered = true;\n        });\n        return;\n      }\n      if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetExpanded) != null ? _ref : !table.options.manualExpanding) {\n        if (queued) return;\n        queued = true;\n        table._queue(() => {\n          table.resetExpanded();\n          queued = false;\n        });\n      }\n    };\n    table.setExpanded = updater => table.options.onExpandedChange == null ? void 0 : table.options.onExpandedChange(updater);\n    table.toggleAllRowsExpanded = expanded => {\n      if (expanded != null ? expanded : !table.getIsAllRowsExpanded()) {\n        table.setExpanded(true);\n      } else {\n        table.setExpanded({});\n      }\n    };\n    table.resetExpanded = defaultState => {\n      var _table$initialState$e, _table$initialState;\n      table.setExpanded(defaultState ? {} : (_table$initialState$e = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.expanded) != null ? _table$initialState$e : {});\n    };\n    table.getCanSomeRowsExpand = () => {\n      return table.getPrePaginationRowModel().flatRows.some(row => row.getCanExpand());\n    };\n    table.getToggleAllRowsExpandedHandler = () => {\n      return e => {\n        e.persist == null || e.persist();\n        table.toggleAllRowsExpanded();\n      };\n    };\n    table.getIsSomeRowsExpanded = () => {\n      const expanded = table.getState().expanded;\n      return expanded === true || Object.values(expanded).some(Boolean);\n    };\n    table.getIsAllRowsExpanded = () => {\n      const expanded = table.getState().expanded;\n\n      // If expanded is true, save some cycles and return true\n      if (typeof expanded === 'boolean') {\n        return expanded === true;\n      }\n      if (!Object.keys(expanded).length) {\n        return false;\n      }\n\n      // If any row is not expanded, return false\n      if (table.getRowModel().flatRows.some(row => !row.getIsExpanded())) {\n        return false;\n      }\n\n      // They must all be expanded :shrug:\n      return true;\n    };\n    table.getExpandedDepth = () => {\n      let maxDepth = 0;\n      const rowIds = table.getState().expanded === true ? Object.keys(table.getRowModel().rowsById) : Object.keys(table.getState().expanded);\n      rowIds.forEach(id => {\n        const splitId = id.split('.');\n        maxDepth = Math.max(maxDepth, splitId.length);\n      });\n      return maxDepth;\n    };\n    table.getPreExpandedRowModel = () => table.getSortedRowModel();\n    table.getExpandedRowModel = () => {\n      if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {\n        table._getExpandedRowModel = table.options.getExpandedRowModel(table);\n      }\n      if (table.options.manualExpanding || !table._getExpandedRowModel) {\n        return table.getPreExpandedRowModel();\n      }\n      return table._getExpandedRowModel();\n    };\n  },\n  createRow: (row, table) => {\n    row.toggleExpanded = expanded => {\n      table.setExpanded(old => {\n        var _expanded;\n        const exists = old === true ? true : !!(old != null && old[row.id]);\n        let oldExpanded = {};\n        if (old === true) {\n          Object.keys(table.getRowModel().rowsById).forEach(rowId => {\n            oldExpanded[rowId] = true;\n          });\n        } else {\n          oldExpanded = old;\n        }\n        expanded = (_expanded = expanded) != null ? _expanded : !exists;\n        if (!exists && expanded) {\n          return {\n            ...oldExpanded,\n            [row.id]: true\n          };\n        }\n        if (exists && !expanded) {\n          const {\n            [row.id]: _,\n            ...rest\n          } = oldExpanded;\n          return rest;\n        }\n        return old;\n      });\n    };\n    row.getIsExpanded = () => {\n      var _table$options$getIsR;\n      const expanded = table.getState().expanded;\n      return !!((_table$options$getIsR = table.options.getIsRowExpanded == null ? void 0 : table.options.getIsRowExpanded(row)) != null ? _table$options$getIsR : expanded === true || (expanded == null ? void 0 : expanded[row.id]));\n    };\n    row.getCanExpand = () => {\n      var _table$options$getRow, _table$options$enable, _row$subRows;\n      return (_table$options$getRow = table.options.getRowCanExpand == null ? void 0 : table.options.getRowCanExpand(row)) != null ? _table$options$getRow : ((_table$options$enable = table.options.enableExpanding) != null ? _table$options$enable : true) && !!((_row$subRows = row.subRows) != null && _row$subRows.length);\n    };\n    row.getIsAllParentsExpanded = () => {\n      let isFullyExpanded = true;\n      let currentRow = row;\n      while (isFullyExpanded && currentRow.parentId) {\n        currentRow = table.getRow(currentRow.parentId, true);\n        isFullyExpanded = currentRow.getIsExpanded();\n      }\n      return isFullyExpanded;\n    };\n    row.getToggleExpandedHandler = () => {\n      const canExpand = row.getCanExpand();\n      return () => {\n        if (!canExpand) return;\n        row.toggleExpanded();\n      };\n    };\n  }\n};\n\n//\n\nconst defaultPageIndex = 0;\nconst defaultPageSize = 10;\nconst getDefaultPaginationState = () => ({\n  pageIndex: defaultPageIndex,\n  pageSize: defaultPageSize\n});\nconst RowPagination = {\n  getInitialState: state => {\n    return {\n      ...state,\n      pagination: {\n        ...getDefaultPaginationState(),\n        ...(state == null ? void 0 : state.pagination)\n      }\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onPaginationChange: makeStateUpdater('pagination', table)\n    };\n  },\n  createTable: table => {\n    let registered = false;\n    let queued = false;\n    table._autoResetPageIndex = () => {\n      var _ref, _table$options$autoRe;\n      if (!registered) {\n        table._queue(() => {\n          registered = true;\n        });\n        return;\n      }\n      if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetPageIndex) != null ? _ref : !table.options.manualPagination) {\n        if (queued) return;\n        queued = true;\n        table._queue(() => {\n          table.resetPageIndex();\n          queued = false;\n        });\n      }\n    };\n    table.setPagination = updater => {\n      const safeUpdater = old => {\n        let newState = functionalUpdate(updater, old);\n        return newState;\n      };\n      return table.options.onPaginationChange == null ? void 0 : table.options.onPaginationChange(safeUpdater);\n    };\n    table.resetPagination = defaultState => {\n      var _table$initialState$p;\n      table.setPagination(defaultState ? getDefaultPaginationState() : (_table$initialState$p = table.initialState.pagination) != null ? _table$initialState$p : getDefaultPaginationState());\n    };\n    table.setPageIndex = updater => {\n      table.setPagination(old => {\n        let pageIndex = functionalUpdate(updater, old.pageIndex);\n        const maxPageIndex = typeof table.options.pageCount === 'undefined' || table.options.pageCount === -1 ? Number.MAX_SAFE_INTEGER : table.options.pageCount - 1;\n        pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex));\n        return {\n          ...old,\n          pageIndex\n        };\n      });\n    };\n    table.resetPageIndex = defaultState => {\n      var _table$initialState$p2, _table$initialState;\n      table.setPageIndex(defaultState ? defaultPageIndex : (_table$initialState$p2 = (_table$initialState = table.initialState) == null || (_table$initialState = _table$initialState.pagination) == null ? void 0 : _table$initialState.pageIndex) != null ? _table$initialState$p2 : defaultPageIndex);\n    };\n    table.resetPageSize = defaultState => {\n      var _table$initialState$p3, _table$initialState2;\n      table.setPageSize(defaultState ? defaultPageSize : (_table$initialState$p3 = (_table$initialState2 = table.initialState) == null || (_table$initialState2 = _table$initialState2.pagination) == null ? void 0 : _table$initialState2.pageSize) != null ? _table$initialState$p3 : defaultPageSize);\n    };\n    table.setPageSize = updater => {\n      table.setPagination(old => {\n        const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize));\n        const topRowIndex = old.pageSize * old.pageIndex;\n        const pageIndex = Math.floor(topRowIndex / pageSize);\n        return {\n          ...old,\n          pageIndex,\n          pageSize\n        };\n      });\n    };\n    //deprecated\n    table.setPageCount = updater => table.setPagination(old => {\n      var _table$options$pageCo;\n      let newPageCount = functionalUpdate(updater, (_table$options$pageCo = table.options.pageCount) != null ? _table$options$pageCo : -1);\n      if (typeof newPageCount === 'number') {\n        newPageCount = Math.max(-1, newPageCount);\n      }\n      return {\n        ...old,\n        pageCount: newPageCount\n      };\n    });\n    table.getPageOptions = memo(() => [table.getPageCount()], pageCount => {\n      let pageOptions = [];\n      if (pageCount && pageCount > 0) {\n        pageOptions = [...new Array(pageCount)].fill(null).map((_, i) => i);\n      }\n      return pageOptions;\n    }, getMemoOptions(table.options, 'debugTable', 'getPageOptions'));\n    table.getCanPreviousPage = () => table.getState().pagination.pageIndex > 0;\n    table.getCanNextPage = () => {\n      const {\n        pageIndex\n      } = table.getState().pagination;\n      const pageCount = table.getPageCount();\n      if (pageCount === -1) {\n        return true;\n      }\n      if (pageCount === 0) {\n        return false;\n      }\n      return pageIndex < pageCount - 1;\n    };\n    table.previousPage = () => {\n      return table.setPageIndex(old => old - 1);\n    };\n    table.nextPage = () => {\n      return table.setPageIndex(old => {\n        return old + 1;\n      });\n    };\n    table.firstPage = () => {\n      return table.setPageIndex(0);\n    };\n    table.lastPage = () => {\n      return table.setPageIndex(table.getPageCount() - 1);\n    };\n    table.getPrePaginationRowModel = () => table.getExpandedRowModel();\n    table.getPaginationRowModel = () => {\n      if (!table._getPaginationRowModel && table.options.getPaginationRowModel) {\n        table._getPaginationRowModel = table.options.getPaginationRowModel(table);\n      }\n      if (table.options.manualPagination || !table._getPaginationRowModel) {\n        return table.getPrePaginationRowModel();\n      }\n      return table._getPaginationRowModel();\n    };\n    table.getPageCount = () => {\n      var _table$options$pageCo2;\n      return (_table$options$pageCo2 = table.options.pageCount) != null ? _table$options$pageCo2 : Math.ceil(table.getRowCount() / table.getState().pagination.pageSize);\n    };\n    table.getRowCount = () => {\n      var _table$options$rowCou;\n      return (_table$options$rowCou = table.options.rowCount) != null ? _table$options$rowCou : table.getPrePaginationRowModel().rows.length;\n    };\n  }\n};\n\n//\n\nconst getDefaultRowPinningState = () => ({\n  top: [],\n  bottom: []\n});\nconst RowPinning = {\n  getInitialState: state => {\n    return {\n      rowPinning: getDefaultRowPinningState(),\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onRowPinningChange: makeStateUpdater('rowPinning', table)\n    };\n  },\n  createRow: (row, table) => {\n    row.pin = (position, includeLeafRows, includeParentRows) => {\n      const leafRowIds = includeLeafRows ? row.getLeafRows().map(_ref => {\n        let {\n          id\n        } = _ref;\n        return id;\n      }) : [];\n      const parentRowIds = includeParentRows ? row.getParentRows().map(_ref2 => {\n        let {\n          id\n        } = _ref2;\n        return id;\n      }) : [];\n      const rowIds = new Set([...parentRowIds, row.id, ...leafRowIds]);\n      table.setRowPinning(old => {\n        var _old$top3, _old$bottom3;\n        if (position === 'bottom') {\n          var _old$top, _old$bottom;\n          return {\n            top: ((_old$top = old == null ? void 0 : old.top) != null ? _old$top : []).filter(d => !(rowIds != null && rowIds.has(d))),\n            bottom: [...((_old$bottom = old == null ? void 0 : old.bottom) != null ? _old$bottom : []).filter(d => !(rowIds != null && rowIds.has(d))), ...Array.from(rowIds)]\n          };\n        }\n        if (position === 'top') {\n          var _old$top2, _old$bottom2;\n          return {\n            top: [...((_old$top2 = old == null ? void 0 : old.top) != null ? _old$top2 : []).filter(d => !(rowIds != null && rowIds.has(d))), ...Array.from(rowIds)],\n            bottom: ((_old$bottom2 = old == null ? void 0 : old.bottom) != null ? _old$bottom2 : []).filter(d => !(rowIds != null && rowIds.has(d)))\n          };\n        }\n        return {\n          top: ((_old$top3 = old == null ? void 0 : old.top) != null ? _old$top3 : []).filter(d => !(rowIds != null && rowIds.has(d))),\n          bottom: ((_old$bottom3 = old == null ? void 0 : old.bottom) != null ? _old$bottom3 : []).filter(d => !(rowIds != null && rowIds.has(d)))\n        };\n      });\n    };\n    row.getCanPin = () => {\n      var _ref3;\n      const {\n        enableRowPinning,\n        enablePinning\n      } = table.options;\n      if (typeof enableRowPinning === 'function') {\n        return enableRowPinning(row);\n      }\n      return (_ref3 = enableRowPinning != null ? enableRowPinning : enablePinning) != null ? _ref3 : true;\n    };\n    row.getIsPinned = () => {\n      const rowIds = [row.id];\n      const {\n        top,\n        bottom\n      } = table.getState().rowPinning;\n      const isTop = rowIds.some(d => top == null ? void 0 : top.includes(d));\n      const isBottom = rowIds.some(d => bottom == null ? void 0 : bottom.includes(d));\n      return isTop ? 'top' : isBottom ? 'bottom' : false;\n    };\n    row.getPinnedIndex = () => {\n      var _ref4, _visiblePinnedRowIds$;\n      const position = row.getIsPinned();\n      if (!position) return -1;\n      const visiblePinnedRowIds = (_ref4 = position === 'top' ? table.getTopRows() : table.getBottomRows()) == null ? void 0 : _ref4.map(_ref5 => {\n        let {\n          id\n        } = _ref5;\n        return id;\n      });\n      return (_visiblePinnedRowIds$ = visiblePinnedRowIds == null ? void 0 : visiblePinnedRowIds.indexOf(row.id)) != null ? _visiblePinnedRowIds$ : -1;\n    };\n  },\n  createTable: table => {\n    table.setRowPinning = updater => table.options.onRowPinningChange == null ? void 0 : table.options.onRowPinningChange(updater);\n    table.resetRowPinning = defaultState => {\n      var _table$initialState$r, _table$initialState;\n      return table.setRowPinning(defaultState ? getDefaultRowPinningState() : (_table$initialState$r = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.rowPinning) != null ? _table$initialState$r : getDefaultRowPinningState());\n    };\n    table.getIsSomeRowsPinned = position => {\n      var _pinningState$positio;\n      const pinningState = table.getState().rowPinning;\n      if (!position) {\n        var _pinningState$top, _pinningState$bottom;\n        return Boolean(((_pinningState$top = pinningState.top) == null ? void 0 : _pinningState$top.length) || ((_pinningState$bottom = pinningState.bottom) == null ? void 0 : _pinningState$bottom.length));\n      }\n      return Boolean((_pinningState$positio = pinningState[position]) == null ? void 0 : _pinningState$positio.length);\n    };\n    table._getPinnedRows = (visibleRows, pinnedRowIds, position) => {\n      var _table$options$keepPi;\n      const rows = ((_table$options$keepPi = table.options.keepPinnedRows) != null ? _table$options$keepPi : true) ?\n      //get all rows that are pinned even if they would not be otherwise visible\n      //account for expanded parent rows, but not pagination or filtering\n      (pinnedRowIds != null ? pinnedRowIds : []).map(rowId => {\n        const row = table.getRow(rowId, true);\n        return row.getIsAllParentsExpanded() ? row : null;\n      }) :\n      //else get only visible rows that are pinned\n      (pinnedRowIds != null ? pinnedRowIds : []).map(rowId => visibleRows.find(row => row.id === rowId));\n      return rows.filter(Boolean).map(d => ({\n        ...d,\n        position\n      }));\n    };\n    table.getTopRows = memo(() => [table.getRowModel().rows, table.getState().rowPinning.top], (allRows, topPinnedRowIds) => table._getPinnedRows(allRows, topPinnedRowIds, 'top'), getMemoOptions(table.options, 'debugRows', 'getTopRows'));\n    table.getBottomRows = memo(() => [table.getRowModel().rows, table.getState().rowPinning.bottom], (allRows, bottomPinnedRowIds) => table._getPinnedRows(allRows, bottomPinnedRowIds, 'bottom'), getMemoOptions(table.options, 'debugRows', 'getBottomRows'));\n    table.getCenterRows = memo(() => [table.getRowModel().rows, table.getState().rowPinning.top, table.getState().rowPinning.bottom], (allRows, top, bottom) => {\n      const topAndBottom = new Set([...(top != null ? top : []), ...(bottom != null ? bottom : [])]);\n      return allRows.filter(d => !topAndBottom.has(d.id));\n    }, getMemoOptions(table.options, 'debugRows', 'getCenterRows'));\n  }\n};\n\n//\n\nconst RowSelection = {\n  getInitialState: state => {\n    return {\n      rowSelection: {},\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onRowSelectionChange: makeStateUpdater('rowSelection', table),\n      enableRowSelection: true,\n      enableMultiRowSelection: true,\n      enableSubRowSelection: true\n      // enableGroupingRowSelection: false,\n      // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,\n      // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,\n    };\n  },\n  createTable: table => {\n    table.setRowSelection = updater => table.options.onRowSelectionChange == null ? void 0 : table.options.onRowSelectionChange(updater);\n    table.resetRowSelection = defaultState => {\n      var _table$initialState$r;\n      return table.setRowSelection(defaultState ? {} : (_table$initialState$r = table.initialState.rowSelection) != null ? _table$initialState$r : {});\n    };\n    table.toggleAllRowsSelected = value => {\n      table.setRowSelection(old => {\n        value = typeof value !== 'undefined' ? value : !table.getIsAllRowsSelected();\n        const rowSelection = {\n          ...old\n        };\n        const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows;\n\n        // We don't use `mutateRowIsSelected` here for performance reasons.\n        // All of the rows are flat already, so it wouldn't be worth it\n        if (value) {\n          preGroupedFlatRows.forEach(row => {\n            if (!row.getCanSelect()) {\n              return;\n            }\n            rowSelection[row.id] = true;\n          });\n        } else {\n          preGroupedFlatRows.forEach(row => {\n            delete rowSelection[row.id];\n          });\n        }\n        return rowSelection;\n      });\n    };\n    table.toggleAllPageRowsSelected = value => table.setRowSelection(old => {\n      const resolvedValue = typeof value !== 'undefined' ? value : !table.getIsAllPageRowsSelected();\n      const rowSelection = {\n        ...old\n      };\n      table.getRowModel().rows.forEach(row => {\n        mutateRowIsSelected(rowSelection, row.id, resolvedValue, true, table);\n      });\n      return rowSelection;\n    });\n\n    // addRowSelectionRange: rowId => {\n    //   const {\n    //     rows,\n    //     rowsById,\n    //     options: { selectGroupingRows, selectSubRows },\n    //   } = table\n\n    //   const findSelectedRow = (rows: Row[]) => {\n    //     let found\n    //     rows.find(d => {\n    //       if (d.getIsSelected()) {\n    //         found = d\n    //         return true\n    //       }\n    //       const subFound = findSelectedRow(d.subRows || [])\n    //       if (subFound) {\n    //         found = subFound\n    //         return true\n    //       }\n    //       return false\n    //     })\n    //     return found\n    //   }\n\n    //   const firstRow = findSelectedRow(rows) || rows[0]\n    //   const lastRow = rowsById[rowId]\n\n    //   let include = false\n    //   const selectedRowIds = {}\n\n    //   const addRow = (row: Row) => {\n    //     mutateRowIsSelected(selectedRowIds, row.id, true, {\n    //       rowsById,\n    //       selectGroupingRows: selectGroupingRows!,\n    //       selectSubRows: selectSubRows!,\n    //     })\n    //   }\n\n    //   table.rows.forEach(row => {\n    //     const isFirstRow = row.id === firstRow.id\n    //     const isLastRow = row.id === lastRow.id\n\n    //     if (isFirstRow || isLastRow) {\n    //       if (!include) {\n    //         include = true\n    //       } else if (include) {\n    //         addRow(row)\n    //         include = false\n    //       }\n    //     }\n\n    //     if (include) {\n    //       addRow(row)\n    //     }\n    //   })\n\n    //   table.setRowSelection(selectedRowIds)\n    // },\n    table.getPreSelectedRowModel = () => table.getCoreRowModel();\n    table.getSelectedRowModel = memo(() => [table.getState().rowSelection, table.getCoreRowModel()], (rowSelection, rowModel) => {\n      if (!Object.keys(rowSelection).length) {\n        return {\n          rows: [],\n          flatRows: [],\n          rowsById: {}\n        };\n      }\n      return selectRowsFn(table, rowModel);\n    }, getMemoOptions(table.options, 'debugTable', 'getSelectedRowModel'));\n    table.getFilteredSelectedRowModel = memo(() => [table.getState().rowSelection, table.getFilteredRowModel()], (rowSelection, rowModel) => {\n      if (!Object.keys(rowSelection).length) {\n        return {\n          rows: [],\n          flatRows: [],\n          rowsById: {}\n        };\n      }\n      return selectRowsFn(table, rowModel);\n    }, getMemoOptions(table.options, 'debugTable', 'getFilteredSelectedRowModel'));\n    table.getGroupedSelectedRowModel = memo(() => [table.getState().rowSelection, table.getSortedRowModel()], (rowSelection, rowModel) => {\n      if (!Object.keys(rowSelection).length) {\n        return {\n          rows: [],\n          flatRows: [],\n          rowsById: {}\n        };\n      }\n      return selectRowsFn(table, rowModel);\n    }, getMemoOptions(table.options, 'debugTable', 'getGroupedSelectedRowModel'));\n\n    ///\n\n    // getGroupingRowCanSelect: rowId => {\n    //   const row = table.getRow(rowId)\n\n    //   if (!row) {\n    //     throw new Error()\n    //   }\n\n    //   if (typeof table.options.enableGroupingRowSelection === 'function') {\n    //     return table.options.enableGroupingRowSelection(row)\n    //   }\n\n    //   return table.options.enableGroupingRowSelection ?? false\n    // },\n\n    table.getIsAllRowsSelected = () => {\n      const preGroupedFlatRows = table.getFilteredRowModel().flatRows;\n      const {\n        rowSelection\n      } = table.getState();\n      let isAllRowsSelected = Boolean(preGroupedFlatRows.length && Object.keys(rowSelection).length);\n      if (isAllRowsSelected) {\n        if (preGroupedFlatRows.some(row => row.getCanSelect() && !rowSelection[row.id])) {\n          isAllRowsSelected = false;\n        }\n      }\n      return isAllRowsSelected;\n    };\n    table.getIsAllPageRowsSelected = () => {\n      const paginationFlatRows = table.getPaginationRowModel().flatRows.filter(row => row.getCanSelect());\n      const {\n        rowSelection\n      } = table.getState();\n      let isAllPageRowsSelected = !!paginationFlatRows.length;\n      if (isAllPageRowsSelected && paginationFlatRows.some(row => !rowSelection[row.id])) {\n        isAllPageRowsSelected = false;\n      }\n      return isAllPageRowsSelected;\n    };\n    table.getIsSomeRowsSelected = () => {\n      var _table$getState$rowSe;\n      const totalSelected = Object.keys((_table$getState$rowSe = table.getState().rowSelection) != null ? _table$getState$rowSe : {}).length;\n      return totalSelected > 0 && totalSelected < table.getFilteredRowModel().flatRows.length;\n    };\n    table.getIsSomePageRowsSelected = () => {\n      const paginationFlatRows = table.getPaginationRowModel().flatRows;\n      return table.getIsAllPageRowsSelected() ? false : paginationFlatRows.filter(row => row.getCanSelect()).some(d => d.getIsSelected() || d.getIsSomeSelected());\n    };\n    table.getToggleAllRowsSelectedHandler = () => {\n      return e => {\n        table.toggleAllRowsSelected(e.target.checked);\n      };\n    };\n    table.getToggleAllPageRowsSelectedHandler = () => {\n      return e => {\n        table.toggleAllPageRowsSelected(e.target.checked);\n      };\n    };\n  },\n  createRow: (row, table) => {\n    row.toggleSelected = (value, opts) => {\n      const isSelected = row.getIsSelected();\n      table.setRowSelection(old => {\n        var _opts$selectChildren;\n        value = typeof value !== 'undefined' ? value : !isSelected;\n        if (row.getCanSelect() && isSelected === value) {\n          return old;\n        }\n        const selectedRowIds = {\n          ...old\n        };\n        mutateRowIsSelected(selectedRowIds, row.id, value, (_opts$selectChildren = opts == null ? void 0 : opts.selectChildren) != null ? _opts$selectChildren : true, table);\n        return selectedRowIds;\n      });\n    };\n    row.getIsSelected = () => {\n      const {\n        rowSelection\n      } = table.getState();\n      return isRowSelected(row, rowSelection);\n    };\n    row.getIsSomeSelected = () => {\n      const {\n        rowSelection\n      } = table.getState();\n      return isSubRowSelected(row, rowSelection) === 'some';\n    };\n    row.getIsAllSubRowsSelected = () => {\n      const {\n        rowSelection\n      } = table.getState();\n      return isSubRowSelected(row, rowSelection) === 'all';\n    };\n    row.getCanSelect = () => {\n      var _table$options$enable;\n      if (typeof table.options.enableRowSelection === 'function') {\n        return table.options.enableRowSelection(row);\n      }\n      return (_table$options$enable = table.options.enableRowSelection) != null ? _table$options$enable : true;\n    };\n    row.getCanSelectSubRows = () => {\n      var _table$options$enable2;\n      if (typeof table.options.enableSubRowSelection === 'function') {\n        return table.options.enableSubRowSelection(row);\n      }\n      return (_table$options$enable2 = table.options.enableSubRowSelection) != null ? _table$options$enable2 : true;\n    };\n    row.getCanMultiSelect = () => {\n      var _table$options$enable3;\n      if (typeof table.options.enableMultiRowSelection === 'function') {\n        return table.options.enableMultiRowSelection(row);\n      }\n      return (_table$options$enable3 = table.options.enableMultiRowSelection) != null ? _table$options$enable3 : true;\n    };\n    row.getToggleSelectedHandler = () => {\n      const canSelect = row.getCanSelect();\n      return e => {\n        var _target;\n        if (!canSelect) return;\n        row.toggleSelected((_target = e.target) == null ? void 0 : _target.checked);\n      };\n    };\n  }\n};\nconst mutateRowIsSelected = (selectedRowIds, id, value, includeChildren, table) => {\n  var _row$subRows;\n  const row = table.getRow(id, true);\n\n  // const isGrouped = row.getIsGrouped()\n\n  // if ( // TODO: enforce grouping row selection rules\n  //   !isGrouped ||\n  //   (isGrouped && table.options.enableGroupingRowSelection)\n  // ) {\n  if (value) {\n    if (!row.getCanMultiSelect()) {\n      Object.keys(selectedRowIds).forEach(key => delete selectedRowIds[key]);\n    }\n    if (row.getCanSelect()) {\n      selectedRowIds[id] = true;\n    }\n  } else {\n    delete selectedRowIds[id];\n  }\n  // }\n\n  if (includeChildren && (_row$subRows = row.subRows) != null && _row$subRows.length && row.getCanSelectSubRows()) {\n    row.subRows.forEach(row => mutateRowIsSelected(selectedRowIds, row.id, value, includeChildren, table));\n  }\n};\nfunction selectRowsFn(table, rowModel) {\n  const rowSelection = table.getState().rowSelection;\n  const newSelectedFlatRows = [];\n  const newSelectedRowsById = {};\n\n  // Filters top level and nested rows\n  const recurseRows = function (rows, depth) {\n    return rows.map(row => {\n      var _row$subRows2;\n      const isSelected = isRowSelected(row, rowSelection);\n      if (isSelected) {\n        newSelectedFlatRows.push(row);\n        newSelectedRowsById[row.id] = row;\n      }\n      if ((_row$subRows2 = row.subRows) != null && _row$subRows2.length) {\n        row = {\n          ...row,\n          subRows: recurseRows(row.subRows)\n        };\n      }\n      if (isSelected) {\n        return row;\n      }\n    }).filter(Boolean);\n  };\n  return {\n    rows: recurseRows(rowModel.rows),\n    flatRows: newSelectedFlatRows,\n    rowsById: newSelectedRowsById\n  };\n}\nfunction isRowSelected(row, selection) {\n  var _selection$row$id;\n  return (_selection$row$id = selection[row.id]) != null ? _selection$row$id : false;\n}\nfunction isSubRowSelected(row, selection, table) {\n  var _row$subRows3;\n  if (!((_row$subRows3 = row.subRows) != null && _row$subRows3.length)) return false;\n  let allChildrenSelected = true;\n  let someSelected = false;\n  row.subRows.forEach(subRow => {\n    // Bail out early if we know both of these\n    if (someSelected && !allChildrenSelected) {\n      return;\n    }\n    if (subRow.getCanSelect()) {\n      if (isRowSelected(subRow, selection)) {\n        someSelected = true;\n      } else {\n        allChildrenSelected = false;\n      }\n    }\n\n    // Check row selection of nested subrows\n    if (subRow.subRows && subRow.subRows.length) {\n      const subRowChildrenSelected = isSubRowSelected(subRow, selection);\n      if (subRowChildrenSelected === 'all') {\n        someSelected = true;\n      } else if (subRowChildrenSelected === 'some') {\n        someSelected = true;\n        allChildrenSelected = false;\n      } else {\n        allChildrenSelected = false;\n      }\n    }\n  });\n  return allChildrenSelected ? 'all' : someSelected ? 'some' : false;\n}\n\nconst reSplitAlphaNumeric = /([0-9]+)/gm;\nconst alphanumeric = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(toString(rowA.getValue(columnId)).toLowerCase(), toString(rowB.getValue(columnId)).toLowerCase());\n};\nconst alphanumericCaseSensitive = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(toString(rowA.getValue(columnId)), toString(rowB.getValue(columnId)));\n};\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst text = (rowA, rowB, columnId) => {\n  return compareBasic(toString(rowA.getValue(columnId)).toLowerCase(), toString(rowB.getValue(columnId)).toLowerCase());\n};\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst textCaseSensitive = (rowA, rowB, columnId) => {\n  return compareBasic(toString(rowA.getValue(columnId)), toString(rowB.getValue(columnId)));\n};\nconst datetime = (rowA, rowB, columnId) => {\n  const a = rowA.getValue(columnId);\n  const b = rowB.getValue(columnId);\n\n  // Can handle nullish values\n  // Use > and < because == (and ===) doesn't work with\n  // Date objects (would require calling getTime()).\n  return a > b ? 1 : a < b ? -1 : 0;\n};\nconst basic = (rowA, rowB, columnId) => {\n  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId));\n};\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1;\n}\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return '';\n    }\n    return String(a);\n  }\n  if (typeof a === 'string') {\n    return a;\n  }\n  return '';\n}\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nfunction compareAlphanumeric(aStr, bStr) {\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  const a = aStr.split(reSplitAlphaNumeric).filter(Boolean);\n  const b = bStr.split(reSplitAlphaNumeric).filter(Boolean);\n\n  // While\n  while (a.length && b.length) {\n    const aa = a.shift();\n    const bb = b.shift();\n    const an = parseInt(aa, 10);\n    const bn = parseInt(bb, 10);\n    const combo = [an, bn].sort();\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1;\n      }\n      if (bb > aa) {\n        return -1;\n      }\n      continue;\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1;\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1;\n    }\n    if (bn > an) {\n      return -1;\n    }\n  }\n  return a.length - b.length;\n}\n\n// Exports\n\nconst sortingFns = {\n  alphanumeric,\n  alphanumericCaseSensitive,\n  text,\n  textCaseSensitive,\n  datetime,\n  basic\n};\n\n//\n\nconst RowSorting = {\n  getInitialState: state => {\n    return {\n      sorting: [],\n      ...state\n    };\n  },\n  getDefaultColumnDef: () => {\n    return {\n      sortingFn: 'auto',\n      sortUndefined: 1\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onSortingChange: makeStateUpdater('sorting', table),\n      isMultiSortEvent: e => {\n        return e.shiftKey;\n      }\n    };\n  },\n  createColumn: (column, table) => {\n    column.getAutoSortingFn = () => {\n      const firstRows = table.getFilteredRowModel().flatRows.slice(10);\n      let isString = false;\n      for (const row of firstRows) {\n        const value = row == null ? void 0 : row.getValue(column.id);\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          return sortingFns.datetime;\n        }\n        if (typeof value === 'string') {\n          isString = true;\n          if (value.split(reSplitAlphaNumeric).length > 1) {\n            return sortingFns.alphanumeric;\n          }\n        }\n      }\n      if (isString) {\n        return sortingFns.text;\n      }\n      return sortingFns.basic;\n    };\n    column.getAutoSortDir = () => {\n      const firstRow = table.getFilteredRowModel().flatRows[0];\n      const value = firstRow == null ? void 0 : firstRow.getValue(column.id);\n      if (typeof value === 'string') {\n        return 'asc';\n      }\n      return 'desc';\n    };\n    column.getSortingFn = () => {\n      var _table$options$sortin, _table$options$sortin2;\n      if (!column) {\n        throw new Error();\n      }\n      return isFunction(column.columnDef.sortingFn) ? column.columnDef.sortingFn : column.columnDef.sortingFn === 'auto' ? column.getAutoSortingFn() : (_table$options$sortin = (_table$options$sortin2 = table.options.sortingFns) == null ? void 0 : _table$options$sortin2[column.columnDef.sortingFn]) != null ? _table$options$sortin : sortingFns[column.columnDef.sortingFn];\n    };\n    column.toggleSorting = (desc, multi) => {\n      // if (column.columns.length) {\n      //   column.columns.forEach((c, i) => {\n      //     if (c.id) {\n      //       table.toggleColumnSorting(c.id, undefined, multi || !!i)\n      //     }\n      //   })\n      //   return\n      // }\n\n      // this needs to be outside of table.setSorting to be in sync with rerender\n      const nextSortingOrder = column.getNextSortingOrder();\n      const hasManualValue = typeof desc !== 'undefined' && desc !== null;\n      table.setSorting(old => {\n        // Find any existing sorting for this column\n        const existingSorting = old == null ? void 0 : old.find(d => d.id === column.id);\n        const existingIndex = old == null ? void 0 : old.findIndex(d => d.id === column.id);\n        let newSorting = [];\n\n        // What should we do with this sort action?\n        let sortAction;\n        let nextDesc = hasManualValue ? desc : nextSortingOrder === 'desc';\n\n        // Multi-mode\n        if (old != null && old.length && column.getCanMultiSort() && multi) {\n          if (existingSorting) {\n            sortAction = 'toggle';\n          } else {\n            sortAction = 'add';\n          }\n        } else {\n          // Normal mode\n          if (old != null && old.length && existingIndex !== old.length - 1) {\n            sortAction = 'replace';\n          } else if (existingSorting) {\n            sortAction = 'toggle';\n          } else {\n            sortAction = 'replace';\n          }\n        }\n\n        // Handle toggle states that will remove the sorting\n        if (sortAction === 'toggle') {\n          // If we are \"actually\" toggling (not a manual set value), should we remove the sorting?\n          if (!hasManualValue) {\n            // Is our intention to remove?\n            if (!nextSortingOrder) {\n              sortAction = 'remove';\n            }\n          }\n        }\n        if (sortAction === 'add') {\n          var _table$options$maxMul;\n          newSorting = [...old, {\n            id: column.id,\n            desc: nextDesc\n          }];\n          // Take latest n columns\n          newSorting.splice(0, newSorting.length - ((_table$options$maxMul = table.options.maxMultiSortColCount) != null ? _table$options$maxMul : Number.MAX_SAFE_INTEGER));\n        } else if (sortAction === 'toggle') {\n          // This flips (or sets) the\n          newSorting = old.map(d => {\n            if (d.id === column.id) {\n              return {\n                ...d,\n                desc: nextDesc\n              };\n            }\n            return d;\n          });\n        } else if (sortAction === 'remove') {\n          newSorting = old.filter(d => d.id !== column.id);\n        } else {\n          newSorting = [{\n            id: column.id,\n            desc: nextDesc\n          }];\n        }\n        return newSorting;\n      });\n    };\n    column.getFirstSortDir = () => {\n      var _ref, _column$columnDef$sor;\n      const sortDescFirst = (_ref = (_column$columnDef$sor = column.columnDef.sortDescFirst) != null ? _column$columnDef$sor : table.options.sortDescFirst) != null ? _ref : column.getAutoSortDir() === 'desc';\n      return sortDescFirst ? 'desc' : 'asc';\n    };\n    column.getNextSortingOrder = multi => {\n      var _table$options$enable, _table$options$enable2;\n      const firstSortDirection = column.getFirstSortDir();\n      const isSorted = column.getIsSorted();\n      if (!isSorted) {\n        return firstSortDirection;\n      }\n      if (isSorted !== firstSortDirection && ((_table$options$enable = table.options.enableSortingRemoval) != null ? _table$options$enable : true) && (\n      // If enableSortRemove, enable in general\n      multi ? (_table$options$enable2 = table.options.enableMultiRemove) != null ? _table$options$enable2 : true : true) // If multi, don't allow if enableMultiRemove))\n      ) {\n        return false;\n      }\n      return isSorted === 'desc' ? 'asc' : 'desc';\n    };\n    column.getCanSort = () => {\n      var _column$columnDef$ena, _table$options$enable3;\n      return ((_column$columnDef$ena = column.columnDef.enableSorting) != null ? _column$columnDef$ena : true) && ((_table$options$enable3 = table.options.enableSorting) != null ? _table$options$enable3 : true) && !!column.accessorFn;\n    };\n    column.getCanMultiSort = () => {\n      var _ref2, _column$columnDef$ena2;\n      return (_ref2 = (_column$columnDef$ena2 = column.columnDef.enableMultiSort) != null ? _column$columnDef$ena2 : table.options.enableMultiSort) != null ? _ref2 : !!column.accessorFn;\n    };\n    column.getIsSorted = () => {\n      var _table$getState$sorti;\n      const columnSort = (_table$getState$sorti = table.getState().sorting) == null ? void 0 : _table$getState$sorti.find(d => d.id === column.id);\n      return !columnSort ? false : columnSort.desc ? 'desc' : 'asc';\n    };\n    column.getSortIndex = () => {\n      var _table$getState$sorti2, _table$getState$sorti3;\n      return (_table$getState$sorti2 = (_table$getState$sorti3 = table.getState().sorting) == null ? void 0 : _table$getState$sorti3.findIndex(d => d.id === column.id)) != null ? _table$getState$sorti2 : -1;\n    };\n    column.clearSorting = () => {\n      //clear sorting for just 1 column\n      table.setSorting(old => old != null && old.length ? old.filter(d => d.id !== column.id) : []);\n    };\n    column.getToggleSortingHandler = () => {\n      const canSort = column.getCanSort();\n      return e => {\n        if (!canSort) return;\n        e.persist == null || e.persist();\n        column.toggleSorting == null || column.toggleSorting(undefined, column.getCanMultiSort() ? table.options.isMultiSortEvent == null ? void 0 : table.options.isMultiSortEvent(e) : false);\n      };\n    };\n  },\n  createTable: table => {\n    table.setSorting = updater => table.options.onSortingChange == null ? void 0 : table.options.onSortingChange(updater);\n    table.resetSorting = defaultState => {\n      var _table$initialState$s, _table$initialState;\n      table.setSorting(defaultState ? [] : (_table$initialState$s = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.sorting) != null ? _table$initialState$s : []);\n    };\n    table.getPreSortedRowModel = () => table.getGroupedRowModel();\n    table.getSortedRowModel = () => {\n      if (!table._getSortedRowModel && table.options.getSortedRowModel) {\n        table._getSortedRowModel = table.options.getSortedRowModel(table);\n      }\n      if (table.options.manualSorting || !table._getSortedRowModel) {\n        return table.getPreSortedRowModel();\n      }\n      return table._getSortedRowModel();\n    };\n  }\n};\n\nconst builtInFeatures = [Headers, ColumnVisibility, ColumnOrdering, ColumnPinning, ColumnFaceting, ColumnFiltering, GlobalFaceting,\n//depends on ColumnFaceting\nGlobalFiltering,\n//depends on ColumnFiltering\nRowSorting, ColumnGrouping,\n//depends on RowSorting\nRowExpanding, RowPagination, RowPinning, RowSelection, ColumnSizing];\n\n//\n\nfunction createTable(options) {\n  var _options$_features, _options$initialState;\n  if (process.env.NODE_ENV !== 'production' && (options.debugAll || options.debugTable)) {\n    console.info('Creating Table Instance...');\n  }\n  const _features = [...builtInFeatures, ...((_options$_features = options._features) != null ? _options$_features : [])];\n  let table = {\n    _features\n  };\n  const defaultOptions = table._features.reduce((obj, feature) => {\n    return Object.assign(obj, feature.getDefaultOptions == null ? void 0 : feature.getDefaultOptions(table));\n  }, {});\n  const mergeOptions = options => {\n    if (table.options.mergeOptions) {\n      return table.options.mergeOptions(defaultOptions, options);\n    }\n    return {\n      ...defaultOptions,\n      ...options\n    };\n  };\n  const coreInitialState = {};\n  let initialState = {\n    ...coreInitialState,\n    ...((_options$initialState = options.initialState) != null ? _options$initialState : {})\n  };\n  table._features.forEach(feature => {\n    var _feature$getInitialSt;\n    initialState = (_feature$getInitialSt = feature.getInitialState == null ? void 0 : feature.getInitialState(initialState)) != null ? _feature$getInitialSt : initialState;\n  });\n  const queued = [];\n  let queuedTimeout = false;\n  const coreInstance = {\n    _features,\n    options: {\n      ...defaultOptions,\n      ...options\n    },\n    initialState,\n    _queue: cb => {\n      queued.push(cb);\n      if (!queuedTimeout) {\n        queuedTimeout = true;\n\n        // Schedule a microtask to run the queued callbacks after\n        // the current call stack (render, etc) has finished.\n        Promise.resolve().then(() => {\n          while (queued.length) {\n            queued.shift()();\n          }\n          queuedTimeout = false;\n        }).catch(error => setTimeout(() => {\n          throw error;\n        }));\n      }\n    },\n    reset: () => {\n      table.setState(table.initialState);\n    },\n    setOptions: updater => {\n      const newOptions = functionalUpdate(updater, table.options);\n      table.options = mergeOptions(newOptions);\n    },\n    getState: () => {\n      return table.options.state;\n    },\n    setState: updater => {\n      table.options.onStateChange == null || table.options.onStateChange(updater);\n    },\n    _getRowId: (row, index, parent) => {\n      var _table$options$getRow;\n      return (_table$options$getRow = table.options.getRowId == null ? void 0 : table.options.getRowId(row, index, parent)) != null ? _table$options$getRow : `${parent ? [parent.id, index].join('.') : index}`;\n    },\n    getCoreRowModel: () => {\n      if (!table._getCoreRowModel) {\n        table._getCoreRowModel = table.options.getCoreRowModel(table);\n      }\n      return table._getCoreRowModel();\n    },\n    // The final calls start at the bottom of the model,\n    // expanded rows, which then work their way up\n\n    getRowModel: () => {\n      return table.getPaginationRowModel();\n    },\n    //in next version, we should just pass in the row model as the optional 2nd arg\n    getRow: (id, searchAll) => {\n      let row = (searchAll ? table.getPrePaginationRowModel() : table.getRowModel()).rowsById[id];\n      if (!row) {\n        row = table.getCoreRowModel().rowsById[id];\n        if (!row) {\n          if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`getRow could not find row with ID: ${id}`);\n          }\n          throw new Error();\n        }\n      }\n      return row;\n    },\n    _getDefaultColumnDef: memo(() => [table.options.defaultColumn], defaultColumn => {\n      var _defaultColumn;\n      defaultColumn = (_defaultColumn = defaultColumn) != null ? _defaultColumn : {};\n      return {\n        header: props => {\n          const resolvedColumnDef = props.header.column.columnDef;\n          if (resolvedColumnDef.accessorKey) {\n            return resolvedColumnDef.accessorKey;\n          }\n          if (resolvedColumnDef.accessorFn) {\n            return resolvedColumnDef.id;\n          }\n          return null;\n        },\n        // footer: props => props.header.column.id,\n        cell: props => {\n          var _props$renderValue$to, _props$renderValue;\n          return (_props$renderValue$to = (_props$renderValue = props.renderValue()) == null || _props$renderValue.toString == null ? void 0 : _props$renderValue.toString()) != null ? _props$renderValue$to : null;\n        },\n        ...table._features.reduce((obj, feature) => {\n          return Object.assign(obj, feature.getDefaultColumnDef == null ? void 0 : feature.getDefaultColumnDef());\n        }, {}),\n        ...defaultColumn\n      };\n    }, getMemoOptions(options, 'debugColumns', '_getDefaultColumnDef')),\n    _getColumnDefs: () => table.options.columns,\n    getAllColumns: memo(() => [table._getColumnDefs()], columnDefs => {\n      const recurseColumns = function (columnDefs, parent, depth) {\n        if (depth === void 0) {\n          depth = 0;\n        }\n        return columnDefs.map(columnDef => {\n          const column = createColumn(table, columnDef, depth, parent);\n          const groupingColumnDef = columnDef;\n          column.columns = groupingColumnDef.columns ? recurseColumns(groupingColumnDef.columns, column, depth + 1) : [];\n          return column;\n        });\n      };\n      return recurseColumns(columnDefs);\n    }, getMemoOptions(options, 'debugColumns', 'getAllColumns')),\n    getAllFlatColumns: memo(() => [table.getAllColumns()], allColumns => {\n      return allColumns.flatMap(column => {\n        return column.getFlatColumns();\n      });\n    }, getMemoOptions(options, 'debugColumns', 'getAllFlatColumns')),\n    _getAllFlatColumnsById: memo(() => [table.getAllFlatColumns()], flatColumns => {\n      return flatColumns.reduce((acc, column) => {\n        acc[column.id] = column;\n        return acc;\n      }, {});\n    }, getMemoOptions(options, 'debugColumns', 'getAllFlatColumnsById')),\n    getAllLeafColumns: memo(() => [table.getAllColumns(), table._getOrderColumnsFn()], (allColumns, orderColumns) => {\n      let leafColumns = allColumns.flatMap(column => column.getLeafColumns());\n      return orderColumns(leafColumns);\n    }, getMemoOptions(options, 'debugColumns', 'getAllLeafColumns')),\n    getColumn: columnId => {\n      const column = table._getAllFlatColumnsById()[columnId];\n      if (process.env.NODE_ENV !== 'production' && !column) {\n        console.error(`[Table] Column with id '${columnId}' does not exist.`);\n      }\n      return column;\n    }\n  };\n  Object.assign(table, coreInstance);\n  for (let index = 0; index < table._features.length; index++) {\n    const feature = table._features[index];\n    feature == null || feature.createTable == null || feature.createTable(table);\n  }\n  return table;\n}\n\nfunction getCoreRowModel() {\n  return table => memo(() => [table.options.data], data => {\n    const rowModel = {\n      rows: [],\n      flatRows: [],\n      rowsById: {}\n    };\n    const accessRows = function (originalRows, depth, parentRow) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n      const rows = [];\n      for (let i = 0; i < originalRows.length; i++) {\n        // This could be an expensive check at scale, so we should move it somewhere else, but where?\n        // if (!id) {\n        //   if (process.env.NODE_ENV !== 'production') {\n        //     throw new Error(`getRowId expected an ID, but got ${id}`)\n        //   }\n        // }\n\n        // Make the row\n        const row = createRow(table, table._getRowId(originalRows[i], i, parentRow), originalRows[i], i, depth, undefined, parentRow == null ? void 0 : parentRow.id);\n\n        // Keep track of every row in a flat array\n        rowModel.flatRows.push(row);\n        // Also keep track of every row by its ID\n        rowModel.rowsById[row.id] = row;\n        // Push table row into parent\n        rows.push(row);\n\n        // Get the original subrows\n        if (table.options.getSubRows) {\n          var _row$originalSubRows;\n          row.originalSubRows = table.options.getSubRows(originalRows[i], i);\n\n          // Then recursively access them\n          if ((_row$originalSubRows = row.originalSubRows) != null && _row$originalSubRows.length) {\n            row.subRows = accessRows(row.originalSubRows, depth + 1, row);\n          }\n        }\n      }\n      return rows;\n    };\n    rowModel.rows = accessRows(data);\n    return rowModel;\n  }, getMemoOptions(table.options, 'debugTable', 'getRowModel', () => table._autoResetPageIndex()));\n}\n\nfunction getExpandedRowModel() {\n  return table => memo(() => [table.getState().expanded, table.getPreExpandedRowModel(), table.options.paginateExpandedRows], (expanded, rowModel, paginateExpandedRows) => {\n    if (!rowModel.rows.length || expanded !== true && !Object.keys(expanded != null ? expanded : {}).length) {\n      return rowModel;\n    }\n    if (!paginateExpandedRows) {\n      // Only expand rows at this point if they are being paginated\n      return rowModel;\n    }\n    return expandRows(rowModel);\n  }, getMemoOptions(table.options, 'debugTable', 'getExpandedRowModel'));\n}\nfunction expandRows(rowModel) {\n  const expandedRows = [];\n  const handleRow = row => {\n    var _row$subRows;\n    expandedRows.push(row);\n    if ((_row$subRows = row.subRows) != null && _row$subRows.length && row.getIsExpanded()) {\n      row.subRows.forEach(handleRow);\n    }\n  };\n  rowModel.rows.forEach(handleRow);\n  return {\n    rows: expandedRows,\n    flatRows: rowModel.flatRows,\n    rowsById: rowModel.rowsById\n  };\n}\n\nfunction getFacetedMinMaxValues() {\n  return (table, columnId) => memo(() => {\n    var _table$getColumn;\n    return [(_table$getColumn = table.getColumn(columnId)) == null ? void 0 : _table$getColumn.getFacetedRowModel()];\n  }, facetedRowModel => {\n    if (!facetedRowModel) return undefined;\n    const uniqueValues = facetedRowModel.flatRows.flatMap(flatRow => {\n      var _flatRow$getUniqueVal;\n      return (_flatRow$getUniqueVal = flatRow.getUniqueValues(columnId)) != null ? _flatRow$getUniqueVal : [];\n    }).map(Number).filter(value => !Number.isNaN(value));\n    if (!uniqueValues.length) return;\n    let facetedMinValue = uniqueValues[0];\n    let facetedMaxValue = uniqueValues[uniqueValues.length - 1];\n    for (const value of uniqueValues) {\n      if (value < facetedMinValue) facetedMinValue = value;else if (value > facetedMaxValue) facetedMaxValue = value;\n    }\n    return [facetedMinValue, facetedMaxValue];\n  }, getMemoOptions(table.options, 'debugTable', 'getFacetedMinMaxValues'));\n}\n\nfunction filterRows(rows, filterRowImpl, table) {\n  if (table.options.filterFromLeafRows) {\n    return filterRowModelFromLeafs(rows, filterRowImpl, table);\n  }\n  return filterRowModelFromRoot(rows, filterRowImpl, table);\n}\nfunction filterRowModelFromLeafs(rowsToFilter, filterRow, table) {\n  var _table$options$maxLea;\n  const newFilteredFlatRows = [];\n  const newFilteredRowsById = {};\n  const maxDepth = (_table$options$maxLea = table.options.maxLeafRowFilterDepth) != null ? _table$options$maxLea : 100;\n  const recurseFilterRows = function (rowsToFilter, depth) {\n    if (depth === void 0) {\n      depth = 0;\n    }\n    const rows = [];\n\n    // Filter from children up first\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      var _row$subRows;\n      let row = rowsToFilter[i];\n      const newRow = createRow(table, row.id, row.original, row.index, row.depth, undefined, row.parentId);\n      newRow.columnFilters = row.columnFilters;\n      if ((_row$subRows = row.subRows) != null && _row$subRows.length && depth < maxDepth) {\n        newRow.subRows = recurseFilterRows(row.subRows, depth + 1);\n        row = newRow;\n        if (filterRow(row) && !newRow.subRows.length) {\n          rows.push(row);\n          newFilteredRowsById[row.id] = row;\n          newFilteredFlatRows.push(row);\n          continue;\n        }\n        if (filterRow(row) || newRow.subRows.length) {\n          rows.push(row);\n          newFilteredRowsById[row.id] = row;\n          newFilteredFlatRows.push(row);\n          continue;\n        }\n      } else {\n        row = newRow;\n        if (filterRow(row)) {\n          rows.push(row);\n          newFilteredRowsById[row.id] = row;\n          newFilteredFlatRows.push(row);\n        }\n      }\n    }\n    return rows;\n  };\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById\n  };\n}\nfunction filterRowModelFromRoot(rowsToFilter, filterRow, table) {\n  var _table$options$maxLea2;\n  const newFilteredFlatRows = [];\n  const newFilteredRowsById = {};\n  const maxDepth = (_table$options$maxLea2 = table.options.maxLeafRowFilterDepth) != null ? _table$options$maxLea2 : 100;\n\n  // Filters top level and nested rows\n  const recurseFilterRows = function (rowsToFilter, depth) {\n    if (depth === void 0) {\n      depth = 0;\n    }\n    // Filter from parents downward first\n\n    const rows = [];\n\n    // Apply the filter to any subRows\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      let row = rowsToFilter[i];\n      const pass = filterRow(row);\n      if (pass) {\n        var _row$subRows2;\n        if ((_row$subRows2 = row.subRows) != null && _row$subRows2.length && depth < maxDepth) {\n          const newRow = createRow(table, row.id, row.original, row.index, row.depth, undefined, row.parentId);\n          newRow.subRows = recurseFilterRows(row.subRows, depth + 1);\n          row = newRow;\n        }\n        rows.push(row);\n        newFilteredFlatRows.push(row);\n        newFilteredRowsById[row.id] = row;\n      }\n    }\n    return rows;\n  };\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById\n  };\n}\n\nfunction getFacetedRowModel() {\n  return (table, columnId) => memo(() => [table.getPreFilteredRowModel(), table.getState().columnFilters, table.getState().globalFilter, table.getFilteredRowModel()], (preRowModel, columnFilters, globalFilter) => {\n    if (!preRowModel.rows.length || !(columnFilters != null && columnFilters.length) && !globalFilter) {\n      return preRowModel;\n    }\n    const filterableIds = [...columnFilters.map(d => d.id).filter(d => d !== columnId), globalFilter ? '__global__' : undefined].filter(Boolean);\n    const filterRowsImpl = row => {\n      // Horizontally filter rows through each column\n      for (let i = 0; i < filterableIds.length; i++) {\n        if (row.columnFilters[filterableIds[i]] === false) {\n          return false;\n        }\n      }\n      return true;\n    };\n    return filterRows(preRowModel.rows, filterRowsImpl, table);\n  }, getMemoOptions(table.options, 'debugTable', 'getFacetedRowModel'));\n}\n\nfunction getFacetedUniqueValues() {\n  return (table, columnId) => memo(() => {\n    var _table$getColumn;\n    return [(_table$getColumn = table.getColumn(columnId)) == null ? void 0 : _table$getColumn.getFacetedRowModel()];\n  }, facetedRowModel => {\n    if (!facetedRowModel) return new Map();\n    let facetedUniqueValues = new Map();\n    for (let i = 0; i < facetedRowModel.flatRows.length; i++) {\n      const values = facetedRowModel.flatRows[i].getUniqueValues(columnId);\n      for (let j = 0; j < values.length; j++) {\n        const value = values[j];\n        if (facetedUniqueValues.has(value)) {\n          var _facetedUniqueValues$;\n          facetedUniqueValues.set(value, ((_facetedUniqueValues$ = facetedUniqueValues.get(value)) != null ? _facetedUniqueValues$ : 0) + 1);\n        } else {\n          facetedUniqueValues.set(value, 1);\n        }\n      }\n    }\n    return facetedUniqueValues;\n  }, getMemoOptions(table.options, 'debugTable', `getFacetedUniqueValues_${columnId}`));\n}\n\nfunction getFilteredRowModel() {\n  return table => memo(() => [table.getPreFilteredRowModel(), table.getState().columnFilters, table.getState().globalFilter], (rowModel, columnFilters, globalFilter) => {\n    if (!rowModel.rows.length || !(columnFilters != null && columnFilters.length) && !globalFilter) {\n      for (let i = 0; i < rowModel.flatRows.length; i++) {\n        rowModel.flatRows[i].columnFilters = {};\n        rowModel.flatRows[i].columnFiltersMeta = {};\n      }\n      return rowModel;\n    }\n    const resolvedColumnFilters = [];\n    const resolvedGlobalFilters = [];\n    (columnFilters != null ? columnFilters : []).forEach(d => {\n      var _filterFn$resolveFilt;\n      const column = table.getColumn(d.id);\n      if (!column) {\n        return;\n      }\n      const filterFn = column.getFilterFn();\n      if (!filterFn) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(`Could not find a valid 'column.filterFn' for column with the ID: ${column.id}.`);\n        }\n        return;\n      }\n      resolvedColumnFilters.push({\n        id: d.id,\n        filterFn,\n        resolvedValue: (_filterFn$resolveFilt = filterFn.resolveFilterValue == null ? void 0 : filterFn.resolveFilterValue(d.value)) != null ? _filterFn$resolveFilt : d.value\n      });\n    });\n    const filterableIds = (columnFilters != null ? columnFilters : []).map(d => d.id);\n    const globalFilterFn = table.getGlobalFilterFn();\n    const globallyFilterableColumns = table.getAllLeafColumns().filter(column => column.getCanGlobalFilter());\n    if (globalFilter && globalFilterFn && globallyFilterableColumns.length) {\n      filterableIds.push('__global__');\n      globallyFilterableColumns.forEach(column => {\n        var _globalFilterFn$resol;\n        resolvedGlobalFilters.push({\n          id: column.id,\n          filterFn: globalFilterFn,\n          resolvedValue: (_globalFilterFn$resol = globalFilterFn.resolveFilterValue == null ? void 0 : globalFilterFn.resolveFilterValue(globalFilter)) != null ? _globalFilterFn$resol : globalFilter\n        });\n      });\n    }\n    let currentColumnFilter;\n    let currentGlobalFilter;\n\n    // Flag the prefiltered row model with each filter state\n    for (let j = 0; j < rowModel.flatRows.length; j++) {\n      const row = rowModel.flatRows[j];\n      row.columnFilters = {};\n      if (resolvedColumnFilters.length) {\n        for (let i = 0; i < resolvedColumnFilters.length; i++) {\n          currentColumnFilter = resolvedColumnFilters[i];\n          const id = currentColumnFilter.id;\n\n          // Tag the row with the column filter state\n          row.columnFilters[id] = currentColumnFilter.filterFn(row, id, currentColumnFilter.resolvedValue, filterMeta => {\n            row.columnFiltersMeta[id] = filterMeta;\n          });\n        }\n      }\n      if (resolvedGlobalFilters.length) {\n        for (let i = 0; i < resolvedGlobalFilters.length; i++) {\n          currentGlobalFilter = resolvedGlobalFilters[i];\n          const id = currentGlobalFilter.id;\n          // Tag the row with the first truthy global filter state\n          if (currentGlobalFilter.filterFn(row, id, currentGlobalFilter.resolvedValue, filterMeta => {\n            row.columnFiltersMeta[id] = filterMeta;\n          })) {\n            row.columnFilters.__global__ = true;\n            break;\n          }\n        }\n        if (row.columnFilters.__global__ !== true) {\n          row.columnFilters.__global__ = false;\n        }\n      }\n    }\n    const filterRowsImpl = row => {\n      // Horizontally filter rows through each column\n      for (let i = 0; i < filterableIds.length; i++) {\n        if (row.columnFilters[filterableIds[i]] === false) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    // Filter final rows using all of the active filters\n    return filterRows(rowModel.rows, filterRowsImpl, table);\n  }, getMemoOptions(table.options, 'debugTable', 'getFilteredRowModel', () => table._autoResetPageIndex()));\n}\n\nfunction getGroupedRowModel() {\n  return table => memo(() => [table.getState().grouping, table.getPreGroupedRowModel()], (grouping, rowModel) => {\n    if (!rowModel.rows.length || !grouping.length) {\n      rowModel.rows.forEach(row => {\n        row.depth = 0;\n        row.parentId = undefined;\n      });\n      return rowModel;\n    }\n\n    // Filter the grouping list down to columns that exist\n    const existingGrouping = grouping.filter(columnId => table.getColumn(columnId));\n    const groupedFlatRows = [];\n    const groupedRowsById = {};\n    // const onlyGroupedFlatRows: Row[] = [];\n    // const onlyGroupedRowsById: Record<RowId, Row> = {};\n    // const nonGroupedFlatRows: Row[] = [];\n    // const nonGroupedRowsById: Record<RowId, Row> = {};\n\n    // Recursively group the data\n    const groupUpRecursively = function (rows, depth, parentId) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n      // Grouping depth has been been met\n      // Stop grouping and simply rewrite thd depth and row relationships\n      if (depth >= existingGrouping.length) {\n        return rows.map(row => {\n          row.depth = depth;\n          groupedFlatRows.push(row);\n          groupedRowsById[row.id] = row;\n          if (row.subRows) {\n            row.subRows = groupUpRecursively(row.subRows, depth + 1, row.id);\n          }\n          return row;\n        });\n      }\n      const columnId = existingGrouping[depth];\n\n      // Group the rows together for this level\n      const rowGroupsMap = groupBy(rows, columnId);\n\n      // Perform aggregations for each group\n      const aggregatedGroupedRows = Array.from(rowGroupsMap.entries()).map((_ref, index) => {\n        let [groupingValue, groupedRows] = _ref;\n        let id = `${columnId}:${groupingValue}`;\n        id = parentId ? `${parentId}>${id}` : id;\n\n        // First, Recurse to group sub rows before aggregation\n        const subRows = groupUpRecursively(groupedRows, depth + 1, id);\n        subRows.forEach(subRow => {\n          subRow.parentId = id;\n        });\n\n        // Flatten the leaf rows of the rows in this group\n        const leafRows = depth ? flattenBy(groupedRows, row => row.subRows) : groupedRows;\n        const row = createRow(table, id, leafRows[0].original, index, depth, undefined, parentId);\n        Object.assign(row, {\n          groupingColumnId: columnId,\n          groupingValue,\n          subRows,\n          leafRows,\n          getValue: columnId => {\n            // Don't aggregate columns that are in the grouping\n            if (existingGrouping.includes(columnId)) {\n              if (row._valuesCache.hasOwnProperty(columnId)) {\n                return row._valuesCache[columnId];\n              }\n              if (groupedRows[0]) {\n                var _groupedRows$0$getVal;\n                row._valuesCache[columnId] = (_groupedRows$0$getVal = groupedRows[0].getValue(columnId)) != null ? _groupedRows$0$getVal : undefined;\n              }\n              return row._valuesCache[columnId];\n            }\n            if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n              return row._groupingValuesCache[columnId];\n            }\n\n            // Aggregate the values\n            const column = table.getColumn(columnId);\n            const aggregateFn = column == null ? void 0 : column.getAggregationFn();\n            if (aggregateFn) {\n              row._groupingValuesCache[columnId] = aggregateFn(columnId, leafRows, groupedRows);\n              return row._groupingValuesCache[columnId];\n            }\n          }\n        });\n        subRows.forEach(subRow => {\n          groupedFlatRows.push(subRow);\n          groupedRowsById[subRow.id] = subRow;\n          // if (subRow.getIsGrouped?.()) {\n          //   onlyGroupedFlatRows.push(subRow);\n          //   onlyGroupedRowsById[subRow.id] = subRow;\n          // } else {\n          //   nonGroupedFlatRows.push(subRow);\n          //   nonGroupedRowsById[subRow.id] = subRow;\n          // }\n        });\n        return row;\n      });\n      return aggregatedGroupedRows;\n    };\n    const groupedRows = groupUpRecursively(rowModel.rows, 0);\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow);\n      groupedRowsById[subRow.id] = subRow;\n      // if (subRow.getIsGrouped?.()) {\n      //   onlyGroupedFlatRows.push(subRow);\n      //   onlyGroupedRowsById[subRow.id] = subRow;\n      // } else {\n      //   nonGroupedFlatRows.push(subRow);\n      //   nonGroupedRowsById[subRow.id] = subRow;\n      // }\n    });\n    return {\n      rows: groupedRows,\n      flatRows: groupedFlatRows,\n      rowsById: groupedRowsById\n    };\n  }, getMemoOptions(table.options, 'debugTable', 'getGroupedRowModel', () => {\n    table._queue(() => {\n      table._autoResetExpanded();\n      table._autoResetPageIndex();\n    });\n  }));\n}\nfunction groupBy(rows, columnId) {\n  const groupMap = new Map();\n  return rows.reduce((map, row) => {\n    const resKey = `${row.getGroupingValue(columnId)}`;\n    const previous = map.get(resKey);\n    if (!previous) {\n      map.set(resKey, [row]);\n    } else {\n      previous.push(row);\n    }\n    return map;\n  }, groupMap);\n}\n\nfunction getPaginationRowModel(opts) {\n  return table => memo(() => [table.getState().pagination, table.getPrePaginationRowModel(), table.options.paginateExpandedRows ? undefined : table.getState().expanded], (pagination, rowModel) => {\n    if (!rowModel.rows.length) {\n      return rowModel;\n    }\n    const {\n      pageSize,\n      pageIndex\n    } = pagination;\n    let {\n      rows,\n      flatRows,\n      rowsById\n    } = rowModel;\n    const pageStart = pageSize * pageIndex;\n    const pageEnd = pageStart + pageSize;\n    rows = rows.slice(pageStart, pageEnd);\n    let paginatedRowModel;\n    if (!table.options.paginateExpandedRows) {\n      paginatedRowModel = expandRows({\n        rows,\n        flatRows,\n        rowsById\n      });\n    } else {\n      paginatedRowModel = {\n        rows,\n        flatRows,\n        rowsById\n      };\n    }\n    paginatedRowModel.flatRows = [];\n    const handleRow = row => {\n      paginatedRowModel.flatRows.push(row);\n      if (row.subRows.length) {\n        row.subRows.forEach(handleRow);\n      }\n    };\n    paginatedRowModel.rows.forEach(handleRow);\n    return paginatedRowModel;\n  }, getMemoOptions(table.options, 'debugTable', 'getPaginationRowModel'));\n}\n\nfunction getSortedRowModel() {\n  return table => memo(() => [table.getState().sorting, table.getPreSortedRowModel()], (sorting, rowModel) => {\n    if (!rowModel.rows.length || !(sorting != null && sorting.length)) {\n      return rowModel;\n    }\n    const sortingState = table.getState().sorting;\n    const sortedFlatRows = [];\n\n    // Filter out sortings that correspond to non existing columns\n    const availableSorting = sortingState.filter(sort => {\n      var _table$getColumn;\n      return (_table$getColumn = table.getColumn(sort.id)) == null ? void 0 : _table$getColumn.getCanSort();\n    });\n    const columnInfoById = {};\n    availableSorting.forEach(sortEntry => {\n      const column = table.getColumn(sortEntry.id);\n      if (!column) return;\n      columnInfoById[sortEntry.id] = {\n        sortUndefined: column.columnDef.sortUndefined,\n        invertSorting: column.columnDef.invertSorting,\n        sortingFn: column.getSortingFn()\n      };\n    });\n    const sortData = rows => {\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = rows.map(row => ({\n        ...row\n      }));\n      sortedData.sort((rowA, rowB) => {\n        for (let i = 0; i < availableSorting.length; i += 1) {\n          var _sortEntry$desc;\n          const sortEntry = availableSorting[i];\n          const columnInfo = columnInfoById[sortEntry.id];\n          const sortUndefined = columnInfo.sortUndefined;\n          const isDesc = (_sortEntry$desc = sortEntry == null ? void 0 : sortEntry.desc) != null ? _sortEntry$desc : false;\n          let sortInt = 0;\n\n          // All sorting ints should always return in ascending order\n          if (sortUndefined) {\n            const aValue = rowA.getValue(sortEntry.id);\n            const bValue = rowB.getValue(sortEntry.id);\n            const aUndefined = aValue === undefined;\n            const bUndefined = bValue === undefined;\n            if (aUndefined || bUndefined) {\n              if (sortUndefined === 'first') return aUndefined ? -1 : 1;\n              if (sortUndefined === 'last') return aUndefined ? 1 : -1;\n              sortInt = aUndefined && bUndefined ? 0 : aUndefined ? sortUndefined : -sortUndefined;\n            }\n          }\n          if (sortInt === 0) {\n            sortInt = columnInfo.sortingFn(rowA, rowB, sortEntry.id);\n          }\n\n          // If sorting is non-zero, take care of desc and inversion\n          if (sortInt !== 0) {\n            if (isDesc) {\n              sortInt *= -1;\n            }\n            if (columnInfo.invertSorting) {\n              sortInt *= -1;\n            }\n            return sortInt;\n          }\n        }\n        return rowA.index - rowB.index;\n      });\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        var _row$subRows;\n        sortedFlatRows.push(row);\n        if ((_row$subRows = row.subRows) != null && _row$subRows.length) {\n          row.subRows = sortData(row.subRows);\n        }\n      });\n      return sortedData;\n    };\n    return {\n      rows: sortData(rowModel.rows),\n      flatRows: sortedFlatRows,\n      rowsById: rowModel.rowsById\n    };\n  }, getMemoOptions(table.options, 'debugTable', 'getSortedRowModel', () => table._autoResetPageIndex()));\n}\n\nexport { ColumnFaceting, ColumnFiltering, ColumnGrouping, ColumnOrdering, ColumnPinning, ColumnSizing, ColumnVisibility, GlobalFaceting, GlobalFiltering, Headers, RowExpanding, RowPagination, RowPinning, RowSelection, RowSorting, _getVisibleLeafColumns, aggregationFns, buildHeaderGroups, createCell, createColumn, createColumnHelper, createRow, createTable, defaultColumnSizing, expandRows, filterFns, flattenBy, functionalUpdate, getCoreRowModel, getExpandedRowModel, getFacetedMinMaxValues, getFacetedRowModel, getFacetedUniqueValues, getFilteredRowModel, getGroupedRowModel, getMemoOptions, getPaginationRowModel, getSortedRowModel, isFunction, isNumberArray, isRowSelected, isSubRowSelected, makeStateUpdater, memo, noop, orderColumns, passiveEventSupported, reSplitAlphaNumeric, selectRowsFn, shouldAutoRemoveFilter, sortingFns };\n//# sourceMappingURL=index.mjs.map\n","/**\n   * react-table\n   *\n   * Copyright (c) TanStack\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE.md file in the root directory of this source tree.\n   *\n   * @license MIT\n   */\nimport * as React from 'react';\nimport { createTable } from '@tanstack/table-core';\nexport * from '@tanstack/table-core';\n\n//\n\n/**\n * If rendering headers, cells, or footers with custom markup, use flexRender instead of `cell.getValue()` or `cell.renderValue()`.\n */\nfunction flexRender(Comp, props) {\n  return !Comp ? null : isReactComponent(Comp) ? /*#__PURE__*/React.createElement(Comp, props) : Comp;\n}\nfunction isReactComponent(component) {\n  return isClassComponent(component) || typeof component === 'function' || isExoticComponent(component);\n}\nfunction isClassComponent(component) {\n  return typeof component === 'function' && (() => {\n    const proto = Object.getPrototypeOf(component);\n    return proto.prototype && proto.prototype.isReactComponent;\n  })();\n}\nfunction isExoticComponent(component) {\n  return typeof component === 'object' && typeof component.$$typeof === 'symbol' && ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description);\n}\nfunction useReactTable(options) {\n  // Compose in the generic options to the user options\n  const resolvedOptions = {\n    state: {},\n    // Dummy state\n    onStateChange: () => {},\n    // noop\n    renderFallbackValue: null,\n    ...options\n  };\n\n  // Create a new table and store it in state\n  const [tableRef] = React.useState(() => ({\n    current: createTable(resolvedOptions)\n  }));\n\n  // By default, manage table state here using the table's initial state\n  const [state, setState] = React.useState(() => tableRef.current.initialState);\n\n  // Compose the default state above with any user state. This will allow the user\n  // to only control a subset of the state if desired.\n  tableRef.current.setOptions(prev => ({\n    ...prev,\n    ...options,\n    state: {\n      ...state,\n      ...options.state\n    },\n    // Similarly, we'll maintain both our internal state and any user-provided\n    // state.\n    onStateChange: updater => {\n      setState(updater);\n      options.onStateChange == null || options.onStateChange(updater);\n    }\n  }));\n  return tableRef.current;\n}\n\nexport { flexRender, useReactTable };\n//# sourceMappingURL=index.mjs.map\n","import React, { useMemo } from 'react';\n\ninterface PivotState {\n  rowFields: string[];\n  columnFields: string[];\n  valueFields: { field: string; aggregation: 'sum' | 'avg' | 'count' }[];\n}\n\ninterface PivotTableViewProps<T = any> {\n  data: T[];\n  pivotState: PivotState;\n}\n\ninterface PivotData {\n  [key: string]: any;\n}\n\nexport function PivotTableView<T = any>({ data, pivotState }: PivotTableViewProps<T>) {\n  const pivotData = useMemo(() => {\n    if (pivotState.rowFields.length === 0 || pivotState.valueFields.length === 0) {\n      return { rows: [], columns: [], uniqueColumnValues: [] };\n    }\n\n    // Group data by row fields\n    const grouped = data.reduce((acc, item) => {\n      const key = pivotState.rowFields.map(field => (item as any)[field] || 'N/A').join('|');\n      if (!acc[key]) {\n        acc[key] = [];\n      }\n      acc[key].push(item);\n      return acc;\n    }, {} as Record<string, T[]>);\n\n    // Get unique values for column fields\n    const uniqueColumnValues = pivotState.columnFields.length > 0 \n      ? [...new Set(data.map(item => \n          pivotState.columnFields.map(field => (item as any)[field] || 'N/A').join('|')\n        ))]\n      : ['Total'];\n\n    // Create pivot structure\n    const pivotRows = Object.entries(grouped).map(([key, items]) => {\n      const rowData: PivotData = {};\n      \n      // Add row field values\n      const keyParts = key.split('|');\n      pivotState.rowFields.forEach((field, index) => {\n        rowData[field] = keyParts[index];\n      });\n\n      // Calculate values for each column combination\n      uniqueColumnValues.forEach(columnKey => {\n        const columnItems = pivotState.columnFields.length > 0 \n          ? items.filter(item => {\n              const itemColumnKey = pivotState.columnFields.map(field => \n                (item as any)[field] || 'N/A'\n              ).join('|');\n              return itemColumnKey === columnKey;\n            })\n          : items;\n\n        pivotState.valueFields.forEach(({ field, aggregation }) => {\n          const values = columnItems.map(item => Number((item as any)[field]) || 0).filter(v => !isNaN(v));\n          const columnLabel = pivotState.columnFields.length > 0 ? columnKey : 'Total';\n          const cellKey = `${columnLabel}_${field}_${aggregation}`;\n          \n          if (aggregation === 'sum') {\n            rowData[cellKey] = values.reduce((sum, val) => sum + val, 0);\n          } else if (aggregation === 'avg') {\n            rowData[cellKey] = values.length > 0 ? values.reduce((sum, val) => sum + val, 0) / values.length : 0;\n          } else if (aggregation === 'count') {\n            rowData[cellKey] = values.length;\n          }\n        });\n      });\n\n      return rowData;\n    });\n\n    return {\n      rows: pivotRows,\n      columns: uniqueColumnValues,\n      uniqueColumnValues\n    };\n  }, [data, pivotState]);\n\n  if (pivotState.rowFields.length === 0 || pivotState.valueFields.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n        <p>Configure row fields and value fields to see pivot table</p>\n      </div>\n    );\n  }\n\n  const getFieldLabel = (field: string) => {\n    const labels: Record<string, string> = {\n      department: 'Department',\n      region: 'Region',\n      status: 'Status',\n      performance: 'Performance',\n      firstName: 'First Name',\n      lastName: 'Last Name',\n      salary: 'Salary',\n      age: 'Age',\n      visits: 'Visits',\n      progress: 'Progress'\n    };\n    return labels[field] || field;\n  };\n\n  const formatValue = (value: any, field: string, aggregation: string) => {\n    if (typeof value !== 'number') return value;\n    \n    if (field === 'salary') {\n      return `$${value.toLocaleString()}`;\n    }\n    \n    if (aggregation === 'avg') {\n      return value.toFixed(1);\n    }\n    \n    return value.toLocaleString();\n  };\n\n  return (\n    <div className=\"mt-6\">\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-900 dark:text-gray-100\">\n        Pivot Table Results\n      </h3>\n      \n      <div className=\"overflow-x-auto border rounded-lg bg-white dark:bg-gray-800\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-900\">\n            <tr>\n              {/* Row field headers */}\n              {pivotState.rowFields.map(field => (\n                <th\n                  key={field}\n                  className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"\n                >\n                  {getFieldLabel(field)}\n                </th>\n              ))}\n              \n              {/* Column headers for each unique column value and value field combination */}\n              {pivotData.uniqueColumnValues.map(columnValue => (\n                pivotState.valueFields.map(({ field, aggregation }) => (\n                  <th\n                    key={`${columnValue}_${field}_${aggregation}`}\n                    className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"\n                  >\n                    {pivotState.columnFields.length > 0 ? (\n                      <div>\n                        <div className=\"font-semibold\">{columnValue}</div>\n                        <div className=\"text-xs opacity-75\">\n                          {aggregation}({getFieldLabel(field)})\n                        </div>\n                      </div>\n                    ) : (\n                      `${aggregation}(${getFieldLabel(field)})`\n                    )}\n                  </th>\n                ))\n              ))}\n            </tr>\n          </thead>\n          \n          <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n            {pivotData.rows.map((row, index) => (\n              <tr key={index} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                {/* Row field values */}\n                {pivotState.rowFields.map(field => (\n                  <td\n                    key={field}\n                    className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\"\n                  >\n                    <span className={`px-2 py-1 rounded text-xs ${\n                      field === 'department' ? (\n                        row[field] === 'Sales' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' :\n                        row[field] === 'Marketing' ? 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200' :\n                        row[field] === 'Engineering' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200' :\n                        row[field] === 'HR' ? 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200' :\n                        row[field] === 'Finance' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200' :\n                        'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'\n                      ) : field === 'region' ? (\n                        row[field] === 'North' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200' :\n                        row[field] === 'South' ? 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200' :\n                        row[field] === 'East' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' :\n                        row[field] === 'West' ? 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200' :\n                        'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'\n                      ) : field === 'performance' ? (\n                        row[field] === 'Excellent' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' :\n                        row[field] === 'Good' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200' :\n                        row[field] === 'Average' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200' :\n                        'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'\n                      ) : field === 'status' ? (\n                        row[field] === 'Married' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' :\n                        row[field] === 'Single' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200' :\n                        'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'\n                      ) : 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'\n                    }`}>\n                      {row[field]}\n                    </span>\n                  </td>\n                ))}\n                \n                {/* Value cells */}\n                {pivotData.uniqueColumnValues.map(columnValue => (\n                  pivotState.valueFields.map(({ field, aggregation }) => {\n                    const cellKey = `${columnValue}_${field}_${aggregation}`;\n                    const value = row[cellKey];\n                    \n                    return (\n                      <td\n                        key={cellKey}\n                        className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\"\n                      >\n                        <div className=\"font-medium\">\n                          {formatValue(value, field, aggregation)}\n                        </div>\n                      </td>\n                    );\n                  })\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      \n      <div className=\"mt-4 text-xs text-gray-500 dark:text-gray-400\">\n        <p>\n          <strong>Pivot Summary:</strong> {pivotData.rows.length} rows grouped by{' '}\n          {pivotState.rowFields.map(getFieldLabel).join(', ')}\n          {pivotState.columnFields.length > 0 && (\n            <span>, pivoted by {pivotState.columnFields.map(getFieldLabel).join(', ')}</span>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Table } from '@tanstack/react-table';\nimport { PivotTableView } from './pivot-table-view';\n\ninterface PivotState {\n  rowFields: string[];\n  columnFields: string[];\n  valueFields: { field: string; aggregation: 'sum' | 'avg' | 'count' }[];\n}\n\ninterface PivotControlsProps<T = any> {\n  table: Table<T>;\n}\n\nexport function PivotControls<T = any>({ table }: PivotControlsProps<T>) {\n  const [pivotState, setPivotState] = useState<PivotState>({\n    rowFields: [],\n    columnFields: [],\n    valueFields: []\n  });\n\n  const availableColumns = [\n    { id: 'department', label: 'Department' },\n    { id: 'region', label: 'Region' },\n    { id: 'status', label: 'Status' },\n    { id: 'performance', label: 'Performance' },\n    { id: 'firstName', label: 'First Name' },\n    { id: 'lastName', label: 'Last Name' }\n  ];\n\n  const valueColumns = [\n    { id: 'salary', label: 'Salary', aggregations: ['sum', 'avg'] },\n    { id: 'age', label: 'Age', aggregations: ['avg', 'count'] },\n    { id: 'visits', label: 'Visits', aggregations: ['sum', 'avg'] },\n    { id: 'progress', label: 'Progress', aggregations: ['avg'] }\n  ];\n\n  const addRowField = (field: string) => {\n    if (!pivotState.rowFields.includes(field)) {\n      setPivotState(prev => ({\n        ...prev,\n        rowFields: [...prev.rowFields, field]\n      }));\n    }\n  };\n\n  const addColumnField = (field: string) => {\n    if (!pivotState.columnFields.includes(field)) {\n      setPivotState(prev => ({\n        ...prev,\n        columnFields: [...prev.columnFields, field]\n      }));\n    }\n  };\n\n  const addValueField = (field: string, aggregation: 'sum' | 'avg' | 'count') => {\n    const exists = pivotState.valueFields.find(v => v.field === field && v.aggregation === aggregation);\n    if (!exists) {\n      setPivotState(prev => ({\n        ...prev,\n        valueFields: [...prev.valueFields, { field, aggregation }]\n      }));\n    }\n  };\n\n  const removeField = (type: 'row' | 'column' | 'value', index: number) => {\n    setPivotState(prev => {\n      if (type === 'row') {\n        return { ...prev, rowFields: prev.rowFields.filter((_, i) => i !== index) };\n      } else if (type === 'column') {\n        return { ...prev, columnFields: prev.columnFields.filter((_, i) => i !== index) };\n      } else {\n        return { ...prev, valueFields: prev.valueFields.filter((_, i) => i !== index) };\n      }\n    });\n  };\n\n  const generatePivotData = () => {\n    const data = table.getFilteredRowModel().rows.map(row => row.original);\n    \n    if (pivotState.rowFields.length === 0 || pivotState.valueFields.length === 0) {\n      return data;\n    }\n\n    // Group data by row fields\n    const grouped = data.reduce((acc, item) => {\n      const key = pivotState.rowFields.map(field => (item as any)[field] || 'N/A').join('|');\n      if (!acc[key]) {\n        acc[key] = [];\n      }\n      acc[key].push(item);\n      return acc;\n    }, {} as Record<string, T[]>);\n\n    // Create pivot structure\n    const pivotData = Object.entries(grouped).map(([key, items]) => {\n      const rowData: Record<string, any> = {};\n      \n      // Add row field values\n      const keyParts = key.split('|');\n      pivotState.rowFields.forEach((field, index) => {\n        rowData[field] = keyParts[index];\n      });\n\n      // Calculate aggregated values\n      pivotState.valueFields.forEach(({ field, aggregation }) => {\n        const values = items.map(item => Number((item as any)[field]) || 0).filter(v => !isNaN(v));\n        \n        if (aggregation === 'sum') {\n          rowData[`${field}_sum`] = values.reduce((sum, val) => sum + val, 0);\n        } else if (aggregation === 'avg') {\n          rowData[`${field}_avg`] = values.length > 0 ? values.reduce((sum, val) => sum + val, 0) / values.length : 0;\n        } else if (aggregation === 'count') {\n          rowData[`${field}_count`] = values.length;\n        }\n      });\n\n      return rowData;\n    });\n\n    return pivotData;\n  };\n\n  const applyPivot = () => {\n    // Generate pivot data for display\n    const pivotData = generatePivotData();\n    console.log('Pivot Data:', pivotData);\n    console.log('Pivot Configuration:', pivotState);\n  };\n\n  const tableData = table.getFilteredRowModel().rows.map(row => row.original);\n\n  return (\n    <div className=\"border rounded-lg p-4 bg-gray-50 dark:bg-gray-800\">\n      <div className=\"text-sm font-medium mb-4\">Pivot Configuration</div>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 mb-4\">\n        {/* Row Fields */}\n        <div>\n          <label className=\"block text-xs font-medium mb-2\">Rows (Group By)</label>\n          <select \n            className=\"w-full text-xs border rounded px-2 py-1 mb-2\"\n            onChange={(e) => e.target.value && addRowField(e.target.value)}\n            value=\"\"\n          >\n            <option value=\"\">Add row field...</option>\n            {availableColumns.map(col => (\n              <option key={col.id} value={col.id}>{col.label}</option>\n            ))}\n          </select>\n          <div className=\"space-y-1\">\n            {pivotState.rowFields.map((field, index) => (\n              <div key={index} className=\"flex items-center justify-between bg-blue-100 dark:bg-blue-900 px-2 py-1 rounded text-xs\">\n                <span>{availableColumns.find(c => c.id === field)?.label || field}</span>\n                <button \n                  onClick={() => removeField('row', index)}\n                  className=\"text-red-500 hover:text-red-700\"\n                >\n                  ×\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Column Fields */}\n        <div>\n          <label className=\"block text-xs font-medium mb-2\">Columns (Pivot By)</label>\n          <select \n            className=\"w-full text-xs border rounded px-2 py-1 mb-2\"\n            onChange={(e) => e.target.value && addColumnField(e.target.value)}\n            value=\"\"\n          >\n            <option value=\"\">Add column field...</option>\n            {availableColumns.map(col => (\n              <option key={col.id} value={col.id}>{col.label}</option>\n            ))}\n          </select>\n          <div className=\"space-y-1\">\n            {pivotState.columnFields.map((field, index) => (\n              <div key={index} className=\"flex items-center justify-between bg-green-100 dark:bg-green-900 px-2 py-1 rounded text-xs\">\n                <span>{availableColumns.find(c => c.id === field)?.label || field}</span>\n                <button \n                  onClick={() => removeField('column', index)}\n                  className=\"text-red-500 hover:text-red-700\"\n                >\n                  ×\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Value Fields */}\n        <div>\n          <label className=\"block text-xs font-medium mb-2\">Values (Aggregate)</label>\n          <div className=\"space-y-2 mb-2\">\n            {valueColumns.map(col => (\n              <div key={col.id}>\n                <div className=\"text-xs font-medium\">{col.label}</div>\n                <div className=\"flex gap-1\">\n                  {col.aggregations.map(agg => (\n                    <button\n                      key={agg}\n                      onClick={() => addValueField(col.id, agg as any)}\n                      className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-700 rounded hover:bg-gray-300 dark:hover:bg-gray-600\"\n                    >\n                      {agg}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"space-y-1\">\n            {pivotState.valueFields.map((valueField, index) => (\n              <div key={index} className=\"flex items-center justify-between bg-purple-100 dark:bg-purple-900 px-2 py-1 rounded text-xs\">\n                <span>{valueField.aggregation}({valueColumns.find(c => c.id === valueField.field)?.label || valueField.field})</span>\n                <button \n                  onClick={() => removeField('value', index)}\n                  className=\"text-red-500 hover:text-red-700\"\n                >\n                  ×\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex gap-2\">\n        <button\n          onClick={applyPivot}\n          className=\"px-3 py-1 bg-blue-500 text-white text-xs rounded hover:bg-blue-600\"\n          disabled={pivotState.rowFields.length === 0 || pivotState.valueFields.length === 0}\n        >\n          Apply Pivot\n        </button>\n        <button\n          onClick={() => setPivotState({ rowFields: [], columnFields: [], valueFields: [] })}\n          className=\"px-3 py-1 bg-gray-500 text-white text-xs rounded hover:bg-gray-600\"\n        >\n          Clear All\n        </button>\n      </div>\n\n      {(pivotState.rowFields.length > 0 || pivotState.columnFields.length > 0 || pivotState.valueFields.length > 0) && (\n        <PivotTableView<T> data={tableData} pivotState={pivotState} />\n      )}\n    </div>\n  );\n}\n","import { ColumnDef, Table } from '@tanstack/react-table';\nimport { ExportOptions } from '../types/table-config';\n\n/**\n * Export format types\n */\nexport type ExportFormat = 'csv' | 'excel' | 'json' | 'print';\n\n/**\n * Export configuration for individual operations\n */\nexport interface ExportConfig {\n  /** Filename for the exported file (without extension) */\n  filename?: string;\n  /** Whether to include column headers */\n  includeHeaders?: boolean;\n  /** Custom column headers (overrides default headers) */\n  customHeaders?: Record<string, string>;\n  /** Columns to include in export (by column id) */\n  includeColumns?: string[];\n  /** Columns to exclude from export (by column id) */\n  excludeColumns?: string[];\n  /** Custom data transformer function */\n  dataTransformer?: (data: any[]) => any[];\n  /** Date format for date columns */\n  dateFormat?: string;\n}\n\n/**\n * CSV-specific export configuration\n */\nexport interface CSVExportConfig extends ExportConfig {\n  /** CSV delimiter (default: ',') */\n  delimiter?: string;\n  /** Quote character for CSV fields */\n  quote?: string;\n  /** Whether to quote all fields */\n  quoteAll?: boolean;\n}\n\n/**\n * Excel-specific export configuration\n */\nexport interface ExcelExportConfig extends ExportConfig {\n  /** Excel sheet name */\n  sheetName?: string;\n  /** Whether to auto-fit column widths */\n  autoFitColumns?: boolean;\n  /** Custom column widths */\n  columnWidths?: Record<string, number>;\n}\n\n/**\n * Print-specific export configuration\n */\nexport interface PrintExportConfig extends ExportConfig {\n  /** Page orientation */\n  orientation?: 'portrait' | 'landscape';\n  /** Paper size */\n  paperSize?: 'A4' | 'letter' | 'legal';\n  /** Print title */\n  title?: string;\n  /** Whether to include page numbers */\n  includePageNumbers?: boolean;\n  /** Custom CSS for print styling */\n  customCSS?: string;\n}\n\n/**\n * Export result interface\n */\nexport interface ExportResult {\n  /** Whether the export was successful */\n  success: boolean;\n  /** Error message if export failed */\n  error?: string;\n  /** Generated filename */\n  filename?: string;\n  /** Export format used */\n  format: ExportFormat;\n  /** Number of rows exported */\n  rowCount: number;\n  /** Export timestamp */\n  timestamp: Date;\n}\n\n/**\n * Main export utility class\n */\nexport class TableExportUtils {\n  /**\n   * Export table data to CSV format\n   */\n  static async exportToCSV<T = any>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    config: CSVExportConfig = {}\n  ): Promise<ExportResult> {\n    try {\n      const {\n        filename = 'table-export',\n        includeHeaders = true,\n        delimiter = ',',\n        quote = '\"',\n        quoteAll = false,\n        customHeaders,\n        includeColumns,\n        excludeColumns,\n        dataTransformer,\n      } = config;\n\n      // Filter columns based on include/exclude lists\n      const filteredColumns = this.filterColumns(columns, includeColumns, excludeColumns);\n      \n      // Transform data if transformer provided\n      const processedData = dataTransformer ? dataTransformer(data) : data;\n      \n      // Generate CSV content\n      const csvContent = this.generateCSVContent(\n        processedData,\n        filteredColumns,\n        {\n          includeHeaders,\n          delimiter,\n          quote,\n          quoteAll,\n          customHeaders,\n        }\n      );\n\n      // Download the file\n      const finalFilename = `${filename}.csv`;\n      this.downloadFile(csvContent, finalFilename, 'text/csv');\n\n      return {\n        success: true,\n        filename: finalFilename,\n        format: 'csv',\n        rowCount: processedData.length,\n        timestamp: new Date(),\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n        format: 'csv',\n        rowCount: 0,\n        timestamp: new Date(),\n      };\n    }\n  }\n\n  /**\n   * Export table data to Excel format\n   */\n  static async exportToExcel<T = any>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    config: ExcelExportConfig = {}\n  ): Promise<ExportResult> {\n    try {\n      const {\n        filename = 'table-export',\n        sheetName = 'Sheet1',\n        includeHeaders = true,\n        customHeaders,\n        includeColumns,\n        excludeColumns,\n        dataTransformer,\n      } = config;\n\n      // Filter columns based on include/exclude lists\n      const filteredColumns = this.filterColumns(columns, includeColumns, excludeColumns);\n      \n      // Transform data if transformer provided\n      const processedData = dataTransformer ? dataTransformer(data) : data;\n\n      // Generate Excel workbook\n      const workbook = this.generateExcelWorkbook(\n        processedData,\n        filteredColumns,\n        {\n          sheetName,\n          includeHeaders,\n          customHeaders,\n        }\n      );\n\n      // Download the file\n      const finalFilename = `${filename}.xlsx`;\n      this.downloadExcelFile(workbook, finalFilename);\n\n      return {\n        success: true,\n        filename: finalFilename,\n        format: 'excel',\n        rowCount: processedData.length,\n        timestamp: new Date(),\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n        format: 'excel',\n        rowCount: 0,\n        timestamp: new Date(),\n      };\n    }\n  }\n\n  /**\n   * Export table data to JSON format\n   */\n  static async exportToJSON<T = any>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    config: ExportConfig = {}\n  ): Promise<ExportResult> {\n    try {\n      const {\n        filename = 'table-export',\n        includeColumns,\n        excludeColumns,\n        dataTransformer,\n      } = config;\n\n      // Transform data if transformer provided\n      let processedData = dataTransformer ? dataTransformer(data) : data;\n\n      // Filter data based on column selection\n      if (includeColumns || excludeColumns) {\n        processedData = this.filterDataByColumns(processedData, columns, includeColumns, excludeColumns);\n      }\n\n      // Generate JSON content\n      const jsonContent = JSON.stringify(processedData, null, 2);\n\n      // Download the file\n      const finalFilename = `${filename}.json`;\n      this.downloadFile(jsonContent, finalFilename, 'application/json');\n\n      return {\n        success: true,\n        filename: finalFilename,\n        format: 'json',\n        rowCount: processedData.length,\n        timestamp: new Date(),\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n        format: 'json',\n        rowCount: 0,\n        timestamp: new Date(),\n      };\n    }\n  }\n\n  /**\n   * Generate print-optimized table layout\n   */\n  static generatePrintLayout<T = any>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    config: PrintExportConfig = {}\n  ): string {\n    const {\n      title = 'Table Export',\n      orientation = 'portrait',\n      paperSize = 'A4',\n      includeHeaders = true,\n      includePageNumbers = true,\n      customCSS = '',\n      customHeaders,\n      includeColumns,\n      excludeColumns,\n    } = config;\n\n    // Filter columns based on include/exclude lists\n    const filteredColumns = this.filterColumns(columns, includeColumns, excludeColumns);\n\n    // Generate HTML content for printing\n    const htmlContent = this.generatePrintHTML(\n      data,\n      filteredColumns,\n      {\n        title,\n        orientation,\n        paperSize,\n        includeHeaders,\n        includePageNumbers,\n        customCSS,\n        customHeaders,\n      }\n    );\n\n    return htmlContent;\n  }\n\n  /**\n   * Open print dialog with optimized layout\n   */\n  static async printTable<T = any>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    config: PrintExportConfig = {}\n  ): Promise<ExportResult> {\n    try {\n      const htmlContent = this.generatePrintLayout(data, columns, config);\n      \n      // Create a new window for printing\n      const printWindow = window.open('', '_blank');\n      if (!printWindow) {\n        throw new Error('Unable to open print window. Please check popup blocker settings.');\n      }\n\n      printWindow.document.write(htmlContent);\n      printWindow.document.close();\n      \n      // Wait for content to load, then print\n      printWindow.onload = () => {\n        printWindow.print();\n        printWindow.close();\n      };\n\n      return {\n        success: true,\n        format: 'print',\n        rowCount: data.length,\n        timestamp: new Date(),\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n        format: 'print',\n        rowCount: 0,\n        timestamp: new Date(),\n      };\n    }\n  }\n\n  /**\n   * Export data from TanStack Table instance\n   */\n  static async exportFromTable<T = any>(\n    table: Table<T>,\n    format: ExportFormat,\n    config: ExportConfig = {}\n  ): Promise<ExportResult> {\n    const data = table.getRowModel().rows.map(row => row.original);\n    const columns = table.getAllColumns().map(col => col.columnDef);\n\n    switch (format) {\n      case 'csv':\n        return this.exportToCSV(data, columns, config as CSVExportConfig);\n      case 'excel':\n        return this.exportToExcel(data, columns, config as ExcelExportConfig);\n      case 'json':\n        return this.exportToJSON(data, columns, config);\n      case 'print':\n        return this.printTable(data, columns, config as PrintExportConfig);\n      default:\n        return {\n          success: false,\n          error: `Unsupported export format: ${format}`,\n          format,\n          rowCount: 0,\n          timestamp: new Date(),\n        };\n    }\n  }\n\n  // Private helper methods\n\n  private static filterColumns<T>(\n    columns: ColumnDef<T>[],\n    includeColumns?: string[],\n    excludeColumns?: string[]\n  ): ColumnDef<T>[] {\n    let filteredColumns = columns;\n\n    if (includeColumns) {\n      filteredColumns = filteredColumns.filter(col => \n        includeColumns.includes(col.id || '')\n      );\n    }\n\n    if (excludeColumns) {\n      filteredColumns = filteredColumns.filter(col => \n        !excludeColumns.includes(col.id || '')\n      );\n    }\n\n    return filteredColumns;\n  }\n\n  private static filterDataByColumns<T extends Record<string, any>>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    includeColumns?: string[],\n    excludeColumns?: string[]\n  ): Partial<T>[] {\n    const filteredColumns = this.filterColumns(columns, includeColumns, excludeColumns);\n    const columnIds = filteredColumns.map(col => col.id).filter(Boolean);\n\n    return data.map(row => {\n      const filteredRow: Partial<T> = {};\n      columnIds.forEach(id => {\n        if (id && id in row) {\n          (filteredRow as any)[id] = (row as any)[id];\n        }\n      });\n      return filteredRow;\n    });\n  }\n\n  private static generateCSVContent<T>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    options: {\n      includeHeaders: boolean;\n      delimiter: string;\n      quote: string;\n      quoteAll: boolean;\n      customHeaders?: Record<string, string>;\n    }\n  ): string {\n    const { includeHeaders, delimiter, quote, quoteAll, customHeaders } = options;\n    const lines: string[] = [];\n\n    // Add headers if requested\n    if (includeHeaders) {\n      const headers = columns.map(col => {\n        const headerId = col.id || '';\n        const headerText = customHeaders?.[headerId] || \n                          (typeof col.header === 'string' ? col.header : headerId);\n        return this.escapeCSVField(headerText, delimiter, quote, quoteAll);\n      });\n      lines.push(headers.join(delimiter));\n    }\n\n    // Add data rows\n    data.forEach(row => {\n      const values = columns.map(col => {\n        const value = this.getCellValue(row, col);\n        return this.escapeCSVField(String(value || ''), delimiter, quote, quoteAll);\n      });\n      lines.push(values.join(delimiter));\n    });\n\n    return lines.join('\\n');\n  }\n\n  private static escapeCSVField(\n    field: string,\n    delimiter: string,\n    quote: string,\n    quoteAll: boolean\n  ): string {\n    const needsQuoting = quoteAll || \n                        field.includes(delimiter) || \n                        field.includes(quote) || \n                        field.includes('\\n') || \n                        field.includes('\\r');\n\n    if (needsQuoting) {\n      const escapedField = field.replace(new RegExp(quote, 'g'), quote + quote);\n      return quote + escapedField + quote;\n    }\n\n    return field;\n  }\n\n  private static generateExcelWorkbook<T>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    options: {\n      sheetName: string;\n      includeHeaders: boolean;\n      customHeaders?: Record<string, string>;\n    }\n  ): any {\n    // This is a simplified Excel generation\n    // In a real implementation, you would use a library like xlsx or exceljs\n    const { sheetName, includeHeaders, customHeaders } = options;\n    \n    const worksheetData: any[][] = [];\n\n    // Add headers if requested\n    if (includeHeaders) {\n      const headers = columns.map(col => {\n        const headerId = col.id || '';\n        return customHeaders?.[headerId] || \n               (typeof col.header === 'string' ? col.header : headerId);\n      });\n      worksheetData.push(headers);\n    }\n\n    // Add data rows\n    data.forEach(row => {\n      const values = columns.map(col => this.getCellValue(row, col));\n      worksheetData.push(values);\n    });\n\n    // Return a simple workbook structure\n    // In a real implementation, this would be a proper Excel workbook\n    return {\n      SheetNames: [sheetName],\n      Sheets: {\n        [sheetName]: worksheetData\n      }\n    };\n  }\n\n  private static generatePrintHTML<T>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    options: {\n      title: string;\n      orientation: 'portrait' | 'landscape';\n      paperSize: string;\n      includeHeaders: boolean;\n      includePageNumbers: boolean;\n      customCSS: string;\n      customHeaders?: Record<string, string>;\n    }\n  ): string {\n    const { title, orientation, paperSize, includeHeaders, includePageNumbers, customCSS, customHeaders } = options;\n\n    const printCSS = `\n      <style>\n        @page {\n          size: ${paperSize} ${orientation};\n          margin: 1in;\n        }\n        \n        body {\n          font-family: Arial, sans-serif;\n          font-size: 12px;\n          line-height: 1.4;\n          margin: 0;\n          padding: 0;\n        }\n        \n        .print-header {\n          text-align: center;\n          margin-bottom: 20px;\n          border-bottom: 2px solid #333;\n          padding-bottom: 10px;\n        }\n        \n        .print-title {\n          font-size: 18px;\n          font-weight: bold;\n          margin: 0;\n        }\n        \n        .print-date {\n          font-size: 10px;\n          color: #666;\n          margin: 5px 0 0 0;\n        }\n        \n        .print-table {\n          width: 100%;\n          border-collapse: collapse;\n          margin-bottom: 20px;\n        }\n        \n        .print-table th,\n        .print-table td {\n          border: 1px solid #ddd;\n          padding: 8px;\n          text-align: left;\n          font-size: 11px;\n        }\n        \n        .print-table th {\n          background-color: #f5f5f5;\n          font-weight: bold;\n        }\n        \n        .print-table tr:nth-child(even) {\n          background-color: #f9f9f9;\n        }\n        \n        .print-footer {\n          position: fixed;\n          bottom: 0;\n          width: 100%;\n          text-align: center;\n          font-size: 10px;\n          color: #666;\n        }\n        \n        @media print {\n          .print-table {\n            page-break-inside: auto;\n          }\n          \n          .print-table tr {\n            page-break-inside: avoid;\n            page-break-after: auto;\n          }\n          \n          .print-table thead {\n            display: table-header-group;\n          }\n          \n          .print-table tfoot {\n            display: table-footer-group;\n          }\n        }\n        \n        ${customCSS}\n      </style>\n    `;\n\n    const headerHTML = `\n      <div class=\"print-header\">\n        <h1 class=\"print-title\">${title}</h1>\n        <p class=\"print-date\">Generated on ${new Date().toLocaleString()}</p>\n      </div>\n    `;\n\n    const tableHTML = this.generateTableHTML(data, columns, includeHeaders, customHeaders);\n\n    const footerHTML = includePageNumbers ? `\n      <div class=\"print-footer\">\n        Page <span class=\"page-number\"></span>\n      </div>\n    ` : '';\n\n    return `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <title>${title}</title>\n          ${printCSS}\n        </head>\n        <body>\n          ${headerHTML}\n          ${tableHTML}\n          ${footerHTML}\n        </body>\n      </html>\n    `;\n  }\n\n  private static generateTableHTML<T>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    includeHeaders: boolean,\n    customHeaders?: Record<string, string>\n  ): string {\n    let html = '<table class=\"print-table\">';\n\n    // Add headers if requested\n    if (includeHeaders) {\n      html += '<thead><tr>';\n      columns.forEach(col => {\n        const headerId = col.id || '';\n        const headerText = customHeaders?.[headerId] || \n                          (typeof col.header === 'string' ? col.header : headerId);\n        html += `<th>${this.escapeHTML(headerText)}</th>`;\n      });\n      html += '</tr></thead>';\n    }\n\n    // Add data rows\n    html += '<tbody>';\n    data.forEach(row => {\n      html += '<tr>';\n      columns.forEach(col => {\n        const value = this.getCellValue(row, col);\n        html += `<td>${this.escapeHTML(String(value || ''))}</td>`;\n      });\n      html += '</tr>';\n    });\n    html += '</tbody>';\n\n    html += '</table>';\n    return html;\n  }\n\n  private static getCellValue<T>(row: T, column: ColumnDef<T>): any {\n    // Handle accessor function\n    if ('accessorFn' in column && typeof column.accessorFn === 'function') {\n      return column.accessorFn(row, 0);\n    }\n    \n    // Handle accessor key\n    if ('accessorKey' in column && column.accessorKey) {\n      const key = column.accessorKey as keyof T;\n      return row[key];\n    }\n    \n    // Handle direct property access via id\n    if (column.id && typeof row === 'object' && row !== null) {\n      const value = (row as any)[column.id];\n      if (value !== undefined) {\n        return value;\n      }\n    }\n    \n    return '';\n  }\n\n  private static escapeHTML(text: string): string {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  private static downloadFile(content: string, filename: string, mimeType: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = URL.createObjectURL(blob);\n    \n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.style.display = 'none';\n    \n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    URL.revokeObjectURL(url);\n  }\n\n  private static downloadExcelFile(workbook: any, filename: string): void {\n    // This is a simplified implementation\n    // In a real implementation, you would use a library like xlsx to generate proper Excel files\n    const csvContent = this.convertWorkbookToCSV(workbook);\n    this.downloadFile(csvContent, filename.replace('.xlsx', '.csv'), 'text/csv');\n  }\n\n  private static convertWorkbookToCSV(workbook: any): string {\n    const sheetName = workbook.SheetNames[0];\n    const worksheet = workbook.Sheets[sheetName];\n    \n    return worksheet.map((row: any[]) => \n      row.map((cell: any) => `\"${String(cell || '').replace(/\"/g, '\"\"')}\"`).join(',')\n    ).join('\\n');\n  }\n}\n\n/**\n * React hook for table export functionality\n */\nexport function useTableExport<T = any>() {\n  const exportToCSV = async (\n    data: T[],\n    columns: ColumnDef<T>[],\n    config?: CSVExportConfig\n  ) => {\n    return TableExportUtils.exportToCSV(data, columns, config);\n  };\n\n  const exportToExcel = async (\n    data: T[],\n    columns: ColumnDef<T>[],\n    config?: ExcelExportConfig\n  ) => {\n    return TableExportUtils.exportToExcel(data, columns, config);\n  };\n\n  const exportToJSON = async (\n    data: T[],\n    columns: ColumnDef<T>[],\n    config?: ExportConfig\n  ) => {\n    return TableExportUtils.exportToJSON(data, columns, config);\n  };\n\n  const printTable = async (\n    data: T[],\n    columns: ColumnDef<T>[],\n    config?: PrintExportConfig\n  ) => {\n    return TableExportUtils.printTable(data, columns, config);\n  };\n\n  const exportFromTable = async (\n    table: Table<T>,\n    format: ExportFormat,\n    config?: ExportConfig\n  ) => {\n    return TableExportUtils.exportFromTable(table, format, config);\n  };\n\n  return {\n    exportToCSV,\n    exportToExcel,\n    exportToJSON,\n    printTable,\n    exportFromTable,\n  };\n}\n\n/**\n * Export configuration builder for fluent API\n */\nexport class ExportConfigBuilder {\n  private config: ExportConfig = {};\n\n  static create(): ExportConfigBuilder {\n    return new ExportConfigBuilder();\n  }\n\n  filename(filename: string): ExportConfigBuilder {\n    this.config.filename = filename;\n    return this;\n  }\n\n  includeHeaders(include: boolean = true): ExportConfigBuilder {\n    this.config.includeHeaders = include;\n    return this;\n  }\n\n  customHeaders(headers: Record<string, string>): ExportConfigBuilder {\n    this.config.customHeaders = headers;\n    return this;\n  }\n\n  includeColumns(columns: string[]): ExportConfigBuilder {\n    this.config.includeColumns = columns;\n    return this;\n  }\n\n  excludeColumns(columns: string[]): ExportConfigBuilder {\n    this.config.excludeColumns = columns;\n    return this;\n  }\n\n  dataTransformer(transformer: (data: any[]) => any[]): ExportConfigBuilder {\n    this.config.dataTransformer = transformer;\n    return this;\n  }\n\n  build(): ExportConfig {\n    return { ...this.config };\n  }\n}\n\n/**\n * CSV-specific configuration builder\n */\nexport class CSVExportConfigBuilder extends ExportConfigBuilder {\n  private csvConfig: Partial<CSVExportConfig> = {};\n\n  static create(): CSVExportConfigBuilder {\n    return new CSVExportConfigBuilder();\n  }\n\n  filename(filename: string): CSVExportConfigBuilder {\n    super.filename(filename);\n    return this;\n  }\n\n  includeHeaders(include: boolean = true): CSVExportConfigBuilder {\n    super.includeHeaders(include);\n    return this;\n  }\n\n  customHeaders(headers: Record<string, string>): CSVExportConfigBuilder {\n    super.customHeaders(headers);\n    return this;\n  }\n\n  includeColumns(columns: string[]): CSVExportConfigBuilder {\n    super.includeColumns(columns);\n    return this;\n  }\n\n  excludeColumns(columns: string[]): CSVExportConfigBuilder {\n    super.excludeColumns(columns);\n    return this;\n  }\n\n  dataTransformer(transformer: (data: any[]) => any[]): CSVExportConfigBuilder {\n    super.dataTransformer(transformer);\n    return this;\n  }\n\n  delimiter(delimiter: string): CSVExportConfigBuilder {\n    this.csvConfig.delimiter = delimiter;\n    return this;\n  }\n\n  quote(quote: string): CSVExportConfigBuilder {\n    this.csvConfig.quote = quote;\n    return this;\n  }\n\n  quoteAll(quoteAll: boolean = true): CSVExportConfigBuilder {\n    this.csvConfig.quoteAll = quoteAll;\n    return this;\n  }\n\n  build(): CSVExportConfig {\n    return { ...super.build(), ...this.csvConfig };\n  }\n}\n\n/**\n * Excel-specific configuration builder\n */\nexport class ExcelExportConfigBuilder extends ExportConfigBuilder {\n  private excelConfig: Partial<ExcelExportConfig> = {};\n\n  static create(): ExcelExportConfigBuilder {\n    return new ExcelExportConfigBuilder();\n  }\n\n  filename(filename: string): ExcelExportConfigBuilder {\n    super.filename(filename);\n    return this;\n  }\n\n  includeHeaders(include: boolean = true): ExcelExportConfigBuilder {\n    super.includeHeaders(include);\n    return this;\n  }\n\n  customHeaders(headers: Record<string, string>): ExcelExportConfigBuilder {\n    super.customHeaders(headers);\n    return this;\n  }\n\n  includeColumns(columns: string[]): ExcelExportConfigBuilder {\n    super.includeColumns(columns);\n    return this;\n  }\n\n  excludeColumns(columns: string[]): ExcelExportConfigBuilder {\n    super.excludeColumns(columns);\n    return this;\n  }\n\n  dataTransformer(transformer: (data: any[]) => any[]): ExcelExportConfigBuilder {\n    super.dataTransformer(transformer);\n    return this;\n  }\n\n  sheetName(name: string): ExcelExportConfigBuilder {\n    this.excelConfig.sheetName = name;\n    return this;\n  }\n\n  autoFitColumns(autoFit: boolean = true): ExcelExportConfigBuilder {\n    this.excelConfig.autoFitColumns = autoFit;\n    return this;\n  }\n\n  columnWidths(widths: Record<string, number>): ExcelExportConfigBuilder {\n    this.excelConfig.columnWidths = widths;\n    return this;\n  }\n\n  build(): ExcelExportConfig {\n    return { ...super.build(), ...this.excelConfig };\n  }\n}\n\n/**\n * Print-specific configuration builder\n */\nexport class PrintExportConfigBuilder extends ExportConfigBuilder {\n  private printConfig: Partial<PrintExportConfig> = {};\n\n  static create(): PrintExportConfigBuilder {\n    return new PrintExportConfigBuilder();\n  }\n\n  filename(filename: string): PrintExportConfigBuilder {\n    super.filename(filename);\n    return this;\n  }\n\n  includeHeaders(include: boolean = true): PrintExportConfigBuilder {\n    super.includeHeaders(include);\n    return this;\n  }\n\n  customHeaders(headers: Record<string, string>): PrintExportConfigBuilder {\n    super.customHeaders(headers);\n    return this;\n  }\n\n  includeColumns(columns: string[]): PrintExportConfigBuilder {\n    super.includeColumns(columns);\n    return this;\n  }\n\n  excludeColumns(columns: string[]): PrintExportConfigBuilder {\n    super.excludeColumns(columns);\n    return this;\n  }\n\n  dataTransformer(transformer: (data: any[]) => any[]): PrintExportConfigBuilder {\n    super.dataTransformer(transformer);\n    return this;\n  }\n\n  orientation(orientation: 'portrait' | 'landscape'): PrintExportConfigBuilder {\n    this.printConfig.orientation = orientation;\n    return this;\n  }\n\n  paperSize(size: 'A4' | 'letter' | 'legal'): PrintExportConfigBuilder {\n    this.printConfig.paperSize = size;\n    return this;\n  }\n\n  title(title: string): PrintExportConfigBuilder {\n    this.printConfig.title = title;\n    return this;\n  }\n\n  includePageNumbers(include: boolean = true): PrintExportConfigBuilder {\n    this.printConfig.includePageNumbers = include;\n    return this;\n  }\n\n  customCSS(css: string): PrintExportConfigBuilder {\n    this.printConfig.customCSS = css;\n    return this;\n  }\n\n  build(): PrintExportConfig {\n    return { ...super.build(), ...this.printConfig };\n  }\n}","'use client';\n\nimport React, { useState } from 'react';\nimport { Table } from '@tanstack/react-table';\nimport { \n  useTableExport,\n  CSVExportConfigBuilder,\n  ExcelExportConfigBuilder,\n  PrintExportConfigBuilder,\n  ExportResult,\n  ExportFormat \n} from '../utils/export-utils';\n\ninterface ExportControlsProps<T = any> {\n  table: Table<T>;\n  enabled?: boolean;\n}\n\nexport function ExportControls<T = any>({ table, enabled = true }: ExportControlsProps<T>) {\n  const [isExporting, setIsExporting] = useState(false);\n  const [lastExportResult, setLastExportResult] = useState<ExportResult | null>(null);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  const { exportToCSV, exportToExcel, exportToJSON, printTable, exportFromTable } = useTableExport<T>();\n\n  if (!enabled) return null;\n\n  const handleQuickExport = async (format: ExportFormat) => {\n    setIsExporting(true);\n    setLastExportResult(null);\n\n    try {\n      const result = await exportFromTable(table, format, {\n        filename: `table-export-${new Date().toISOString().split('T')[0]}`,\n        includeHeaders: true,\n      });\n      \n      setLastExportResult(result);\n    } catch (error) {\n      setLastExportResult({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        format,\n        rowCount: 0,\n        timestamp: new Date(),\n      });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const handleAdvancedCSVExport = async () => {\n    setIsExporting(true);\n    setLastExportResult(null);\n\n    try {\n      const data = table.getRowModel().rows.map(row => row.original);\n      const columns = table.getAllColumns().map(col => col.columnDef);\n\n      const config = CSVExportConfigBuilder.create()\n        .filename(`detailed-export-${new Date().toISOString().split('T')[0]}`)\n        .delimiter(',')\n        .includeHeaders(true)\n        .customHeaders({\n          firstName: 'First Name',\n          lastName: 'Last Name',\n          department: 'Department',\n          salary: 'Annual Salary (USD)',\n          performance: 'Performance Rating',\n          joinDate: 'Date Joined',\n        })\n        .dataTransformer((data) => \n          data.map(item => ({\n            ...item,\n            // Generic data transformation - users can override this\n            ...(typeof item === 'object' && item !== null ? item : {})\n          }))\n        )\n        .build();\n\n      const result = await exportToCSV(data, columns, config);\n      setLastExportResult(result);\n    } catch (error) {\n      setLastExportResult({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        format: 'csv',\n        rowCount: 0,\n        timestamp: new Date(),\n      });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const handleAdvancedExcelExport = async () => {\n    setIsExporting(true);\n    setLastExportResult(null);\n\n    try {\n      const data = table.getRowModel().rows.map(row => row.original);\n      const columns = table.getAllColumns().map(col => col.columnDef);\n\n      const config = ExcelExportConfigBuilder.create()\n        .filename(`employee-spreadsheet-${new Date().toISOString().split('T')[0]}`)\n        .sheetName('Employee Data')\n        .includeHeaders(true)\n        .autoFitColumns(true)\n        .customHeaders({\n          firstName: 'First Name',\n          lastName: 'Last Name',\n          department: 'Department',\n          salary: 'Annual Salary',\n          performance: 'Performance Rating',\n        })\n        .build();\n\n      const result = await exportToExcel(data, columns, config);\n      setLastExportResult(result);\n    } catch (error) {\n      setLastExportResult({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        format: 'excel',\n        rowCount: 0,\n        timestamp: new Date(),\n      });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const handlePrintExport = async () => {\n    setIsExporting(true);\n    setLastExportResult(null);\n\n    try {\n      const data = table.getRowModel().rows.map(row => row.original);\n      const columns = table.getAllColumns().map(col => col.columnDef);\n\n      const config = PrintExportConfigBuilder.create()\n        .title('Employee Directory')\n        .orientation('landscape')\n        .paperSize('A4')\n        .includePageNumbers(true)\n        .includeHeaders(true)\n        .customCSS(`\n          .print-table th { \n            background-color: #4f46e5 !important; \n            color: white !important; \n          }\n          .print-table td { \n            font-size: 11px !important; \n          }\n          .print-table tr:nth-child(even) {\n            background-color: #f8f9fa !important;\n          }\n        `)\n        .customHeaders({\n          firstName: 'First Name',\n          lastName: 'Last Name',\n          department: 'Dept.',\n          salary: 'Salary',\n        })\n        .build();\n\n      const result = await printTable(data, columns, config);\n      setLastExportResult(result);\n    } catch (error) {\n      setLastExportResult({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        format: 'print',\n        rowCount: 0,\n        timestamp: new Date(),\n      });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const selectedRowCount = Object.keys(table.getState().rowSelection || {}).length;\n  const totalRowCount = table.getRowModel().rows.length;\n\n  return (\n    <div className=\"border rounded-lg p-4 bg-white dark:bg-gray-800\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n          Export Data\n        </h3>\n        <button\n          onClick={() => setShowAdvanced(!showAdvanced)}\n          className=\"text-sm text-blue-600 dark:text-blue-400 hover:underline\"\n        >\n          {showAdvanced ? 'Hide' : 'Show'} Advanced Options\n        </button>\n      </div>\n\n      {/* Export Info */}\n      <div className=\"mb-4 text-sm text-gray-600 dark:text-gray-400\">\n        {selectedRowCount > 0 ? (\n          <span>Exporting {selectedRowCount} selected rows of {totalRowCount} total</span>\n        ) : (\n          <span>Exporting all {totalRowCount} rows</span>\n        )}\n      </div>\n\n      {/* Quick Export Buttons */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 mb-4\">\n        <button\n          onClick={() => handleQuickExport('csv')}\n          disabled={isExporting}\n          className=\"flex items-center justify-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n        >\n          {isExporting ? (\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n          ) : (\n            <span>📄</span>\n          )}\n          CSV\n        </button>\n\n        <button\n          onClick={() => handleQuickExport('excel')}\n          disabled={isExporting}\n          className=\"flex items-center justify-center gap-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n        >\n          {isExporting ? (\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n          ) : (\n            <span>📊</span>\n          )}\n          Excel\n        </button>\n\n        <button\n          onClick={() => handleQuickExport('json')}\n          disabled={isExporting}\n          className=\"flex items-center justify-center gap-2 px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n        >\n          {isExporting ? (\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n          ) : (\n            <span>🔧</span>\n          )}\n          JSON\n        </button>\n\n        <button\n          onClick={handlePrintExport}\n          disabled={isExporting}\n          className=\"flex items-center justify-center gap-2 px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n        >\n          {isExporting ? (\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n          ) : (\n            <span>🖨️</span>\n          )}\n          Print\n        </button>\n      </div>\n\n      {/* Advanced Export Options */}\n      {showAdvanced && (\n        <div className=\"border-t pt-4\">\n          <h4 className=\"text-md font-medium mb-3 text-gray-900 dark:text-gray-100\">\n            Advanced Export Options\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\n            <button\n              onClick={handleAdvancedCSVExport}\n              disabled={isExporting}\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n            >\n              Enhanced CSV\n            </button>\n\n            <button\n              onClick={handleAdvancedExcelExport}\n              disabled={isExporting}\n              className=\"px-4 py-2 bg-teal-600 text-white rounded-md hover:bg-teal-700 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n            >\n              Formatted Excel\n            </button>\n\n            <button\n              onClick={() => handleQuickExport('print')}\n              disabled={isExporting}\n              className=\"px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n            >\n              Custom Print Layout\n            </button>\n          </div>\n\n          <div className=\"mt-3 text-xs text-gray-500 dark:text-gray-400\">\n            <p><strong>Enhanced CSV:</strong> Includes formatted salary values and custom headers</p>\n            <p><strong>Formatted Excel:</strong> Auto-fit columns with professional formatting</p>\n            <p><strong>Custom Print:</strong> Landscape layout with custom styling</p>\n          </div>\n        </div>\n      )}\n\n      {/* Export Result */}\n      {lastExportResult && (\n        <div className={`mt-4 p-3 rounded-md border ${\n          lastExportResult.success \n            ? 'bg-green-50 border-green-200 dark:bg-green-900/20 dark:border-green-800' \n            : 'bg-red-50 border-red-200 dark:bg-red-900/20 dark:border-red-800'\n        }`}>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`inline-block w-2 h-2 rounded-full ${\n                lastExportResult.success ? 'bg-green-500' : 'bg-red-500'\n              }`}></span>\n              <span className={`text-sm font-medium ${\n                lastExportResult.success \n                  ? 'text-green-800 dark:text-green-200' \n                  : 'text-red-800 dark:text-red-200'\n              }`}>\n                {lastExportResult.format.toUpperCase()} Export\n              </span>\n              {lastExportResult.filename && (\n                <span className=\"text-xs text-gray-600 dark:text-gray-400\">\n                  ({lastExportResult.filename})\n                </span>\n              )}\n            </div>\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {lastExportResult.timestamp.toLocaleTimeString()}\n            </span>\n          </div>\n          \n          {lastExportResult.success ? (\n            <p className=\"text-sm text-green-700 dark:text-green-300 mt-1\">\n              Successfully exported {lastExportResult.rowCount} rows\n            </p>\n          ) : (\n            <p className=\"text-sm text-red-700 dark:text-red-300 mt-1\">\n              Error: {lastExportResult.error}\n            </p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}","\"use client\";import*as t from\"react\";var M=(e,i,s,u,m,a,l,h)=>{let d=document.documentElement,w=[\"light\",\"dark\"];function p(n){(Array.isArray(e)?e:[e]).forEach(y=>{let k=y===\"class\",S=k&&a?m.map(f=>a[f]||f):m;k?(d.classList.remove(...S),d.classList.add(a&&a[n]?a[n]:n)):d.setAttribute(y,n)}),R(n)}function R(n){h&&w.includes(n)&&(d.style.colorScheme=n)}function c(){return window.matchMedia(\"(prefers-color-scheme: dark)\").matches?\"dark\":\"light\"}if(u)p(u);else try{let n=localStorage.getItem(i)||s,y=l&&n===\"system\"?c():n;p(y)}catch(n){}};var b=[\"light\",\"dark\"],I=\"(prefers-color-scheme: dark)\",O=typeof window==\"undefined\",x=t.createContext(void 0),U={setTheme:e=>{},themes:[]},z=()=>{var e;return(e=t.useContext(x))!=null?e:U},J=e=>t.useContext(x)?t.createElement(t.Fragment,null,e.children):t.createElement(V,{...e}),N=[\"light\",\"dark\"],V=({forcedTheme:e,disableTransitionOnChange:i=!1,enableSystem:s=!0,enableColorScheme:u=!0,storageKey:m=\"theme\",themes:a=N,defaultTheme:l=s?\"system\":\"light\",attribute:h=\"data-theme\",value:d,children:w,nonce:p,scriptProps:R})=>{let[c,n]=t.useState(()=>H(m,l)),[T,y]=t.useState(()=>c===\"system\"?E():c),k=d?Object.values(d):a,S=t.useCallback(o=>{let r=o;if(!r)return;o===\"system\"&&s&&(r=E());let v=d?d[r]:r,C=i?W(p):null,P=document.documentElement,L=g=>{g===\"class\"?(P.classList.remove(...k),v&&P.classList.add(v)):g.startsWith(\"data-\")&&(v?P.setAttribute(g,v):P.removeAttribute(g))};if(Array.isArray(h)?h.forEach(L):L(h),u){let g=b.includes(l)?l:null,D=b.includes(r)?r:g;P.style.colorScheme=D}C==null||C()},[p]),f=t.useCallback(o=>{let r=typeof o==\"function\"?o(c):o;n(r);try{localStorage.setItem(m,r)}catch(v){}},[c]),A=t.useCallback(o=>{let r=E(o);y(r),c===\"system\"&&s&&!e&&S(\"system\")},[c,e]);t.useEffect(()=>{let o=window.matchMedia(I);return o.addListener(A),A(o),()=>o.removeListener(A)},[A]),t.useEffect(()=>{let o=r=>{r.key===m&&(r.newValue?n(r.newValue):f(l))};return window.addEventListener(\"storage\",o),()=>window.removeEventListener(\"storage\",o)},[f]),t.useEffect(()=>{S(e!=null?e:c)},[e,c]);let Q=t.useMemo(()=>({theme:c,setTheme:f,forcedTheme:e,resolvedTheme:c===\"system\"?T:c,themes:s?[...a,\"system\"]:a,systemTheme:s?T:void 0}),[c,f,e,T,s,a]);return t.createElement(x.Provider,{value:Q},t.createElement(_,{forcedTheme:e,storageKey:m,attribute:h,enableSystem:s,enableColorScheme:u,defaultTheme:l,value:d,themes:a,nonce:p,scriptProps:R}),w)},_=t.memo(({forcedTheme:e,storageKey:i,attribute:s,enableSystem:u,enableColorScheme:m,defaultTheme:a,value:l,themes:h,nonce:d,scriptProps:w})=>{let p=JSON.stringify([s,i,a,e,h,l,u,m]).slice(1,-1);return t.createElement(\"script\",{...w,suppressHydrationWarning:!0,nonce:typeof window==\"undefined\"?d:\"\",dangerouslySetInnerHTML:{__html:`(${M.toString()})(${p})`}})}),H=(e,i)=>{if(O)return;let s;try{s=localStorage.getItem(e)||void 0}catch(u){}return s||i},W=e=>{let i=document.createElement(\"style\");return e&&i.setAttribute(\"nonce\",e),i.appendChild(document.createTextNode(\"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\")),document.head.appendChild(i),()=>{window.getComputedStyle(document.body),setTimeout(()=>{document.head.removeChild(i)},1)}},E=e=>(e||(e=window.matchMedia(I)),e.matches?\"dark\":\"light\");export{J as ThemeProvider,z as useTheme};\n","import { ThemePreset, ThemeCSSProperties } from '../types/theme';\n\n/**\n * Default theme preset - balanced design suitable for most applications\n */\nconst defaultThemeProperties: ThemeCSSProperties = {\n  // Color system\n  '--table-bg-primary': '#ffffff',\n  '--table-bg-secondary': '#f8fafc',\n  '--table-bg-accent': '#f1f5f9',\n  '--table-text-primary': '#1e293b',\n  '--table-text-secondary': '#475569',\n  '--table-text-muted': '#64748b',\n  '--table-border-color': '#e2e8f0',\n  '--table-border-hover': '#cbd5e1',\n  \n  // Interactive states\n  '--table-hover-bg': '#f8fafc',\n  '--table-selected-bg': '#dbeafe',\n  '--table-focus-ring': '#3b82f6',\n  '--table-active-bg': '#e0e7ff',\n  \n  // Header styling\n  '--table-header-bg': '#f1f5f9',\n  '--table-header-text': '#374151',\n  '--table-header-border': '#d1d5db',\n  \n  // Cell styling\n  '--table-cell-padding': '0.75rem',\n  '--table-cell-border': '#e5e7eb',\n  \n  // Controls and buttons\n  '--table-button-bg': '#3b82f6',\n  '--table-button-text': '#ffffff',\n  '--table-button-hover-bg': '#2563eb',\n  '--table-button-border': '#3b82f6',\n  \n  // Status colors\n  '--table-success-color': '#10b981',\n  '--table-warning-color': '#f59e0b',\n  '--table-error-color': '#ef4444',\n  '--table-info-color': '#3b82f6',\n  \n  // Typography\n  '--table-font-family': 'system-ui, -apple-system, sans-serif',\n  '--table-font-size': '0.875rem',\n  '--table-font-weight': '400',\n  '--table-line-height': '1.5',\n  \n  // Spacing\n  '--table-spacing-xs': '0.25rem',\n  '--table-spacing-sm': '0.5rem',\n  '--table-spacing-md': '0.75rem',\n  '--table-spacing-lg': '1rem',\n  '--table-spacing-xl': '1.5rem',\n  \n  // Border radius\n  '--table-border-radius': '0.375rem',\n  '--table-border-radius-sm': '0.25rem',\n  '--table-border-radius-lg': '0.5rem',\n  \n  // Shadows\n  '--table-shadow-sm': '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n  '--table-shadow-md': '0 4px 6px -1px rgb(0 0 0 / 0.1)',\n  '--table-shadow-lg': '0 10px 15px -3px rgb(0 0 0 / 0.1)',\n};\n\n/**\n * Minimal theme preset - clean and simple design with minimal visual elements\n */\nconst minimalThemeProperties: ThemeCSSProperties = {\n  // Color system\n  '--table-bg-primary': '#ffffff',\n  '--table-bg-secondary': '#ffffff',\n  '--table-bg-accent': '#fafafa',\n  '--table-text-primary': '#000000',\n  '--table-text-secondary': '#666666',\n  '--table-text-muted': '#999999',\n  '--table-border-color': '#e0e0e0',\n  '--table-border-hover': '#d0d0d0',\n  \n  // Interactive states\n  '--table-hover-bg': '#fafafa',\n  '--table-selected-bg': '#f0f0f0',\n  '--table-focus-ring': '#000000',\n  '--table-active-bg': '#e8e8e8',\n  \n  // Header styling\n  '--table-header-bg': '#ffffff',\n  '--table-header-text': '#000000',\n  '--table-header-border': '#e0e0e0',\n  \n  // Cell styling\n  '--table-cell-padding': '0.5rem',\n  '--table-cell-border': 'transparent',\n  \n  // Controls and buttons\n  '--table-button-bg': '#000000',\n  '--table-button-text': '#ffffff',\n  '--table-button-hover-bg': '#333333',\n  '--table-button-border': '#000000',\n  \n  // Status colors\n  '--table-success-color': '#22c55e',\n  '--table-warning-color': '#eab308',\n  '--table-error-color': '#ef4444',\n  '--table-info-color': '#3b82f6',\n  \n  // Typography\n  '--table-font-family': 'system-ui, -apple-system, sans-serif',\n  '--table-font-size': '0.875rem',\n  '--table-font-weight': '400',\n  '--table-line-height': '1.4',\n  \n  // Spacing\n  '--table-spacing-xs': '0.25rem',\n  '--table-spacing-sm': '0.5rem',\n  '--table-spacing-md': '0.75rem',\n  '--table-spacing-lg': '1rem',\n  '--table-spacing-xl': '1.5rem',\n  \n  // Border radius\n  '--table-border-radius': '0',\n  '--table-border-radius-sm': '0',\n  '--table-border-radius-lg': '0',\n  \n  // Shadows\n  '--table-shadow-sm': 'none',\n  '--table-shadow-md': 'none',\n  '--table-shadow-lg': 'none',\n};\n\n/**\n * Enterprise theme preset - professional design suitable for business applications\n */\nconst enterpriseThemeProperties: ThemeCSSProperties = {\n  // Color system\n  '--table-bg-primary': '#ffffff',\n  '--table-bg-secondary': '#f7f8fc',\n  '--table-bg-accent': '#eef2ff',\n  '--table-text-primary': '#1f2937',\n  '--table-text-secondary': '#4b5563',\n  '--table-text-muted': '#6b7280',\n  '--table-border-color': '#d1d5db',\n  '--table-border-hover': '#9ca3af',\n  \n  // Interactive states\n  '--table-hover-bg': '#f9fafb',\n  '--table-selected-bg': '#dbeafe',\n  '--table-focus-ring': '#2563eb',\n  '--table-active-bg': '#bfdbfe',\n  \n  // Header styling\n  '--table-header-bg': '#f3f4f6',\n  '--table-header-text': '#111827',\n  '--table-header-border': '#d1d5db',\n  \n  // Cell styling\n  '--table-cell-padding': '1rem',\n  '--table-cell-border': '#e5e7eb',\n  \n  // Controls and buttons\n  '--table-button-bg': '#1f2937',\n  '--table-button-text': '#ffffff',\n  '--table-button-hover-bg': '#374151',\n  '--table-button-border': '#1f2937',\n  \n  // Status colors\n  '--table-success-color': '#059669',\n  '--table-warning-color': '#d97706',\n  '--table-error-color': '#dc2626',\n  '--table-info-color': '#2563eb',\n  \n  // Typography\n  '--table-font-family': '\"Inter\", system-ui, -apple-system, sans-serif',\n  '--table-font-size': '0.875rem',\n  '--table-font-weight': '500',\n  '--table-line-height': '1.5',\n  \n  // Spacing\n  '--table-spacing-xs': '0.25rem',\n  '--table-spacing-sm': '0.5rem',\n  '--table-spacing-md': '1rem',\n  '--table-spacing-lg': '1.25rem',\n  '--table-spacing-xl': '2rem',\n  \n  // Border radius\n  '--table-border-radius': '0.25rem',\n  '--table-border-radius-sm': '0.125rem',\n  '--table-border-radius-lg': '0.375rem',\n  \n  // Shadows\n  '--table-shadow-sm': '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n  '--table-shadow-md': '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -1px rgb(0 0 0 / 0.06)',\n  '--table-shadow-lg': '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 10px 10px -5px rgb(0 0 0 / 0.04)',\n};\n\n/**\n * Dark theme variations for each preset\n */\nconst darkThemeOverrides: Partial<ThemeCSSProperties> = {\n  '--table-bg-primary': '#1f2937',\n  '--table-bg-secondary': '#111827',\n  '--table-bg-accent': '#374151',\n  '--table-text-primary': '#f9fafb',\n  '--table-text-secondary': '#d1d5db',\n  '--table-text-muted': '#9ca3af',\n  '--table-border-color': '#4b5563',\n  '--table-border-hover': '#6b7280',\n  '--table-hover-bg': '#374151',\n  '--table-selected-bg': '#1e40af',\n  '--table-header-bg': '#374151',\n  '--table-header-text': '#f9fafb',\n  '--table-header-border': '#4b5563',\n  '--table-cell-border': '#4b5563',\n};\n\n/**\n * Create dark theme properties by merging base properties with dark overrides\n */\nfunction createDarkTheme(baseProperties: ThemeCSSProperties): ThemeCSSProperties {\n  return { ...baseProperties, ...darkThemeOverrides };\n}\n\n/**\n * Default theme preset\n */\nexport const DEFAULT_THEME_PRESET: ThemePreset = {\n  name: 'default',\n  description: 'Balanced design suitable for most applications with modern styling and good contrast',\n  properties: defaultThemeProperties,\n  config: {\n    density: 'normal',\n    borderStyle: 'subtle',\n    cornerRadius: 'medium',\n    shadows: 'subtle',\n  },\n  useCases: [\n    'General purpose applications',\n    'Admin dashboards',\n    'Data visualization tools',\n    'Content management systems',\n  ],\n  compatibleSchemes: ['light', 'dark', 'auto'],\n};\n\n/**\n * Minimal theme preset\n */\nexport const MINIMAL_THEME_PRESET: ThemePreset = {\n  name: 'minimal',\n  description: 'Clean and simple design with minimal visual elements, focusing on content',\n  properties: minimalThemeProperties,\n  config: {\n    density: 'compact',\n    borderStyle: 'none',\n    cornerRadius: 'none',\n    shadows: 'none',\n  },\n  useCases: [\n    'Documentation sites',\n    'Simple data displays',\n    'Minimalist applications',\n    'Print-friendly layouts',\n  ],\n  compatibleSchemes: ['light', 'dark'],\n};\n\n/**\n * Enterprise theme preset\n */\nexport const ENTERPRISE_THEME_PRESET: ThemePreset = {\n  name: 'enterprise',\n  description: 'Professional design suitable for business applications with enhanced spacing and typography',\n  properties: enterpriseThemeProperties,\n  config: {\n    density: 'spacious',\n    borderStyle: 'prominent',\n    cornerRadius: 'small',\n    shadows: 'prominent',\n  },\n  useCases: [\n    'Business applications',\n    'Financial dashboards',\n    'Enterprise software',\n    'Professional reporting tools',\n  ],\n  compatibleSchemes: ['light', 'dark', 'auto'],\n};\n\n/**\n * All available theme presets\n */\nexport const THEME_PRESETS: Record<string, ThemePreset> = {\n  default: DEFAULT_THEME_PRESET,\n  minimal: MINIMAL_THEME_PRESET,\n  enterprise: ENTERPRISE_THEME_PRESET,\n};\n\n/**\n * Get theme preset by name\n */\nexport function getThemePreset(name: string): ThemePreset | undefined {\n  return THEME_PRESETS[name];\n}\n\n/**\n * Get all available theme preset names\n */\nexport function getThemePresetNames(): string[] {\n  return Object.keys(THEME_PRESETS);\n}\n\n/**\n * Get theme properties with dark mode support\n */\nexport function getThemeProperties(\n  presetName: string,\n  colorScheme: 'light' | 'dark' = 'light'\n): ThemeCSSProperties {\n  const preset = getThemePreset(presetName);\n  if (!preset) {\n    return defaultThemeProperties;\n  }\n  \n  return colorScheme === 'dark' \n    ? createDarkTheme(preset.properties)\n    : preset.properties;\n}\n\n/**\n * Create custom theme properties by merging preset with overrides\n */\nexport function createCustomTheme(\n  basePreset: string,\n  overrides: Partial<ThemeCSSProperties>,\n  colorScheme: 'light' | 'dark' = 'light'\n): ThemeCSSProperties {\n  const baseProperties = getThemeProperties(basePreset, colorScheme);\n  return { ...baseProperties, ...overrides };\n}","import { useEffect, useMemo } from 'react';\nimport { useTheme } from 'next-themes';\nimport { \n  EnhancedThemeOptions, \n  ThemeVariant, \n  ColorScheme,\n  ThemeCSSProperties \n} from '../types/theme';\nimport { \n  getThemeProperties, \n  createCustomTheme,\n  getThemePreset \n} from '../config/theme-presets';\n\n/**\n * Hook for managing table theme with Next.js theme integration\n */\nexport function useTableTheme(options: Partial<EnhancedThemeOptions> = {}) {\n  let systemTheme = 'light';\n  let setSystemTheme: (theme: string) => void = () => {};\n  \n  try {\n    const themeHook = useTheme();\n    systemTheme = themeHook.theme || 'light';\n    setSystemTheme = themeHook.setTheme || (() => {});\n  } catch (error) {\n    console.warn('next-themes not properly configured, falling back to light theme');\n  }\n  \n  // Determine effective color scheme\n  const effectiveColorScheme: ColorScheme = useMemo(() => {\n    if (options.colorScheme === 'auto') {\n      return systemTheme === 'dark' ? 'dark' : 'light';\n    }\n    return options.colorScheme || 'light';\n  }, [options.colorScheme, systemTheme]);\n\n  // Get theme properties\n  const themeProperties = useMemo(() => {\n    const variant = options.variant || 'default';\n    const baseProperties = getThemeProperties(variant, effectiveColorScheme);\n    \n    // Merge with custom properties\n    return {\n      ...baseProperties,\n      ...options.customProperties,\n    };\n  }, [options.variant, effectiveColorScheme, options.customProperties]);\n\n  // Generate CSS class names\n  const classNames = useMemo(() => {\n    const variant = options.variant || 'default';\n    const preset = getThemePreset(variant);\n    const density = options.themeConfig?.density || preset?.config?.density || 'normal';\n    \n    return {\n      table: [\n        'table-themed',\n        `table-theme-${variant}`,\n        `table-density-${density}`,\n        options.enableTransitions !== false && 'table-transitions',\n        options.enableHoverEffects !== false && 'table-hover-effects',\n        options.enableFocusIndicators !== false && 'table-focus-indicators',\n        options.classNames?.table,\n      ].filter(Boolean).join(' '),\n      \n      header: [\n        'table-header',\n        options.classNames?.header,\n      ].filter(Boolean).join(' '),\n      \n      cell: [\n        'table-cell',\n        options.classNames?.cell,\n      ].filter(Boolean).join(' '),\n      \n      row: [\n        'table-row',\n        options.classNames?.row,\n      ].filter(Boolean).join(' '),\n      \n      pagination: [\n        'table-pagination',\n        options.classNames?.pagination,\n      ].filter(Boolean).join(' '),\n      \n      controls: [\n        'table-controls',\n        options.classNames?.controls,\n      ].filter(Boolean).join(' '),\n    };\n  }, [options]);\n\n  // Generate inline styles for components\n  const styles = useMemo(() => {\n    return {\n      table: {\n        ...options.components?.table,\n        // Apply theme properties as CSS custom properties\n        ...Object.fromEntries(\n          Object.entries(themeProperties).map(([key, value]) => [key, value])\n        ),\n      },\n      header: options.components?.header || {},\n      cell: options.components?.cell || {},\n      row: options.components?.row || {},\n      pagination: options.components?.pagination || {},\n      controls: options.components?.controls || {},\n    };\n  }, [themeProperties, options.components]);\n\n  // Apply global CSS custom properties\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const root = document.documentElement;\n      \n      Object.entries(themeProperties).forEach(([property, value]) => {\n        root.style.setProperty(property, value);\n      });\n\n      return () => {\n        // Cleanup on unmount\n        Object.keys(themeProperties).forEach(property => {\n          root.style.removeProperty(property);\n        });\n      };\n    }\n  }, [themeProperties]);\n\n  // Theme control functions\n  const setVariant = (variant: ThemeVariant) => {\n    // This would typically update a parent state or context\n    // For now, we'll just log the change\n    console.log('Theme variant changed to:', variant);\n  };\n\n  const setColorScheme = (scheme: ColorScheme) => {\n    if (scheme === 'auto') {\n      setSystemTheme('system');\n    } else {\n      setSystemTheme(scheme);\n    }\n  };\n\n  const toggleColorScheme = () => {\n    const newScheme = effectiveColorScheme === 'light' ? 'dark' : 'light';\n    setColorScheme(newScheme);\n  };\n\n  return {\n    // Current theme state\n    variant: options.variant || 'default',\n    colorScheme: effectiveColorScheme,\n    properties: themeProperties,\n    \n    // CSS utilities\n    classNames,\n    styles,\n    \n    // Theme controls\n    setVariant,\n    setColorScheme,\n    toggleColorScheme,\n    \n    // Utility functions\n    getThemeProperty: (property: keyof ThemeCSSProperties) => themeProperties[property],\n    createCustomTheme: (overrides: Partial<ThemeCSSProperties>) => \n      createCustomTheme(options.variant || 'default', overrides, effectiveColorScheme),\n  };\n}\n\n/**\n * Hook for getting theme-aware CSS properties\n */\nexport function useThemeProperties(variant: ThemeVariant = 'default', colorScheme?: ColorScheme) {\n  const { theme: systemTheme } = useTheme();\n  \n  return useMemo(() => {\n    let effectiveScheme: 'light' | 'dark' = 'light';\n    \n    if (colorScheme === 'dark') {\n      effectiveScheme = 'dark';\n    } else if (colorScheme === 'light') {\n      effectiveScheme = 'light';\n    } else {\n      // colorScheme is 'auto' or undefined\n      effectiveScheme = systemTheme === 'dark' ? 'dark' : 'light';\n    }\n    \n    return getThemeProperties(variant, effectiveScheme);\n  }, [variant, colorScheme, systemTheme]);\n}\n\n/**\n * Hook for theme-aware component styling\n */\nexport function useThemedStyles(\n  baseStyles: React.CSSProperties = {},\n  themeOverrides: Partial<ThemeCSSProperties> = {}\n) {\n  const { properties } = useTableTheme();\n  \n  return useMemo(() => {\n    const themedProperties = { ...properties, ...themeOverrides };\n    \n    // Convert CSS custom properties to actual values\n    const resolvedStyles: React.CSSProperties = {};\n    \n    Object.entries(baseStyles).forEach(([key, value]) => {\n      if (typeof value === 'string' && value.startsWith('var(--table-')) {\n        const propertyName = value.slice(4, -1) as keyof ThemeCSSProperties;\n        (resolvedStyles as any)[key] = themedProperties[propertyName];\n      } else {\n        (resolvedStyles as any)[key] = value;\n      }\n    });\n    \n    return resolvedStyles;\n  }, [baseStyles, themeOverrides, properties]);\n}","\"use client\";\n\nimport React from \"react\";\nimport { Table } from \"@tanstack/react-table\";\nimport { FeatureKey } from \"./table-columns\";\nimport { PivotControls } from \"./pivot-controls\";\nimport { ExportControls } from \"./export-controls\";\nimport { useTableTheme } from \"../hooks/useTableTheme\";\nimport { EnhancedThemeOptions } from \"../types/theme\";\n\nexport const featureList: Record<FeatureKey, string> = {\n  sorting: \"Sorting\",\n  filtering: \"Filtering\",\n  pagination: \"Pagination\",\n  rowSelection: \"Row Selection\",\n  columnVisibility: \"Column Visibility\",\n  columnResizing: \"Column Resizing\",\n  columnPinning: \"Column Pinning\",\n  rowExpansion: \"Row Expansion\",\n  globalFiltering: \"Global Search\",\n  grouping: \"Grouping\",\n  inlineEditing: \"Inline Editing\",\n  pivoting: \"Pivoting\",\n  virtualization: \"Virtualization\",\n  exporting: \"Data Export\",\n};\n\ninterface TableControlsProps<T = any> {\n  enabled: Record<FeatureKey, boolean>;\n  onToggleFeature: (feature: FeatureKey) => void;\n  table: Table<T>;\n  globalFilter: string;\n  onGlobalFilterChange: (value: string) => void;\n  onDebouncedGlobalFilterChange?: (value: string) => void;\n  rowSelection: Record<string, boolean>;\n  theme?: Partial<EnhancedThemeOptions>;\n}\n\nexport function TableControls<T = any>({\n  enabled,\n  onToggleFeature,\n  table,\n  globalFilter,\n  onGlobalFilterChange,\n  onDebouncedGlobalFilterChange,\n  rowSelection,\n  theme,\n}: TableControlsProps<T>) {\n  const { classNames, styles } = useTableTheme(theme);\n  \n  return (\n    <div className={`${classNames.controls} space-y-4`} style={styles.controls}>\n      {/* Feature Toggles */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">Table Features</h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n          {Object.entries(featureList).map(([key, label]) => (\n            <label key={key} className=\"flex items-center gap-2 text-sm cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={enabled[key as FeatureKey]}\n                onChange={() => onToggleFeature(key as FeatureKey)}\n                className=\"rounded\"\n              />\n              <span className=\"text-gray-700 dark:text-gray-300\">{label}</span>\n            </label>\n          ))}\n        </div>\n      </div>\n\n      {/* Global Search */}\n      {enabled.globalFiltering && (\n        <div className=\"space-y-2\">\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">Global Search</h3>\n          <input\n            type=\"text\"\n            value={globalFilter}\n            onChange={(e) => {\n              // Update UI immediately for responsiveness\n              onGlobalFilterChange(e.target.value);\n              // Use debounced handler for actual filtering if available\n              if (onDebouncedGlobalFilterChange) {\n                onDebouncedGlobalFilterChange(e.target.value);\n              }\n            }}\n            placeholder=\"Search all columns...\"\n            className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded w-full max-w-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n          />\n        </div>\n      )}\n\n      {/* Column Visibility Controls */}\n      {enabled.columnVisibility && (\n        <div className=\"space-y-2\">\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">Show/Hide Columns</h3>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\">\n            {table.getAllLeafColumns().map((column) => (\n              <label key={column.id} className=\"flex items-center gap-2 text-xs cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={column.getIsVisible()}\n                  onChange={column.getToggleVisibilityHandler()}\n                  className=\"rounded\"\n                />\n                <span className=\"text-gray-700 dark:text-gray-300\">\n                  {typeof column.columnDef.header === 'string'\n                    ? column.columnDef.header\n                    : column.id}\n                </span>\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Selected Rows Info */}\n      {enabled.rowSelection && Object.keys(rowSelection).length > 0 && (\n        <div className=\"text-sm text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 p-2 rounded\">\n          {Object.keys(rowSelection).length} row(s) selected\n        </div>\n      )}\n\n      {/* Pivoting Controls */}\n      {enabled.pivoting && (\n        <div className=\"space-y-2\">\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">Pivot Controls</h3>\n          <PivotControls table={table} />\n        </div>\n      )}\n\n      {/* Export Controls */}\n      {enabled.exporting && (\n        <div className=\"space-y-2\">\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">Export Data</h3>\n          <ExportControls table={table} enabled={enabled.exporting} />\n        </div>\n      )}\n    </div>\n  );\n}\n","\"use client\";\n\nimport React from \"react\";\nimport { Column } from \"@tanstack/react-table\";\n\ninterface DragDropAreaProps<T = any> {\n  groupedColumns: string[];\n  onGroupChange: (columnId: string) => void;\n  onRemoveGroup: (columnId: string) => void;\n  allColumns: Column<T, unknown>[];\n}\n\nexport function DragDropArea<T = any>({ groupedColumns, onGroupChange, onRemoveGroup, allColumns }: DragDropAreaProps<T>) {\n  const [dragOver, setDragOver] = React.useState(false);\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(true);\n  };\n\n  const handleDragLeave = () => {\n    setDragOver(false);\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(false);\n    const columnId = e.dataTransfer.getData(\"text/plain\");\n    if (columnId && !groupedColumns.includes(columnId)) {\n      onGroupChange(columnId);\n    }\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <div className=\"text-sm font-medium mb-2\">Grouping Area</div>\n      <div\n        className={`min-h-16 border-2 border-dashed rounded-lg p-4 transition-colors ${\n          dragOver \n            ? \"border-blue-500 bg-blue-50 dark:bg-blue-900/20\" \n            : \"border-gray-300 dark:border-gray-600\"\n        }`}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n      >\n        {groupedColumns.length === 0 ? (\n          <div className=\"text-gray-500 text-sm text-center\">\n            Drag column headers here to group by them\n          </div>\n        ) : (\n          <div className=\"flex flex-wrap gap-2\">\n            {groupedColumns.map((columnId) => {\n              const column = allColumns.find(col => col.id === columnId);\n              const headerText = typeof column?.columnDef.header === 'string' \n                ? column.columnDef.header \n                : columnId;\n              \n              return (\n                <div\n                  key={columnId}\n                  className=\"flex items-center gap-2 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-3 py-1 rounded-full text-sm\"\n                >\n                  <span>{headerText}</span>\n                  <button\n                    onClick={() => onRemoveGroup(columnId)}\n                    className=\"hover:bg-blue-200 dark:hover:bg-blue-800 rounded-full w-4 h-4 flex items-center justify-center text-xs\"\n                  >\n                    ×\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface DraggableColumnHeaderProps {\n  children: React.ReactNode;\n  columnId: string;\n  canGroup: boolean;\n}\n\nexport function DraggableColumnHeader({ children, columnId, canGroup }: DraggableColumnHeaderProps) {\n  const handleDragStart = (e: React.DragEvent) => {\n    e.dataTransfer.setData(\"text/plain\", columnId);\n  };\n\n  return (\n    <div\n      draggable={canGroup}\n      onDragStart={handleDragStart}\n      className={canGroup ? \"cursor-grab active:cursor-grabbing\" : \"\"}\n    >\n      {children}\n    </div>\n  );\n}\n","import { useCallback, useEffect, useRef } from 'react';\nimport { Table } from '@tanstack/react-table';\n\ninterface UseKeyboardNavigationProps<T> {\n  table: Table<T>;\n  enabled?: boolean;\n}\n\nexport function useKeyboardNavigation<T>({ table, enabled = true }: UseKeyboardNavigationProps<T>) {\n  const tableRef = useRef<HTMLTableElement>(null);\n  const currentCellRef = useRef<{ rowIndex: number; columnIndex: number }>({ rowIndex: 0, columnIndex: 0 });\n\n  const getCellElement = useCallback((rowIndex: number, columnIndex: number): HTMLElement | null => {\n    if (!tableRef.current) return null;\n    \n    const tbody = tableRef.current.querySelector('tbody');\n    if (!tbody) return null;\n    \n    const row = tbody.children[rowIndex] as HTMLTableRowElement;\n    if (!row) return null;\n    \n    const cell = row.children[columnIndex] as HTMLTableCellElement;\n    if (!cell) return null;\n    \n    // Look for focusable element within the cell - prioritize editable elements\n    const focusableElement = cell.querySelector('span[role=\"button\"], input, select, button, [tabindex=\"0\"]') as HTMLElement;\n    return focusableElement || cell;\n  }, []);\n\n  const focusCell = useCallback((rowIndex: number, columnIndex: number) => {\n    const cellElement = getCellElement(rowIndex, columnIndex);\n    if (cellElement) {\n      cellElement.focus();\n      currentCellRef.current = { rowIndex, columnIndex };\n    }\n  }, [getCellElement]);\n\n  const moveToCell = useCallback((direction: 'up' | 'down' | 'left' | 'right') => {\n    const { rowIndex, columnIndex } = currentCellRef.current;\n    const rows = table.getRowModel().rows;\n    const columns = table.getVisibleLeafColumns();\n    \n    let newRowIndex = rowIndex;\n    let newColumnIndex = columnIndex;\n    \n    switch (direction) {\n      case 'up':\n        newRowIndex = Math.max(0, rowIndex - 1);\n        break;\n      case 'down':\n        newRowIndex = Math.min(rows.length - 1, rowIndex + 1);\n        break;\n      case 'left':\n        newColumnIndex = Math.max(0, columnIndex - 1);\n        break;\n      case 'right':\n        newColumnIndex = Math.min(columns.length - 1, columnIndex + 1);\n        break;\n    }\n    \n    if (newRowIndex !== rowIndex || newColumnIndex !== columnIndex) {\n      focusCell(newRowIndex, newColumnIndex);\n    }\n  }, [table, focusCell]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (!enabled || !tableRef.current) return;\n    \n    // Only handle navigation if focus is within the table\n    if (!tableRef.current.contains(document.activeElement)) return;\n    \n    // Don't interfere with input editing\n    if (document.activeElement?.tagName === 'INPUT' || \n        document.activeElement?.tagName === 'SELECT' ||\n        document.activeElement?.tagName === 'TEXTAREA') {\n      return;\n    }\n    \n    switch (e.key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        moveToCell('up');\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        moveToCell('down');\n        break;\n      case 'ArrowLeft':\n        e.preventDefault();\n        moveToCell('left');\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        moveToCell('right');\n        break;\n      case 'Home':\n        e.preventDefault();\n        if (e.ctrlKey) {\n          // Ctrl+Home: Go to first cell\n          focusCell(0, 0);\n        } else {\n          // Home: Go to first column of current row\n          focusCell(currentCellRef.current.rowIndex, 0);\n        }\n        break;\n      case 'End':\n        e.preventDefault();\n        if (e.ctrlKey) {\n          // Ctrl+End: Go to last cell\n          const rows = table.getRowModel().rows;\n          const columns = table.getVisibleLeafColumns();\n          focusCell(rows.length - 1, columns.length - 1);\n        } else {\n          // End: Go to last column of current row\n          const columns = table.getVisibleLeafColumns();\n          focusCell(currentCellRef.current.rowIndex, columns.length - 1);\n        }\n        break;\n      case 'PageUp':\n        e.preventDefault();\n        moveToCell('up'); // Could be enhanced to move multiple rows\n        break;\n      case 'PageDown':\n        e.preventDefault();\n        moveToCell('down'); // Could be enhanced to move multiple rows\n        break;\n    }\n  }, [enabled, moveToCell, focusCell, table]);\n\n  useEffect(() => {\n    if (enabled) {\n      document.addEventListener('keydown', handleKeyDown);\n      return () => document.removeEventListener('keydown', handleKeyDown);\n    }\n  }, [enabled, handleKeyDown]);\n\n  // Initialize focus on first cell when table loads\n  useEffect(() => {\n    if (enabled && table.getRowModel().rows.length > 0) {\n      // Small delay to ensure DOM is ready\n      setTimeout(() => {\n        focusCell(0, 0);\n      }, 100);\n    }\n  }, [enabled, table.getRowModel().rows.length, focusCell]);\n\n  return {\n    tableRef,\n    focusCell,\n    currentCell: currentCellRef.current,\n  };\n}","\"use client\";\n\nimport React from \"react\";\nimport { flexRender, Table } from \"@tanstack/react-table\";\nimport { FeatureKey } from \"./table-columns\";\nimport { DraggableColumnHeader } from \"./drag-drop-area\";\nimport { useTableTheme } from \"../hooks/useTableTheme\";\nimport { EnhancedThemeOptions } from \"../types/theme\";\nimport { useKeyboardNavigation } from \"../hooks/useKeyboardNavigation\";\n\ninterface EnhancedTableViewProps<T = any> {\n  table: Table<T>;\n  features: Record<FeatureKey, boolean>;\n  theme?: Partial<EnhancedThemeOptions>;\n}\n\nexport function EnhancedTableView<T = any>({ table, features, theme }: EnhancedTableViewProps<T>) {\n  const { classNames, styles } = useTableTheme(theme);\n  const { tableRef } = useKeyboardNavigation({ \n    table, \n    enabled: true  // Always enable keyboard navigation\n  });\n  \n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden\">\n      <div className=\"overflow-auto\">\n        <table \n          ref={tableRef}\n          className=\"w-full border-collapse\"\n          style={{\n            width: features.columnResizing ? table.getCenterTotalSize() : undefined,\n          }}\n        >\n        <thead className=\"bg-gray-50 dark:bg-gray-700\">\n          {table.getHeaderGroups().map((headerGroup) => (\n            <tr key={headerGroup.id} className=\"border-b border-gray-200 dark:border-gray-600\">\n              {headerGroup.headers.map((header) => (\n                <th \n                  key={header.id} \n                  className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider border-r border-gray-200 dark:border-gray-600 last:border-r-0\"\n                  style={{\n                    width: features.columnResizing ? header.getSize() : undefined,\n                    position: features.columnPinning && header.column.getIsPinned() ? 'sticky' : undefined,\n                    left: features.columnPinning && header.column.getIsPinned() === 'left' ? header.column.getStart('left') : undefined,\n                    right: features.columnPinning && header.column.getIsPinned() === 'right' ? header.column.getAfter('right') : undefined,\n                    zIndex: features.columnPinning && header.column.getIsPinned() ? 1 : undefined,\n                  }}\n                >\n                  {header.isPlaceholder ? null : (\n                    <DraggableColumnHeader \n                      columnId={header.column.id}\n                      canGroup={features.grouping && header.column.getCanGroup()}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <div\n                          {...{\n                            className: features.sorting ? \"cursor-pointer select-none flex items-center\" : \"flex items-center\",\n                            onClick: features.sorting ? header.column.getToggleSortingHandler() : undefined,\n                          }}\n                        >\n                          {features.grouping && header.column.getCanGroup() && (\n                            <button\n                              onClick={header.column.getToggleGroupingHandler()}\n                              className=\"mr-2 px-1 py-0.5 text-xs border rounded\"\n                            >\n                              {header.column.getIsGrouped() ? '🛑' : '👥'}\n                            </button>\n                          )}\n                          {flexRender(header.column.columnDef.header, header.getContext())}\n                          {features.sorting && ({\n                            asc: \" 🔼\",\n                            desc: \" 🔽\",\n                          }[header.column.getIsSorted() as string] ?? null)}\n                        </div>\n                        {features.columnPinning && (\n                          <div className=\"flex gap-1\">\n                            <button\n                              onClick={() => header.column.pin('left')}\n                              className=\"text-xs px-1 hover:bg-gray-200 dark:hover:bg-gray-700\"\n                            >\n                              📌L\n                            </button>\n                            <button\n                              onClick={() => header.column.pin('right')}\n                              className=\"text-xs px-1 hover:bg-gray-200 dark:hover:bg-gray-700\"\n                            >\n                              📌R\n                            </button>\n                            <button\n                              onClick={() => header.column.pin(false)}\n                              className=\"text-xs px-1 hover:bg-gray-200 dark:hover:bg-gray-700\"\n                            >\n                              ❌\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                    </DraggableColumnHeader>\n                  )}\n                  {/* Column Resizer */}\n                  {features.columnResizing && (\n                    <div\n                      onMouseDown={header.getResizeHandler()}\n                      onTouchStart={header.getResizeHandler()}\n                      className=\"absolute right-0 top-0 h-full w-1 bg-gray-300 cursor-col-resize hover:bg-blue-500\"\n                    />\n                  )}\n                </th>\n              ))}\n            </tr>\n          ))}\n          {features.filtering && (\n            <tr className=\"bg-gray-25 dark:bg-gray-750\">\n              {table.getHeaderGroups()[0].headers.map((header) => (\n                <th key={header.id} className=\"px-4 py-2 border-r border-gray-200 dark:border-gray-600 last:border-r-0\">\n                  {header.column.getCanFilter() ? (\n                    <input\n                      className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-500 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n                      value={(header.column.getFilterValue() ?? \"\") as string}\n                      onChange={(e) => header.column.setFilterValue(e.target.value)}\n                      placeholder={`Filter ${header.column.columnDef.header}...`}\n                    />\n                  ) : null}\n                </th>\n              ))}\n            </tr>\n          )}\n        </thead>\n        <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n          {table.getRowModel().rows.map((row, index) => (\n            <tr\n              key={row.id}\n              className={`\n                ${index % 2 === 0 ? 'bg-white dark:bg-gray-800' : 'bg-gray-50 dark:bg-gray-750'}\n                ${features.rowSelection && row.getIsSelected() ? 'bg-blue-50 dark:bg-blue-900/20 border-l-4 border-blue-500' : ''}\n                hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-150\n              `}\n            >\n              {row.getVisibleCells().map((cell) => (\n                <td \n                  key={cell.id} \n                  className=\"px-4 py-3 text-sm text-gray-900 dark:text-gray-100 border-r border-gray-200 dark:border-gray-600 last:border-r-0 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:bg-blue-50 dark:focus:bg-blue-900/20\"\n                  tabIndex={0}\n                  style={{\n                    position: features.columnPinning && cell.column.getIsPinned() ? 'sticky' : undefined,\n                    left: features.columnPinning && cell.column.getIsPinned() === 'left' ? cell.column.getStart('left') : undefined,\n                    right: features.columnPinning && cell.column.getIsPinned() === 'right' ? cell.column.getAfter('right') : undefined,\n                    zIndex: features.columnPinning && cell.column.getIsPinned() ? 1 : undefined,\n                    backgroundColor: features.columnPinning && cell.column.getIsPinned() ? 'inherit' : undefined,\n                  }}\n                >\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      </div>\n    </div>\n  );\n}\n","function memo(getDeps, fn, opts) {\n  let deps = opts.initialDeps ?? [];\n  let result;\n  function memoizedFunction() {\n    var _a, _b, _c, _d;\n    let depTime;\n    if (opts.key && ((_a = opts.debug) == null ? void 0 : _a.call(opts))) depTime = Date.now();\n    const newDeps = getDeps();\n    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => deps[index] !== dep);\n    if (!depsChanged) {\n      return result;\n    }\n    deps = newDeps;\n    let resultTime;\n    if (opts.key && ((_b = opts.debug) == null ? void 0 : _b.call(opts))) resultTime = Date.now();\n    result = fn(...newDeps);\n    if (opts.key && ((_c = opts.debug) == null ? void 0 : _c.call(opts))) {\n      const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;\n      const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;\n      const resultFpsPercentage = resultEndTime / 16;\n      const pad = (str, num) => {\n        str = String(str);\n        while (str.length < num) {\n          str = \" \" + str;\n        }\n        return str;\n      };\n      console.info(\n        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n        `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n          0,\n          Math.min(120 - 120 * resultFpsPercentage, 120)\n        )}deg 100% 31%);`,\n        opts == null ? void 0 : opts.key\n      );\n    }\n    (_d = opts == null ? void 0 : opts.onChange) == null ? void 0 : _d.call(opts, result);\n    return result;\n  }\n  memoizedFunction.updateDeps = (newDeps) => {\n    deps = newDeps;\n  };\n  return memoizedFunction;\n}\nfunction notUndefined(value, msg) {\n  if (value === void 0) {\n    throw new Error(`Unexpected undefined${msg ? `: ${msg}` : \"\"}`);\n  } else {\n    return value;\n  }\n}\nconst approxEqual = (a, b) => Math.abs(a - b) < 1.01;\nconst debounce = (targetWindow, fn, ms) => {\n  let timeoutId;\n  return function(...args) {\n    targetWindow.clearTimeout(timeoutId);\n    timeoutId = targetWindow.setTimeout(() => fn.apply(this, args), ms);\n  };\n};\nexport {\n  approxEqual,\n  debounce,\n  memo,\n  notUndefined\n};\n//# sourceMappingURL=utils.js.map\n","import { debounce, memo, notUndefined, approxEqual } from \"./utils.js\";\nconst getRect = (element) => {\n  const { offsetWidth, offsetHeight } = element;\n  return { width: offsetWidth, height: offsetHeight };\n};\nconst defaultKeyExtractor = (index) => index;\nconst defaultRangeExtractor = (range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0);\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1);\n  const arr = [];\n  for (let i = start; i <= end; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\nconst observeElementRect = (instance, cb) => {\n  const element = instance.scrollElement;\n  if (!element) {\n    return;\n  }\n  const targetWindow = instance.targetWindow;\n  if (!targetWindow) {\n    return;\n  }\n  const handler = (rect) => {\n    const { width, height } = rect;\n    cb({ width: Math.round(width), height: Math.round(height) });\n  };\n  handler(getRect(element));\n  if (!targetWindow.ResizeObserver) {\n    return () => {\n    };\n  }\n  const observer = new targetWindow.ResizeObserver((entries) => {\n    const run = () => {\n      const entry = entries[0];\n      if (entry == null ? void 0 : entry.borderBoxSize) {\n        const box = entry.borderBoxSize[0];\n        if (box) {\n          handler({ width: box.inlineSize, height: box.blockSize });\n          return;\n        }\n      }\n      handler(getRect(element));\n    };\n    instance.options.useAnimationFrameWithResizeObserver ? requestAnimationFrame(run) : run();\n  });\n  observer.observe(element, { box: \"border-box\" });\n  return () => {\n    observer.unobserve(element);\n  };\n};\nconst addEventListenerOptions = {\n  passive: true\n};\nconst observeWindowRect = (instance, cb) => {\n  const element = instance.scrollElement;\n  if (!element) {\n    return;\n  }\n  const handler = () => {\n    cb({ width: element.innerWidth, height: element.innerHeight });\n  };\n  handler();\n  element.addEventListener(\"resize\", handler, addEventListenerOptions);\n  return () => {\n    element.removeEventListener(\"resize\", handler);\n  };\n};\nconst supportsScrollend = typeof window == \"undefined\" ? true : \"onscrollend\" in window;\nconst observeElementOffset = (instance, cb) => {\n  const element = instance.scrollElement;\n  if (!element) {\n    return;\n  }\n  const targetWindow = instance.targetWindow;\n  if (!targetWindow) {\n    return;\n  }\n  let offset = 0;\n  const fallback = instance.options.useScrollendEvent && supportsScrollend ? () => void 0 : debounce(\n    targetWindow,\n    () => {\n      cb(offset, false);\n    },\n    instance.options.isScrollingResetDelay\n  );\n  const createHandler = (isScrolling) => () => {\n    const { horizontal, isRtl } = instance.options;\n    offset = horizontal ? element[\"scrollLeft\"] * (isRtl && -1 || 1) : element[\"scrollTop\"];\n    fallback();\n    cb(offset, isScrolling);\n  };\n  const handler = createHandler(true);\n  const endHandler = createHandler(false);\n  endHandler();\n  element.addEventListener(\"scroll\", handler, addEventListenerOptions);\n  const registerScrollendEvent = instance.options.useScrollendEvent && supportsScrollend;\n  if (registerScrollendEvent) {\n    element.addEventListener(\"scrollend\", endHandler, addEventListenerOptions);\n  }\n  return () => {\n    element.removeEventListener(\"scroll\", handler);\n    if (registerScrollendEvent) {\n      element.removeEventListener(\"scrollend\", endHandler);\n    }\n  };\n};\nconst observeWindowOffset = (instance, cb) => {\n  const element = instance.scrollElement;\n  if (!element) {\n    return;\n  }\n  const targetWindow = instance.targetWindow;\n  if (!targetWindow) {\n    return;\n  }\n  let offset = 0;\n  const fallback = instance.options.useScrollendEvent && supportsScrollend ? () => void 0 : debounce(\n    targetWindow,\n    () => {\n      cb(offset, false);\n    },\n    instance.options.isScrollingResetDelay\n  );\n  const createHandler = (isScrolling) => () => {\n    offset = element[instance.options.horizontal ? \"scrollX\" : \"scrollY\"];\n    fallback();\n    cb(offset, isScrolling);\n  };\n  const handler = createHandler(true);\n  const endHandler = createHandler(false);\n  endHandler();\n  element.addEventListener(\"scroll\", handler, addEventListenerOptions);\n  const registerScrollendEvent = instance.options.useScrollendEvent && supportsScrollend;\n  if (registerScrollendEvent) {\n    element.addEventListener(\"scrollend\", endHandler, addEventListenerOptions);\n  }\n  return () => {\n    element.removeEventListener(\"scroll\", handler);\n    if (registerScrollendEvent) {\n      element.removeEventListener(\"scrollend\", endHandler);\n    }\n  };\n};\nconst measureElement = (element, entry, instance) => {\n  if (entry == null ? void 0 : entry.borderBoxSize) {\n    const box = entry.borderBoxSize[0];\n    if (box) {\n      const size = Math.round(\n        box[instance.options.horizontal ? \"inlineSize\" : \"blockSize\"]\n      );\n      return size;\n    }\n  }\n  return element[instance.options.horizontal ? \"offsetWidth\" : \"offsetHeight\"];\n};\nconst windowScroll = (offset, {\n  adjustments = 0,\n  behavior\n}, instance) => {\n  var _a, _b;\n  const toOffset = offset + adjustments;\n  (_b = (_a = instance.scrollElement) == null ? void 0 : _a.scrollTo) == null ? void 0 : _b.call(_a, {\n    [instance.options.horizontal ? \"left\" : \"top\"]: toOffset,\n    behavior\n  });\n};\nconst elementScroll = (offset, {\n  adjustments = 0,\n  behavior\n}, instance) => {\n  var _a, _b;\n  const toOffset = offset + adjustments;\n  (_b = (_a = instance.scrollElement) == null ? void 0 : _a.scrollTo) == null ? void 0 : _b.call(_a, {\n    [instance.options.horizontal ? \"left\" : \"top\"]: toOffset,\n    behavior\n  });\n};\nclass Virtualizer {\n  constructor(opts) {\n    this.unsubs = [];\n    this.scrollElement = null;\n    this.targetWindow = null;\n    this.isScrolling = false;\n    this.measurementsCache = [];\n    this.itemSizeCache = /* @__PURE__ */ new Map();\n    this.pendingMeasuredCacheIndexes = [];\n    this.scrollRect = null;\n    this.scrollOffset = null;\n    this.scrollDirection = null;\n    this.scrollAdjustments = 0;\n    this.elementsCache = /* @__PURE__ */ new Map();\n    this.observer = /* @__PURE__ */ (() => {\n      let _ro = null;\n      const get = () => {\n        if (_ro) {\n          return _ro;\n        }\n        if (!this.targetWindow || !this.targetWindow.ResizeObserver) {\n          return null;\n        }\n        return _ro = new this.targetWindow.ResizeObserver((entries) => {\n          entries.forEach((entry) => {\n            const run = () => {\n              this._measureElement(entry.target, entry);\n            };\n            this.options.useAnimationFrameWithResizeObserver ? requestAnimationFrame(run) : run();\n          });\n        });\n      };\n      return {\n        disconnect: () => {\n          var _a;\n          (_a = get()) == null ? void 0 : _a.disconnect();\n          _ro = null;\n        },\n        observe: (target) => {\n          var _a;\n          return (_a = get()) == null ? void 0 : _a.observe(target, { box: \"border-box\" });\n        },\n        unobserve: (target) => {\n          var _a;\n          return (_a = get()) == null ? void 0 : _a.unobserve(target);\n        }\n      };\n    })();\n    this.range = null;\n    this.setOptions = (opts2) => {\n      Object.entries(opts2).forEach(([key, value]) => {\n        if (typeof value === \"undefined\") delete opts2[key];\n      });\n      this.options = {\n        debug: false,\n        initialOffset: 0,\n        overscan: 1,\n        paddingStart: 0,\n        paddingEnd: 0,\n        scrollPaddingStart: 0,\n        scrollPaddingEnd: 0,\n        horizontal: false,\n        getItemKey: defaultKeyExtractor,\n        rangeExtractor: defaultRangeExtractor,\n        onChange: () => {\n        },\n        measureElement,\n        initialRect: { width: 0, height: 0 },\n        scrollMargin: 0,\n        gap: 0,\n        indexAttribute: \"data-index\",\n        initialMeasurementsCache: [],\n        lanes: 1,\n        isScrollingResetDelay: 150,\n        enabled: true,\n        isRtl: false,\n        useScrollendEvent: false,\n        useAnimationFrameWithResizeObserver: false,\n        ...opts2\n      };\n    };\n    this.notify = (sync) => {\n      var _a, _b;\n      (_b = (_a = this.options).onChange) == null ? void 0 : _b.call(_a, this, sync);\n    };\n    this.maybeNotify = memo(\n      () => {\n        this.calculateRange();\n        return [\n          this.isScrolling,\n          this.range ? this.range.startIndex : null,\n          this.range ? this.range.endIndex : null\n        ];\n      },\n      (isScrolling) => {\n        this.notify(isScrolling);\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"maybeNotify\",\n        debug: () => this.options.debug,\n        initialDeps: [\n          this.isScrolling,\n          this.range ? this.range.startIndex : null,\n          this.range ? this.range.endIndex : null\n        ]\n      }\n    );\n    this.cleanup = () => {\n      this.unsubs.filter(Boolean).forEach((d) => d());\n      this.unsubs = [];\n      this.observer.disconnect();\n      this.scrollElement = null;\n      this.targetWindow = null;\n    };\n    this._didMount = () => {\n      return () => {\n        this.cleanup();\n      };\n    };\n    this._willUpdate = () => {\n      var _a;\n      const scrollElement = this.options.enabled ? this.options.getScrollElement() : null;\n      if (this.scrollElement !== scrollElement) {\n        this.cleanup();\n        if (!scrollElement) {\n          this.maybeNotify();\n          return;\n        }\n        this.scrollElement = scrollElement;\n        if (this.scrollElement && \"ownerDocument\" in this.scrollElement) {\n          this.targetWindow = this.scrollElement.ownerDocument.defaultView;\n        } else {\n          this.targetWindow = ((_a = this.scrollElement) == null ? void 0 : _a.window) ?? null;\n        }\n        this.elementsCache.forEach((cached) => {\n          this.observer.observe(cached);\n        });\n        this._scrollToOffset(this.getScrollOffset(), {\n          adjustments: void 0,\n          behavior: void 0\n        });\n        this.unsubs.push(\n          this.options.observeElementRect(this, (rect) => {\n            this.scrollRect = rect;\n            this.maybeNotify();\n          })\n        );\n        this.unsubs.push(\n          this.options.observeElementOffset(this, (offset, isScrolling) => {\n            this.scrollAdjustments = 0;\n            this.scrollDirection = isScrolling ? this.getScrollOffset() < offset ? \"forward\" : \"backward\" : null;\n            this.scrollOffset = offset;\n            this.isScrolling = isScrolling;\n            this.maybeNotify();\n          })\n        );\n      }\n    };\n    this.getSize = () => {\n      if (!this.options.enabled) {\n        this.scrollRect = null;\n        return 0;\n      }\n      this.scrollRect = this.scrollRect ?? this.options.initialRect;\n      return this.scrollRect[this.options.horizontal ? \"width\" : \"height\"];\n    };\n    this.getScrollOffset = () => {\n      if (!this.options.enabled) {\n        this.scrollOffset = null;\n        return 0;\n      }\n      this.scrollOffset = this.scrollOffset ?? (typeof this.options.initialOffset === \"function\" ? this.options.initialOffset() : this.options.initialOffset);\n      return this.scrollOffset;\n    };\n    this.getFurthestMeasurement = (measurements, index) => {\n      const furthestMeasurementsFound = /* @__PURE__ */ new Map();\n      const furthestMeasurements = /* @__PURE__ */ new Map();\n      for (let m = index - 1; m >= 0; m--) {\n        const measurement = measurements[m];\n        if (furthestMeasurementsFound.has(measurement.lane)) {\n          continue;\n        }\n        const previousFurthestMeasurement = furthestMeasurements.get(\n          measurement.lane\n        );\n        if (previousFurthestMeasurement == null || measurement.end > previousFurthestMeasurement.end) {\n          furthestMeasurements.set(measurement.lane, measurement);\n        } else if (measurement.end < previousFurthestMeasurement.end) {\n          furthestMeasurementsFound.set(measurement.lane, true);\n        }\n        if (furthestMeasurementsFound.size === this.options.lanes) {\n          break;\n        }\n      }\n      return furthestMeasurements.size === this.options.lanes ? Array.from(furthestMeasurements.values()).sort((a, b) => {\n        if (a.end === b.end) {\n          return a.index - b.index;\n        }\n        return a.end - b.end;\n      })[0] : void 0;\n    };\n    this.getMeasurementOptions = memo(\n      () => [\n        this.options.count,\n        this.options.paddingStart,\n        this.options.scrollMargin,\n        this.options.getItemKey,\n        this.options.enabled\n      ],\n      (count, paddingStart, scrollMargin, getItemKey, enabled) => {\n        this.pendingMeasuredCacheIndexes = [];\n        return {\n          count,\n          paddingStart,\n          scrollMargin,\n          getItemKey,\n          enabled\n        };\n      },\n      {\n        key: false\n      }\n    );\n    this.getMeasurements = memo(\n      () => [this.getMeasurementOptions(), this.itemSizeCache],\n      ({ count, paddingStart, scrollMargin, getItemKey, enabled }, itemSizeCache) => {\n        if (!enabled) {\n          this.measurementsCache = [];\n          this.itemSizeCache.clear();\n          return [];\n        }\n        if (this.measurementsCache.length === 0) {\n          this.measurementsCache = this.options.initialMeasurementsCache;\n          this.measurementsCache.forEach((item) => {\n            this.itemSizeCache.set(item.key, item.size);\n          });\n        }\n        const min = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;\n        this.pendingMeasuredCacheIndexes = [];\n        const measurements = this.measurementsCache.slice(0, min);\n        for (let i = min; i < count; i++) {\n          const key = getItemKey(i);\n          const furthestMeasurement = this.options.lanes === 1 ? measurements[i - 1] : this.getFurthestMeasurement(measurements, i);\n          const start = furthestMeasurement ? furthestMeasurement.end + this.options.gap : paddingStart + scrollMargin;\n          const measuredSize = itemSizeCache.get(key);\n          const size = typeof measuredSize === \"number\" ? measuredSize : this.options.estimateSize(i);\n          const end = start + size;\n          const lane = furthestMeasurement ? furthestMeasurement.lane : i % this.options.lanes;\n          measurements[i] = {\n            index: i,\n            start,\n            size,\n            end,\n            key,\n            lane\n          };\n        }\n        this.measurementsCache = measurements;\n        return measurements;\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"getMeasurements\",\n        debug: () => this.options.debug\n      }\n    );\n    this.calculateRange = memo(\n      () => [\n        this.getMeasurements(),\n        this.getSize(),\n        this.getScrollOffset(),\n        this.options.lanes\n      ],\n      (measurements, outerSize, scrollOffset, lanes) => {\n        return this.range = measurements.length > 0 && outerSize > 0 ? calculateRange({\n          measurements,\n          outerSize,\n          scrollOffset,\n          lanes\n        }) : null;\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"calculateRange\",\n        debug: () => this.options.debug\n      }\n    );\n    this.getVirtualIndexes = memo(\n      () => {\n        let startIndex = null;\n        let endIndex = null;\n        const range = this.calculateRange();\n        if (range) {\n          startIndex = range.startIndex;\n          endIndex = range.endIndex;\n        }\n        this.maybeNotify.updateDeps([this.isScrolling, startIndex, endIndex]);\n        return [\n          this.options.rangeExtractor,\n          this.options.overscan,\n          this.options.count,\n          startIndex,\n          endIndex\n        ];\n      },\n      (rangeExtractor, overscan, count, startIndex, endIndex) => {\n        return startIndex === null || endIndex === null ? [] : rangeExtractor({\n          startIndex,\n          endIndex,\n          overscan,\n          count\n        });\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"getVirtualIndexes\",\n        debug: () => this.options.debug\n      }\n    );\n    this.indexFromElement = (node) => {\n      const attributeName = this.options.indexAttribute;\n      const indexStr = node.getAttribute(attributeName);\n      if (!indexStr) {\n        console.warn(\n          `Missing attribute name '${attributeName}={index}' on measured element.`\n        );\n        return -1;\n      }\n      return parseInt(indexStr, 10);\n    };\n    this._measureElement = (node, entry) => {\n      const index = this.indexFromElement(node);\n      const item = this.measurementsCache[index];\n      if (!item) {\n        return;\n      }\n      const key = item.key;\n      const prevNode = this.elementsCache.get(key);\n      if (prevNode !== node) {\n        if (prevNode) {\n          this.observer.unobserve(prevNode);\n        }\n        this.observer.observe(node);\n        this.elementsCache.set(key, node);\n      }\n      if (node.isConnected) {\n        this.resizeItem(index, this.options.measureElement(node, entry, this));\n      }\n    };\n    this.resizeItem = (index, size) => {\n      const item = this.measurementsCache[index];\n      if (!item) {\n        return;\n      }\n      const itemSize = this.itemSizeCache.get(item.key) ?? item.size;\n      const delta = size - itemSize;\n      if (delta !== 0) {\n        if (this.shouldAdjustScrollPositionOnItemSizeChange !== void 0 ? this.shouldAdjustScrollPositionOnItemSizeChange(item, delta, this) : item.start < this.getScrollOffset() + this.scrollAdjustments) {\n          if (process.env.NODE_ENV !== \"production\" && this.options.debug) {\n            console.info(\"correction\", delta);\n          }\n          this._scrollToOffset(this.getScrollOffset(), {\n            adjustments: this.scrollAdjustments += delta,\n            behavior: void 0\n          });\n        }\n        this.pendingMeasuredCacheIndexes.push(item.index);\n        this.itemSizeCache = new Map(this.itemSizeCache.set(item.key, size));\n        this.notify(false);\n      }\n    };\n    this.measureElement = (node) => {\n      if (!node) {\n        this.elementsCache.forEach((cached, key) => {\n          if (!cached.isConnected) {\n            this.observer.unobserve(cached);\n            this.elementsCache.delete(key);\n          }\n        });\n        return;\n      }\n      this._measureElement(node, void 0);\n    };\n    this.getVirtualItems = memo(\n      () => [this.getVirtualIndexes(), this.getMeasurements()],\n      (indexes, measurements) => {\n        const virtualItems = [];\n        for (let k = 0, len = indexes.length; k < len; k++) {\n          const i = indexes[k];\n          const measurement = measurements[i];\n          virtualItems.push(measurement);\n        }\n        return virtualItems;\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"getVirtualItems\",\n        debug: () => this.options.debug\n      }\n    );\n    this.getVirtualItemForOffset = (offset) => {\n      const measurements = this.getMeasurements();\n      if (measurements.length === 0) {\n        return void 0;\n      }\n      return notUndefined(\n        measurements[findNearestBinarySearch(\n          0,\n          measurements.length - 1,\n          (index) => notUndefined(measurements[index]).start,\n          offset\n        )]\n      );\n    };\n    this.getOffsetForAlignment = (toOffset, align, itemSize = 0) => {\n      const size = this.getSize();\n      const scrollOffset = this.getScrollOffset();\n      if (align === \"auto\") {\n        align = toOffset >= scrollOffset + size ? \"end\" : \"start\";\n      }\n      if (align === \"center\") {\n        toOffset += (itemSize - size) / 2;\n      } else if (align === \"end\") {\n        toOffset -= size;\n      }\n      const maxOffset = this.getTotalSize() + this.options.scrollMargin - size;\n      return Math.max(Math.min(maxOffset, toOffset), 0);\n    };\n    this.getOffsetForIndex = (index, align = \"auto\") => {\n      index = Math.max(0, Math.min(index, this.options.count - 1));\n      const item = this.measurementsCache[index];\n      if (!item) {\n        return void 0;\n      }\n      const size = this.getSize();\n      const scrollOffset = this.getScrollOffset();\n      if (align === \"auto\") {\n        if (item.end >= scrollOffset + size - this.options.scrollPaddingEnd) {\n          align = \"end\";\n        } else if (item.start <= scrollOffset + this.options.scrollPaddingStart) {\n          align = \"start\";\n        } else {\n          return [scrollOffset, align];\n        }\n      }\n      const toOffset = align === \"end\" ? item.end + this.options.scrollPaddingEnd : item.start - this.options.scrollPaddingStart;\n      return [\n        this.getOffsetForAlignment(toOffset, align, item.size),\n        align\n      ];\n    };\n    this.isDynamicMode = () => this.elementsCache.size > 0;\n    this.scrollToOffset = (toOffset, { align = \"start\", behavior } = {}) => {\n      if (behavior === \"smooth\" && this.isDynamicMode()) {\n        console.warn(\n          \"The `smooth` scroll behavior is not fully supported with dynamic size.\"\n        );\n      }\n      this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), {\n        adjustments: void 0,\n        behavior\n      });\n    };\n    this.scrollToIndex = (index, { align: initialAlign = \"auto\", behavior } = {}) => {\n      if (behavior === \"smooth\" && this.isDynamicMode()) {\n        console.warn(\n          \"The `smooth` scroll behavior is not fully supported with dynamic size.\"\n        );\n      }\n      index = Math.max(0, Math.min(index, this.options.count - 1));\n      let attempts = 0;\n      const maxAttempts = 10;\n      const tryScroll = (currentAlign) => {\n        if (!this.targetWindow) return;\n        const offsetInfo = this.getOffsetForIndex(index, currentAlign);\n        if (!offsetInfo) {\n          console.warn(\"Failed to get offset for index:\", index);\n          return;\n        }\n        const [offset, align] = offsetInfo;\n        this._scrollToOffset(offset, { adjustments: void 0, behavior });\n        this.targetWindow.requestAnimationFrame(() => {\n          const currentOffset = this.getScrollOffset();\n          const afterInfo = this.getOffsetForIndex(index, align);\n          if (!afterInfo) {\n            console.warn(\"Failed to get offset for index:\", index);\n            return;\n          }\n          if (!approxEqual(afterInfo[0], currentOffset)) {\n            scheduleRetry(align);\n          }\n        });\n      };\n      const scheduleRetry = (align) => {\n        if (!this.targetWindow) return;\n        attempts++;\n        if (attempts < maxAttempts) {\n          if (process.env.NODE_ENV !== \"production\" && this.options.debug) {\n            console.info(\"Schedule retry\", attempts, maxAttempts);\n          }\n          this.targetWindow.requestAnimationFrame(() => tryScroll(align));\n        } else {\n          console.warn(\n            `Failed to scroll to index ${index} after ${maxAttempts} attempts.`\n          );\n        }\n      };\n      tryScroll(initialAlign);\n    };\n    this.scrollBy = (delta, { behavior } = {}) => {\n      if (behavior === \"smooth\" && this.isDynamicMode()) {\n        console.warn(\n          \"The `smooth` scroll behavior is not fully supported with dynamic size.\"\n        );\n      }\n      this._scrollToOffset(this.getScrollOffset() + delta, {\n        adjustments: void 0,\n        behavior\n      });\n    };\n    this.getTotalSize = () => {\n      var _a;\n      const measurements = this.getMeasurements();\n      let end;\n      if (measurements.length === 0) {\n        end = this.options.paddingStart;\n      } else if (this.options.lanes === 1) {\n        end = ((_a = measurements[measurements.length - 1]) == null ? void 0 : _a.end) ?? 0;\n      } else {\n        const endByLane = Array(this.options.lanes).fill(null);\n        let endIndex = measurements.length - 1;\n        while (endIndex >= 0 && endByLane.some((val) => val === null)) {\n          const item = measurements[endIndex];\n          if (endByLane[item.lane] === null) {\n            endByLane[item.lane] = item.end;\n          }\n          endIndex--;\n        }\n        end = Math.max(...endByLane.filter((val) => val !== null));\n      }\n      return Math.max(\n        end - this.options.scrollMargin + this.options.paddingEnd,\n        0\n      );\n    };\n    this._scrollToOffset = (offset, {\n      adjustments,\n      behavior\n    }) => {\n      this.options.scrollToFn(offset, { behavior, adjustments }, this);\n    };\n    this.measure = () => {\n      this.itemSizeCache = /* @__PURE__ */ new Map();\n      this.notify(false);\n    };\n    this.setOptions(opts);\n  }\n}\nconst findNearestBinarySearch = (low, high, getCurrentValue, value) => {\n  while (low <= high) {\n    const middle = (low + high) / 2 | 0;\n    const currentValue = getCurrentValue(middle);\n    if (currentValue < value) {\n      low = middle + 1;\n    } else if (currentValue > value) {\n      high = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n  lanes\n}) {\n  const lastIndex = measurements.length - 1;\n  const getOffset = (index) => measurements[index].start;\n  if (measurements.length <= lanes) {\n    return {\n      startIndex: 0,\n      endIndex: lastIndex\n    };\n  }\n  let startIndex = findNearestBinarySearch(\n    0,\n    lastIndex,\n    getOffset,\n    scrollOffset\n  );\n  let endIndex = startIndex;\n  if (lanes === 1) {\n    while (endIndex < lastIndex && measurements[endIndex].end < scrollOffset + outerSize) {\n      endIndex++;\n    }\n  } else if (lanes > 1) {\n    const endPerLane = Array(lanes).fill(0);\n    while (endIndex < lastIndex && endPerLane.some((pos) => pos < scrollOffset + outerSize)) {\n      const item = measurements[endIndex];\n      endPerLane[item.lane] = item.end;\n      endIndex++;\n    }\n    const startPerLane = Array(lanes).fill(scrollOffset + outerSize);\n    while (startIndex >= 0 && startPerLane.some((pos) => pos >= scrollOffset)) {\n      const item = measurements[startIndex];\n      startPerLane[item.lane] = item.start;\n      startIndex--;\n    }\n    startIndex = Math.max(0, startIndex - startIndex % lanes);\n    endIndex = Math.min(lastIndex, endIndex + (lanes - 1 - endIndex % lanes));\n  }\n  return { startIndex, endIndex };\n}\nexport {\n  Virtualizer,\n  approxEqual,\n  debounce,\n  defaultKeyExtractor,\n  defaultRangeExtractor,\n  elementScroll,\n  measureElement,\n  memo,\n  notUndefined,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  windowScroll\n};\n//# sourceMappingURL=index.js.map\n","import * as React from \"react\";\nimport { flushSync } from \"react-dom\";\nimport { Virtualizer, elementScroll, observeElementOffset, observeElementRect, windowScroll, observeWindowOffset, observeWindowRect } from \"@tanstack/virtual-core\";\nexport * from \"@tanstack/virtual-core\";\nconst useIsomorphicLayoutEffect = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nfunction useVirtualizerBase(options) {\n  const rerender = React.useReducer(() => ({}), {})[1];\n  const resolvedOptions = {\n    ...options,\n    onChange: (instance2, sync) => {\n      var _a;\n      if (sync) {\n        flushSync(rerender);\n      } else {\n        rerender();\n      }\n      (_a = options.onChange) == null ? void 0 : _a.call(options, instance2, sync);\n    }\n  };\n  const [instance] = React.useState(\n    () => new Virtualizer(resolvedOptions)\n  );\n  instance.setOptions(resolvedOptions);\n  useIsomorphicLayoutEffect(() => {\n    return instance._didMount();\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate();\n  });\n  return instance;\n}\nfunction useVirtualizer(options) {\n  return useVirtualizerBase({\n    observeElementRect,\n    observeElementOffset,\n    scrollToFn: elementScroll,\n    ...options\n  });\n}\nfunction useWindowVirtualizer(options) {\n  return useVirtualizerBase({\n    getScrollElement: () => typeof document !== \"undefined\" ? window : null,\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    initialOffset: () => typeof document !== \"undefined\" ? window.scrollY : 0,\n    ...options\n  });\n}\nexport {\n  useVirtualizer,\n  useWindowVirtualizer\n};\n//# sourceMappingURL=index.js.map\n","\"use client\";\n\nimport React, { useMemo } from \"react\";\nimport { flexRender, Table } from \"@tanstack/react-table\";\nimport { useVirtualizer } from \"@tanstack/react-virtual\";\nimport { FeatureKey } from \"./table-columns\";\nimport { DraggableColumnHeader } from \"./drag-drop-area\";\nimport { useTableTheme } from \"../hooks/useTableTheme\";\nimport { EnhancedThemeOptions } from \"../types/theme\";\n\ninterface VirtualizedTableViewProps<T = any> {\n  table: Table<T>;\n  features: Record<FeatureKey, boolean>;\n  height?: number;\n  rowHeight?: number;\n  overscan?: number;\n  theme?: Partial<EnhancedThemeOptions>;\n}\n\nexport function VirtualizedTableView<T = any>({ \n  table, \n  features, \n  height = 400,\n  rowHeight = 35,\n  overscan = 5,\n  theme\n}: VirtualizedTableViewProps<T>) {\n  const { classNames, styles } = useTableTheme(theme);\n  const { rows } = table.getRowModel();\n\n  // Create a parent ref for the virtualizer\n  const parentRef = React.useRef<HTMLDivElement>(null);\n\n  // Create the virtualizer\n  const rowVirtualizer = useVirtualizer({\n    count: rows.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: () => rowHeight,\n    overscan,\n  });\n\n  // Get virtual items\n  const virtualRows = rowVirtualizer.getVirtualItems();\n\n  // Calculate total size for proper scrolling\n  const totalSize = rowVirtualizer.getTotalSize();\n\n  // Memoize header groups for performance\n  const headerGroups = useMemo(() => table.getHeaderGroups(), [table]);\n\n  return (\n    <div className=\"overflow-auto border\">\n      {/* Fixed Header */}\n      <div className=\"sticky top-0 z-10\" style={styles.header}>\n        <table \n          className={classNames.table}\n          style={{\n            ...styles.table,\n            width: features.columnResizing ? table.getCenterTotalSize() : undefined,\n          }}\n        >\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                  <th \n                    key={header.id} \n                    className={classNames.header}\n                    style={{\n                      width: features.columnResizing ? header.getSize() : undefined,\n                      position: features.columnPinning && header.column.getIsPinned() ? 'sticky' : undefined,\n                      left: features.columnPinning && header.column.getIsPinned() === 'left' ? header.column.getStart('left') : undefined,\n                      right: features.columnPinning && header.column.getIsPinned() === 'right' ? header.column.getAfter('right') : undefined,\n                      zIndex: features.columnPinning && header.column.getIsPinned() ? 2 : 1,\n                    }}\n                  >\n                    {header.isPlaceholder ? null : (\n                      <DraggableColumnHeader \n                        columnId={header.column.id}\n                        canGroup={features.grouping && header.column.getCanGroup()}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <div\n                            {...{\n                              className: features.sorting ? \"cursor-pointer select-none flex items-center\" : \"flex items-center\",\n                              onClick: features.sorting ? header.column.getToggleSortingHandler() : undefined,\n                            }}\n                          >\n                            {features.grouping && header.column.getCanGroup() && (\n                              <button\n                                onClick={header.column.getToggleGroupingHandler()}\n                                className=\"mr-2 px-1 py-0.5 text-xs border rounded\"\n                              >\n                                {header.column.getIsGrouped() ? '🛑' : '👥'}\n                              </button>\n                            )}\n                            {flexRender(header.column.columnDef.header, header.getContext())}\n                            {features.sorting && ({\n                              asc: \" 🔼\",\n                              desc: \" 🔽\",\n                            }[header.column.getIsSorted() as string] ?? null)}\n                          </div>\n                          {features.columnPinning && (\n                            <div className=\"flex gap-1\">\n                              <button\n                                onClick={() => header.column.pin('left')}\n                                className=\"text-xs px-1 hover:bg-gray-200 dark:hover:bg-gray-700\"\n                              >\n                                📌L\n                              </button>\n                              <button\n                                onClick={() => header.column.pin('right')}\n                                className=\"text-xs px-1 hover:bg-gray-200 dark:hover:bg-gray-700\"\n                              >\n                                📌R\n                              </button>\n                              <button\n                                onClick={() => header.column.pin(false)}\n                                className=\"text-xs px-1 hover:bg-gray-200 dark:hover:bg-gray-700\"\n                              >\n                                ❌\n                              </button>\n                            </div>\n                          )}\n                        </div>\n                      </DraggableColumnHeader>\n                    )}\n                    {/* Column Resizer */}\n                    {features.columnResizing && (\n                      <div\n                        onMouseDown={header.getResizeHandler()}\n                        onTouchStart={header.getResizeHandler()}\n                        className=\"absolute right-0 top-0 h-full w-1 bg-gray-300 cursor-col-resize hover:bg-blue-500\"\n                      />\n                    )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n            {features.filtering && (\n              <tr>\n                {headerGroups[0].headers.map((header) => (\n                  <th key={header.id} className=\"border px-2 py-1\">\n                    {header.column.getCanFilter() ? (\n                      <input\n                        className=\"w-full border p-1 text-xs\"\n                        value={(header.column.getFilterValue() ?? \"\") as string}\n                        onChange={(e) => header.column.setFilterValue(e.target.value)}\n                        placeholder={`Filter...`}\n                      />\n                    ) : null}\n                  </th>\n                ))}\n              </tr>\n            )}\n          </thead>\n        </table>\n      </div>\n\n      {/* Virtualized Body */}\n      <div\n        ref={parentRef}\n        className=\"overflow-auto\"\n        style={{\n          height: `${height}px`,\n        }}\n      >\n        <div\n          style={{\n            height: `${totalSize}px`,\n            width: '100%',\n            position: 'relative',\n          }}\n        >\n          <table \n            className={classNames.table}\n            style={{\n              ...styles.table,\n              width: features.columnResizing ? table.getCenterTotalSize() : undefined,\n            }}\n          >\n            <tbody>\n              {virtualRows.map((virtualRow) => {\n                const row = rows[virtualRow.index];\n                return (\n                  <tr\n                    key={row.id}\n                    data-index={virtualRow.index}\n                    ref={(node) => rowVirtualizer.measureElement(node)}\n                    className={`${classNames.row} ${features.rowSelection && row.getIsSelected() ? \"selected\" : \"\"}`}\n                    style={{\n                      ...styles.row,\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      width: '100%',\n                      transform: `translateY(${virtualRow.start}px)`,\n                    }}\n                  >\n                    {row.getVisibleCells().map((cell) => (\n                      <td \n                        key={cell.id} \n                        className={classNames.cell}\n                        style={{\n                          ...styles.cell,\n                          height: `${rowHeight}px`,\n                          position: features.columnPinning && cell.column.getIsPinned() ? 'sticky' : undefined,\n                          left: features.columnPinning && cell.column.getIsPinned() === 'left' ? cell.column.getStart('left') : undefined,\n                          right: features.columnPinning && cell.column.getIsPinned() === 'right' ? cell.column.getAfter('right') : undefined,\n                          zIndex: features.columnPinning && cell.column.getIsPinned() ? 1 : undefined,\n                          backgroundColor: features.columnPinning && cell.column.getIsPinned() ? 'inherit' : undefined,\n                        }}\n                      >\n                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Virtualization Info */}\n      <div className=\"text-xs text-gray-500 p-2 border-t\">\n        Showing {virtualRows.length} of {rows.length} rows (virtualized)\n      </div>\n    </div>\n  );\n}","\"use client\";\n\nimport React from \"react\";\nimport { useTableTheme } from \"../hooks/useTableTheme\";\nimport { ThemeVariant, ColorScheme } from \"../types/theme\";\nimport { getThemePresetNames, getThemePreset } from \"../config/theme-presets\";\n\ninterface ThemeSelectorProps {\n  variant?: ThemeVariant;\n  colorScheme?: ColorScheme;\n  onVariantChange?: (variant: ThemeVariant) => void;\n  onColorSchemeChange?: (scheme: ColorScheme) => void;\n  className?: string;\n}\n\nexport function ThemeSelector({\n  variant = 'default',\n  colorScheme = 'auto',\n  onVariantChange,\n  onColorSchemeChange,\n  className = '',\n}: ThemeSelectorProps) {\n  const { classNames, styles, toggleColorScheme } = useTableTheme({ variant, colorScheme });\n  \n  const presetNames = getThemePresetNames();\n  \n  const handleVariantChange = (newVariant: string) => {\n    const typedVariant = newVariant as ThemeVariant;\n    onVariantChange?.(typedVariant);\n  };\n  \n  const handleColorSchemeChange = (newScheme: string) => {\n    const typedScheme = newScheme as ColorScheme;\n    onColorSchemeChange?.(typedScheme);\n  };\n\n  return (\n    <div className={`theme-selector ${className}`} style={styles.controls}>\n      <div className=\"flex flex-col gap-4 p-4 border rounded-lg\">\n        <h3 className=\"text-lg font-semibold\">Theme Settings</h3>\n        \n        {/* Theme Variant Selector */}\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-sm font-medium\">Theme Variant:</label>\n          <select\n            value={variant}\n            onChange={(e) => handleVariantChange(e.target.value)}\n            className=\"px-3 py-2 border rounded\"\n            style={styles.controls}\n          >\n            {presetNames.map((presetName) => {\n              const preset = getThemePreset(presetName);\n              return (\n                <option key={presetName} value={presetName}>\n                  {preset?.name || presetName} - {preset?.description || 'Custom theme'}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        {/* Color Scheme Selector */}\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-sm font-medium\">Color Scheme:</label>\n          <div className=\"flex gap-2\">\n            {(['light', 'dark', 'auto'] as ColorScheme[]).map((scheme) => (\n              <label key={scheme} className=\"flex items-center gap-1 text-sm cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"colorScheme\"\n                  value={scheme}\n                  checked={colorScheme === scheme}\n                  onChange={(e) => handleColorSchemeChange(e.target.value)}\n                />\n                {scheme.charAt(0).toUpperCase() + scheme.slice(1)}\n              </label>\n            ))}\n          </div>\n        </div>\n\n\n      </div>\n    </div>\n  );\n}\n\n/**\n * Compact theme selector for inline use\n */\nexport function CompactThemeSelector({\n  variant = 'default',\n  colorScheme = 'auto',\n  onVariantChange,\n  onColorSchemeChange,\n}: ThemeSelectorProps) {\n  const { toggleColorScheme } = useTableTheme({ variant, colorScheme });\n  \n  return (\n    <div className=\"flex items-center gap-2\">\n      <select\n        value={variant}\n        onChange={(e) => onVariantChange?.(e.target.value as ThemeVariant)}\n        className=\"px-2 py-1 border rounded text-xs\"\n      >\n        {getThemePresetNames().map((name) => (\n          <option key={name} value={name}>\n            {name}\n          </option>\n        ))}\n      </select>\n      \n      <button\n        onClick={toggleColorScheme}\n        className=\"px-2 py-1 border rounded text-xs hover:bg-gray-100 dark:hover:bg-gray-700\"\n        title=\"Toggle light/dark mode\"\n      >\n        🌓\n      </button>\n    </div>\n  );\n}","import { TableFeatures } from \"../components/ReusableAdvancedTable\";\n\nexport interface TablePreset {\n  name: string;\n  description: string;\n  features: TableFeatures;\n  performanceConfig?: {\n    debounceDelay?: number;\n    enableMemoization?: boolean;\n    enablePerformanceLogging?: boolean;\n    virtualizationThreshold?: number;\n  };\n  theme?: {\n    variant?: 'default' | 'minimal' | 'enterprise' | 'compact' | 'spacious';\n    colorScheme?: 'light' | 'dark' | 'auto';\n  };\n  initialState?: {\n    pagination?: {\n      pageIndex: number;\n      pageSize: number;\n    };\n  };\n}\n\n/**\n * Predefined table presets for common use cases\n */\nexport const TABLE_PRESETS: Record<string, TablePreset> = {\n  basic: {\n    name: \"Basic Table\",\n    description: \"Simple table with sorting and pagination\",\n    features: {\n      sorting: true,\n      pagination: true,\n      filtering: false,\n      rowSelection: false,\n      columnVisibility: false,\n      columnResizing: false,\n      columnPinning: false,\n      rowExpansion: false,\n      globalFiltering: false,\n      grouping: false,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: false,\n    },\n    theme: {\n      variant: 'default',\n      colorScheme: 'auto',\n    },\n    initialState: {\n      pagination: { pageIndex: 0, pageSize: 10 },\n    },\n  },\n\n  standard: {\n    name: \"Standard Table\",\n    description: \"Full-featured table for most use cases\",\n    features: {\n      sorting: true,\n      pagination: true,\n      filtering: true,\n      rowSelection: true,\n      columnVisibility: true,\n      columnResizing: true,\n      columnPinning: false,\n      rowExpansion: false,\n      globalFiltering: true,\n      grouping: false,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: true,\n    },\n    performanceConfig: {\n      debounceDelay: 300,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n    },\n    theme: {\n      variant: 'default',\n      colorScheme: 'auto',\n    },\n    initialState: {\n      pagination: { pageIndex: 0, pageSize: 20 },\n    },\n  },\n\n  advanced: {\n    name: \"Advanced Table\",\n    description: \"Table with all features enabled for power users\",\n    features: {\n      sorting: true,\n      pagination: true,\n      filtering: true,\n      rowSelection: true,\n      columnVisibility: true,\n      columnResizing: true,\n      columnPinning: true,\n      rowExpansion: true,\n      globalFiltering: true,\n      grouping: true,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: true,\n    },\n    performanceConfig: {\n      debounceDelay: 250,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n    },\n    theme: {\n      variant: 'enterprise',\n      colorScheme: 'auto',\n    },\n    initialState: {\n      pagination: { pageIndex: 0, pageSize: 25 },\n    },\n  },\n\n  dataEntry: {\n    name: \"Data Entry Table\",\n    description: \"Table optimized for data entry and editing\",\n    features: {\n      sorting: true,\n      pagination: true,\n      filtering: true,\n      rowSelection: true,\n      columnVisibility: false,\n      columnResizing: true,\n      columnPinning: false,\n      rowExpansion: false,\n      globalFiltering: true,\n      grouping: false,\n      inlineEditing: true,\n      pivoting: false,\n      virtualization: false,\n      exporting: true,\n    },\n    performanceConfig: {\n      debounceDelay: 200,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n    },\n    theme: {\n      variant: 'compact',\n      colorScheme: 'auto',\n    },\n    initialState: {\n      pagination: { pageIndex: 0, pageSize: 15 },\n    },\n  },\n\n  analytics: {\n    name: \"Analytics Table\",\n    description: \"Table for data analysis with grouping and pivoting\",\n    features: {\n      sorting: true,\n      pagination: true,\n      filtering: true,\n      rowSelection: true,\n      columnVisibility: true,\n      columnResizing: true,\n      columnPinning: true,\n      rowExpansion: true,\n      globalFiltering: true,\n      grouping: true,\n      inlineEditing: false,\n      pivoting: true,\n      virtualization: false,\n      exporting: true,\n    },\n    performanceConfig: {\n      debounceDelay: 300,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n    },\n    theme: {\n      variant: 'spacious',\n      colorScheme: 'auto',\n    },\n    initialState: {\n      pagination: { pageIndex: 0, pageSize: 50 },\n    },\n  },\n\n  minimal: {\n    name: \"Minimal Table\",\n    description: \"Clean, minimal table for simple data display\",\n    features: {\n      sorting: true,\n      pagination: true,\n      filtering: false,\n      rowSelection: false,\n      columnVisibility: false,\n      columnResizing: false,\n      columnPinning: false,\n      rowExpansion: false,\n      globalFiltering: false,\n      grouping: false,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: false,\n    },\n    theme: {\n      variant: 'minimal',\n      colorScheme: 'auto',\n    },\n    initialState: {\n      pagination: { pageIndex: 0, pageSize: 15 },\n    },\n  },\n\n  performance: {\n    name: \"High Performance Table\",\n    description: \"Optimized for large datasets with virtualization\",\n    features: {\n      sorting: true,\n      pagination: false, // Disabled when virtualization is on\n      filtering: true,\n      rowSelection: true,\n      columnVisibility: true,\n      columnResizing: true,\n      columnPinning: true,\n      rowExpansion: false,\n      globalFiltering: true,\n      grouping: false,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: true,\n      exporting: true,\n    },\n    performanceConfig: {\n      debounceDelay: 150,\n      enableMemoization: true,\n      enablePerformanceLogging: true,\n      virtualizationThreshold: 100,\n    },\n    theme: {\n      variant: 'default',\n      colorScheme: 'auto',\n    },\n  },\n\n  dashboard: {\n    name: \"Dashboard Table\",\n    description: \"Table for dashboard displays with key metrics\",\n    features: {\n      sorting: true,\n      pagination: true,\n      filtering: false,\n      rowSelection: false,\n      columnVisibility: true,\n      columnResizing: false,\n      columnPinning: false,\n      rowExpansion: false,\n      globalFiltering: true,\n      grouping: true,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: true,\n    },\n    performanceConfig: {\n      debounceDelay: 300,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n    },\n    theme: {\n      variant: 'enterprise',\n      colorScheme: 'auto',\n    },\n    initialState: {\n      pagination: { pageIndex: 0, pageSize: 10 },\n    },\n  },\n\n  readonly: {\n    name: \"Read-Only Table\",\n    description: \"Table for displaying data without editing capabilities\",\n    features: {\n      sorting: true,\n      pagination: true,\n      filtering: true,\n      rowSelection: false,\n      columnVisibility: true,\n      columnResizing: true,\n      columnPinning: false,\n      rowExpansion: true,\n      globalFiltering: true,\n      grouping: false,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: true,\n    },\n    performanceConfig: {\n      debounceDelay: 300,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n    },\n    theme: {\n      variant: 'default',\n      colorScheme: 'auto',\n    },\n    initialState: {\n      pagination: { pageIndex: 0, pageSize: 20 },\n    },\n  },\n\n  mobile: {\n    name: \"Mobile Optimized\",\n    description: \"Table optimized for mobile and small screens\",\n    features: {\n      sorting: true,\n      pagination: true,\n      filtering: false,\n      rowSelection: false,\n      columnVisibility: true,\n      columnResizing: false,\n      columnPinning: false,\n      rowExpansion: true,\n      globalFiltering: true,\n      grouping: false,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: false,\n    },\n    performanceConfig: {\n      debounceDelay: 400,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n    },\n    theme: {\n      variant: 'compact',\n      colorScheme: 'auto',\n    },\n    initialState: {\n      pagination: { pageIndex: 0, pageSize: 5 },\n    },\n  },\n};\n\n/**\n * Get a preset configuration by name\n */\nexport function getPreset(presetName: string): TablePreset | undefined {\n  return TABLE_PRESETS[presetName];\n}\n\n/**\n * Get all available preset names\n */\nexport function getPresetNames(): string[] {\n  return Object.keys(TABLE_PRESETS);\n}\n\n/**\n * Get presets filtered by category or feature\n */\nexport function getPresetsByFeature(feature: keyof TableFeatures): TablePreset[] {\n  return Object.values(TABLE_PRESETS).filter(preset => preset.features[feature]);\n}\n\n/**\n * Create a custom preset\n */\nexport function createCustomPreset(\n  name: string,\n  description: string,\n  config: Partial<TablePreset>\n): TablePreset {\n  return {\n    name,\n    description,\n    features: {\n      ...TABLE_PRESETS.standard.features,\n      ...config.features,\n    },\n    performanceConfig: {\n      ...TABLE_PRESETS.standard.performanceConfig,\n      ...config.performanceConfig,\n    },\n    theme: {\n      ...TABLE_PRESETS.standard.theme,\n      ...config.theme,\n    },\n    initialState: {\n      ...TABLE_PRESETS.standard.initialState,\n      ...config.initialState,\n    },\n  };\n}","\"use client\";\n\nimport React, { useState } from \"react\";\nimport { TABLE_PRESETS, TablePreset } from \"../config/table-presets\";\n\ninterface PresetSelectorProps {\n  currentPreset?: string;\n  onPresetChange: (preset: TablePreset) => void;\n  className?: string;\n}\n\nexport function PresetSelector({ \n  currentPreset = 'standard', \n  onPresetChange, \n  className = \"\" \n}: PresetSelectorProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedPreset, setSelectedPreset] = useState(currentPreset);\n\n  const handlePresetSelect = (presetKey: string) => {\n    const preset = TABLE_PRESETS[presetKey];\n    if (preset) {\n      setSelectedPreset(presetKey);\n      onPresetChange(preset);\n      setIsOpen(false);\n    }\n  };\n\n  const currentPresetData = TABLE_PRESETS[selectedPreset];\n\n  return (\n    <div className={`relative ${className}`}>\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"flex items-center justify-between w-full px-4 py-2 text-sm bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n      >\n        <div className=\"flex flex-col items-start\">\n          <span className=\"font-medium\">{currentPresetData?.name || 'Select Preset'}</span>\n          <span className=\"text-xs text-gray-500 dark:text-gray-400 truncate max-w-48\">\n            {currentPresetData?.description}\n          </span>\n        </div>\n        <svg\n          className={`w-4 h-4 transition-transform ${isOpen ? 'rotate-180' : ''}`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n\n      {isOpen && (\n        <>\n          {/* Overlay */}\n          <div \n            className=\"fixed inset-0 z-10\" \n            onClick={() => setIsOpen(false)}\n          />\n          \n          {/* Dropdown */}\n          <div className=\"absolute z-20 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg max-h-96 overflow-y-auto\">\n            <div className=\"py-1\">\n              {Object.entries(TABLE_PRESETS).map(([key, preset]) => (\n                <button\n                  key={key}\n                  onClick={() => handlePresetSelect(key)}\n                  className={`w-full px-4 py-3 text-left hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:bg-gray-100 dark:focus:bg-gray-700 ${\n                    selectedPreset === key \n                      ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300' \n                      : 'text-gray-900 dark:text-gray-100'\n                  }`}\n                >\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-medium text-sm\">{preset.name}</span>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                      {preset.description}\n                    </span>\n                    <div className=\"flex flex-wrap gap-1 mt-2\">\n                      {Object.entries(preset.features)\n                        .filter(([, enabled]) => enabled)\n                        .slice(0, 4)\n                        .map(([feature]) => (\n                          <span\n                            key={feature}\n                            className=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200\"\n                          >\n                            {feature}\n                          </span>\n                        ))}\n                      {Object.values(preset.features).filter(Boolean).length > 4 && (\n                        <span className=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-500 dark:text-gray-400\">\n                          +{Object.values(preset.features).filter(Boolean).length - 4} more\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}","import { useCallback, useMemo, useRef, useEffect, useState } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport React from 'react';\n\n/**\n * Debounce hook for delaying function execution\n * Useful for search inputs and filters to reduce computation frequency\n */\nexport function useDebounce<T extends (...args: any[]) => any>(\n  callback: T,\n  delay: number\n): T {\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const debouncedCallback = useCallback(\n    (...args: Parameters<T>) => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        callback(...args);\n      }, delay);\n    },\n    [callback, delay]\n  ) as T;\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  return debouncedCallback;\n}\n\n/**\n * Debounced value hook for state values\n * Returns a debounced version of the input value\n */\nexport function useDebouncedValue<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\n/**\n * Memoization utilities for table data and columns\n */\nexport class TableMemoization {\n  /**\n   * Memoize table columns with deep comparison\n   * Prevents unnecessary re-renders when column definitions haven't changed\n   */\n  static useMemoizedColumns<T>(\n    columns: ColumnDef<T>[],\n    dependencies: any[] = []\n  ): ColumnDef<T>[] {\n    return useMemo(() => {\n      return columns.map((col, index) => ({\n        ...col,\n        // Add stable id if not provided\n        id: col.id || `column-${index}`,\n      }));\n    }, [columns, ...dependencies]);\n  }\n\n  /**\n   * Memoize table data with row indexing\n   * Adds stable row identifiers and prevents unnecessary re-computation\n   */\n  static useMemoizedData<T>(\n    data: T[],\n    keyExtractor?: (item: T, index: number) => string | number\n  ): T[] {\n    return useMemo(() => {\n      return data.map((row, index) => {\n        const rowKey = keyExtractor ? keyExtractor(row, index) : index;\n        return {\n          ...row,\n          _tableRowId: rowKey,\n          _tableRowIndex: index,\n        };\n      });\n    }, [data, keyExtractor]);\n  }\n\n  /**\n   * Memoize computed table state\n   * Prevents recalculation of derived values\n   */\n  static useComputedTableState<T>(\n    data: T[],\n    columns: ColumnDef<T>[],\n    features: Record<string, boolean>\n  ) {\n    return useMemo(() => {\n      const enabledFeatures = Object.entries(features)\n        .filter(([_, enabled]) => enabled)\n        .map(([feature]) => feature);\n\n      return {\n        totalRows: data.length,\n        totalColumns: columns.length,\n        hasData: data.length > 0,\n        enabledFeatures,\n        featureCount: enabledFeatures.length,\n        // Performance metrics\n        isLargeDataset: data.length > 1000,\n        shouldVirtualize: data.length > 5000,\n      };\n    }, [data.length, columns.length, features]);\n  }\n}\n\n/**\n * Performance monitoring utilities\n */\nexport class PerformanceMonitor {\n  private static measurements = new Map<string, number>();\n\n  /**\n   * Start performance measurement\n   */\n  static startMeasurement(name: string): void {\n    this.measurements.set(name, performance.now());\n  }\n\n  /**\n   * End performance measurement and return duration\n   */\n  static endMeasurement(name: string): number {\n    const startTime = this.measurements.get(name);\n    if (!startTime) {\n      console.warn(`No measurement started for: ${name}`);\n      return 0;\n    }\n\n    const duration = performance.now() - startTime;\n    this.measurements.delete(name);\n    return duration;\n  }\n\n  /**\n   * Measure function execution time\n   */\n  static measureFunction<T extends (...args: any[]) => any>(\n    fn: T,\n    name?: string\n  ): T {\n    return ((...args: Parameters<T>) => {\n      const measurementName = name || fn.name || 'anonymous';\n      this.startMeasurement(measurementName);\n\n      try {\n        const result = fn(...args);\n\n        // Handle async functions\n        if (result instanceof Promise) {\n          return result.finally(() => {\n            const duration = this.endMeasurement(measurementName);\n            console.debug(`${measurementName} took ${duration.toFixed(2)}ms`);\n          });\n        }\n\n        const duration = this.endMeasurement(measurementName);\n        console.debug(`${measurementName} took ${duration.toFixed(2)}ms`);\n        return result;\n      } catch (error) {\n        this.endMeasurement(measurementName);\n        throw error;\n      }\n    }) as T;\n  }\n\n  /**\n   * Memory usage monitoring\n   */\n  static getMemoryUsage(): number {\n    if ('memory' in performance) {\n      return (performance as any).memory.usedJSHeapSize;\n    }\n    return 0;\n  }\n\n  /**\n   * Log performance metrics\n   */\n  static logMetrics(context: string, metrics: Record<string, any>): void {\n    console.group(`Performance Metrics - ${context}`);\n    Object.entries(metrics).forEach(([key, value]) => {\n      console.log(`${key}: ${value}`);\n    });\n    console.groupEnd();\n  }\n}\n\n/**\n * React component memoization utilities\n */\nexport const MemoizedComponents = {\n  /**\n   * Memoize table cell components\n   */\n  memoizeCell: <P extends object>(Component: React.ComponentType<P>) => {\n    return React.memo(Component, (prevProps, nextProps) => {\n      // Custom comparison for table cell props\n      const prevKeys = Object.keys(prevProps);\n      const nextKeys = Object.keys(nextProps);\n\n      if (prevKeys.length !== nextKeys.length) {\n        return false;\n      }\n\n      return prevKeys.every(key => {\n        const prevValue = (prevProps as any)[key];\n        const nextValue = (nextProps as any)[key];\n\n        // Deep comparison for objects\n        if (typeof prevValue === 'object' && typeof nextValue === 'object') {\n          return JSON.stringify(prevValue) === JSON.stringify(nextValue);\n        }\n\n        return prevValue === nextValue;\n      });\n    });\n  },\n\n  /**\n   * Memoize table row components\n   */\n  memoizeRow: <P extends object>(Component: React.ComponentType<P>) => {\n    return React.memo(Component, (prevProps, nextProps) => {\n      // Row-specific comparison logic\n      const prevRow = (prevProps as any).row;\n      const nextRow = (nextProps as any).row;\n\n      if (!prevRow || !nextRow) {\n        return prevProps === nextProps;\n      }\n\n      // Compare row data and state\n      return (\n        prevRow.id === nextRow.id &&\n        prevRow.index === nextRow.index &&\n        JSON.stringify(prevRow.original) === JSON.stringify(nextRow.original)\n      );\n    });\n  },\n};\n\n/**\n * Optimization configuration\n */\nexport interface PerformanceConfig {\n  debounceDelay: number;\n  enableMemoization: boolean;\n  enablePerformanceLogging: boolean;\n  virtualizationThreshold: number;\n}\n\nexport const defaultPerformanceConfig: PerformanceConfig = {\n  debounceDelay: 300,\n  enableMemoization: true,\n  enablePerformanceLogging: false,\n  virtualizationThreshold: 1000,\n};\n\n/**\n * Performance optimization hook\n * Combines all performance utilities for easy use\n */\nexport function useTablePerformance<T>(\n  data: T[],\n  columns: ColumnDef<T>[],\n  features: Record<string, boolean>,\n  config: Partial<PerformanceConfig> = {}\n) {\n  const performanceConfig = { ...defaultPerformanceConfig, ...config };\n\n  // Memoized data and columns\n  const memoizedData = TableMemoization.useMemoizedData(data);\n  const memoizedColumns = TableMemoization.useMemoizedColumns(columns, [features]);\n\n  // Computed state\n  const computedState = TableMemoization.useComputedTableState(\n    data,\n    columns,\n    features\n  );\n\n  // Performance monitoring\n  useEffect(() => {\n    if (performanceConfig.enablePerformanceLogging) {\n      PerformanceMonitor.logMetrics('Table Performance', {\n        'Data Size': data.length,\n        'Column Count': columns.length,\n        'Enabled Features': computedState.enabledFeatures.length,\n        'Should Virtualize': computedState.shouldVirtualize,\n        'Memory Usage': `${(PerformanceMonitor.getMemoryUsage() / 1024 / 1024).toFixed(2)} MB`,\n      });\n    }\n  }, [data.length, columns.length, computedState, performanceConfig.enablePerformanceLogging]);\n\n  return {\n    memoizedData,\n    memoizedColumns,\n    computedState,\n    performanceConfig,\n  };\n}","\"use client\";\n\nimport React, { useState, useMemo } from \"react\";\nimport {\n  getCoreRowModel,\n  getPaginationRowModel,\n  getFilteredRowModel,\n  getSortedRowModel,\n  getGroupedRowModel,\n  getExpandedRowModel,\n  useReactTable,\n  SortingState,\n  ColumnFiltersState,\n  RowSelectionState,\n  VisibilityState,\n  ColumnPinningState,\n  GroupingState,\n  ExpandedState,\n  ColumnDef,\n  Table,\n  Row,\n  ColumnResizeMode,\n} from \"@tanstack/react-table\";\nimport { TableControls } from \"./table-controls\";\nimport { EnhancedTableView } from \"./enhanced-table-view\";\nimport { VirtualizedTableView } from \"./virtualized-table-view\";\nimport { DragDropArea } from \"./drag-drop-area\";\nimport { ThemeSelector } from \"./theme-selector\";\nimport { PresetSelector } from \"./PresetSelector\";\nimport { EnhancedThemeOptions, ThemeVariant, ColorScheme } from \"../types/theme\";\nimport { useTablePerformance, useDebounce } from \"../utils/performance\";\nimport { TablePreset, getPreset } from \"../config/table-presets\";\n\nexport type FeatureKey = \n  | \"sorting\"\n  | \"filtering\"\n  | \"pagination\"\n  | \"rowSelection\"\n  | \"columnVisibility\"\n  | \"columnResizing\"\n  | \"columnPinning\"\n  | \"rowExpansion\"\n  | \"globalFiltering\"\n  | \"grouping\"\n  | \"inlineEditing\"\n  | \"pivoting\"\n  | \"virtualization\"\n  | \"exporting\";\n\nexport interface TableFeatures {\n  sorting?: boolean;\n  filtering?: boolean;\n  pagination?: boolean;\n  rowSelection?: boolean;\n  columnVisibility?: boolean;\n  columnResizing?: boolean;\n  columnPinning?: boolean;\n  rowExpansion?: boolean;\n  globalFiltering?: boolean;\n  grouping?: boolean;\n  inlineEditing?: boolean;\n  pivoting?: boolean;\n  virtualization?: boolean;\n  exporting?: boolean;\n}\n\nexport interface PerformanceConfig {\n  debounceDelay?: number;\n  enableMemoization?: boolean;\n  enablePerformanceLogging?: boolean;\n  virtualizationThreshold?: number;\n}\n\nexport interface ReusableAdvancedTableProps<T = any> {\n  /** Table data array */\n  data: T[];\n  \n  /** Column definitions for the table */\n  columns: ColumnDef<T>[];\n  \n  /** Preset configuration name */\n  preset?: string;\n  \n  /** Feature configuration - controls which features are enabled (overrides preset) */\n  features?: TableFeatures;\n  \n  /** Performance optimization settings */\n  performanceConfig?: PerformanceConfig;\n  \n  /** Initial table state */\n  initialState?: {\n    sorting?: SortingState;\n    columnFilters?: ColumnFiltersState;\n    rowSelection?: RowSelectionState;\n    columnVisibility?: VisibilityState;\n    columnPinning?: ColumnPinningState;\n    grouping?: GroupingState;\n    expanded?: ExpandedState;\n    globalFilter?: string;\n    pagination?: {\n      pageIndex: number;\n      pageSize: number;\n    };\n  };\n  \n  /** Theme configuration */\n  theme?: {\n    variant?: ThemeVariant;\n    colorScheme?: ColorScheme;\n    enableTransitions?: boolean;\n    enableHoverEffects?: boolean;\n    enableFocusIndicators?: boolean;\n  };\n  \n  /** Virtualization settings (when virtualization is enabled) */\n  virtualization?: {\n    height?: number;\n    rowHeight?: number;\n    overscan?: number;\n  };\n  \n  /** Function to get sub-rows for hierarchical data */\n  getSubRows?: (row: T) => T[] | undefined;\n  \n  /** Event handlers */\n  onDataChange?: (data: T[]) => void;\n  onStateChange?: (state: any) => void;\n  onFeatureToggle?: (feature: FeatureKey, enabled: boolean) => void;\n  \n  /** Custom components */\n  components?: {\n    LoadingComponent?: React.ComponentType;\n    ErrorComponent?: React.ComponentType<{ error: Error; retry: () => void }>;\n    EmptyStateComponent?: React.ComponentType;\n  };\n  \n  /** Additional CSS classes */\n  className?: string;\n  \n  /** Show theme selector */\n  showThemeSelector?: boolean;\n  \n  /** Show preset selector */\n  showPresetSelector?: boolean;\n  \n  /** Allow feature toggling via UI */\n  allowFeatureToggling?: boolean;\n\n  /** Meta object for table (used for inline editing) */\n  meta?: any;\n}\n\nexport function ReusableAdvancedTable<T = any>({\n  data,\n  columns: providedColumns,\n  preset,\n  features = {},\n  performanceConfig = {},\n  initialState = {},\n  theme = {},\n  virtualization = {},\n  getSubRows,\n  onDataChange,\n  onStateChange,\n  onFeatureToggle,\n  components,\n  className = \"\",\n  showThemeSelector = true,\n  showPresetSelector = true,\n  allowFeatureToggling = true,\n  meta,\n}: ReusableAdvancedTableProps<T>) {\n  \n  // Get preset configuration\n  const presetConfig = preset ? getPreset(preset) : null;\n  \n  // Default feature configuration\n  const defaultFeatures: Record<FeatureKey, boolean> = {\n    sorting: true,\n    filtering: true,\n    pagination: true,\n    rowSelection: false,\n    columnVisibility: false,\n    columnResizing: false,\n    columnPinning: false,\n    rowExpansion: false,\n    globalFiltering: false,\n    grouping: false,\n    inlineEditing: false,\n    pivoting: false,\n    virtualization: false,\n    exporting: true,\n  };\n\n  // Merge features: defaults -> preset -> props\n  const [enabled, setEnabled] = useState<Record<FeatureKey, boolean>>({\n    ...defaultFeatures,\n    ...(presetConfig?.features || {}),\n    ...features,\n  });\n\n  // Current preset state\n  const [currentPreset, setCurrentPreset] = useState(preset || 'standard');\n\n  // Theme state\n  const [themeVariant, setThemeVariant] = useState<ThemeVariant>(\n    presetConfig?.theme?.variant || theme.variant || 'default'\n  );\n  const [colorScheme, setColorScheme] = useState<ColorScheme>(\n    presetConfig?.theme?.colorScheme || theme.colorScheme || 'auto'\n  );\n  \n  const themeOptions: Partial<EnhancedThemeOptions> = useMemo(() => ({\n    variant: themeVariant,\n    colorScheme: colorScheme,\n    enableTransitions: theme.enableTransitions ?? true,\n    enableHoverEffects: theme.enableHoverEffects ?? true,\n    enableFocusIndicators: theme.enableFocusIndicators ?? true,\n  }), [themeVariant, colorScheme, theme.enableTransitions, theme.enableHoverEffects, theme.enableFocusIndicators]);\n\n  // Data state management\n  const [tableData, setTableData] = useState<T[]>(data);\n  \n  // Table state management\n  const [sorting, setSorting] = useState<SortingState>(initialState.sorting || []);\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>(initialState.columnFilters || []);\n  const [rowSelection, setRowSelection] = useState<RowSelectionState>(initialState.rowSelection || {});\n  const [columnVisibility, setColumnVisibility] = useState<VisibilityState>(initialState.columnVisibility || {});\n  const [columnPinning, setColumnPinning] = useState<ColumnPinningState>(initialState.columnPinning || {});\n  const [grouping, setGrouping] = useState<GroupingState>(initialState.grouping || []);\n  const [expanded, setExpanded] = useState<ExpandedState>(initialState.expanded || {});\n  const [globalFilter, setGlobalFilter] = useState(initialState.globalFilter || '');\n\n  // Update table data when props change\n  React.useEffect(() => {\n    setTableData(data);\n  }, [data]);\n\n  // Note: handleDataUpdate function moved inside useMemo for stability\n\n  // Notify parent of data changes - use ref to avoid infinite loops\n  const initialDataRef = React.useRef(data);\n  const hasDataChangedRef = React.useRef(false);\n  \n  // Use ref for callback to avoid dependency issues\n  const onDataChangeRef = React.useRef(onDataChange);\n  onDataChangeRef.current = onDataChange;\n  \n  React.useEffect(() => {\n    // Only call onDataChange if the data was actually changed by user interaction,\n    // not by prop updates from parent\n    if (onDataChangeRef.current && hasDataChangedRef.current && tableData !== initialDataRef.current) {\n      onDataChangeRef.current(tableData);\n    }\n    // Reset the flag after handling\n    hasDataChangedRef.current = false;\n  }, [tableData]); // Remove onDataChange from dependencies\n\n  // Track when data changes from props vs user interaction\n  React.useEffect(() => {\n    initialDataRef.current = data;\n    hasDataChangedRef.current = false;\n  }, [data]);\n\n  // Create columns with editing support\n  const columns = useMemo(() => {\n    // Columns are required - this is a truly generic component\n    if (!providedColumns || providedColumns.length === 0) {\n      throw new Error('ReusableAdvancedTable: columns prop is required. Please provide column definitions for your data structure.');\n    }\n    \n    return providedColumns;\n  }, [providedColumns]); // Remove handleDataUpdate from dependencies\n\n  // Performance optimizations\n  const { memoizedData, memoizedColumns } = useTablePerformance(\n    tableData,\n    columns,\n    enabled,\n    performanceConfig\n  );\n\n  // TanStack Table configuration\n  const table = useReactTable({\n    data: memoizedData,\n    columns: memoizedColumns,\n    state: {\n      sorting,\n      columnFilters,\n      rowSelection,\n      columnVisibility,\n      columnPinning,\n      grouping,\n      expanded,\n      globalFilter,\n    },\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onRowSelectionChange: setRowSelection,\n    onColumnVisibilityChange: setColumnVisibility,\n    onColumnPinningChange: setColumnPinning,\n    onGroupingChange: setGrouping,\n    onExpandedChange: setExpanded,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: enabled.filtering ? getFilteredRowModel() : undefined,\n    getSortedRowModel: enabled.sorting ? getSortedRowModel() : undefined,\n    getPaginationRowModel: enabled.pagination ? getPaginationRowModel() : undefined,\n    getGroupedRowModel: enabled.grouping ? getGroupedRowModel() : undefined,\n    getExpandedRowModel: enabled.rowExpansion ? getExpandedRowModel() : undefined,\n    enableSorting: enabled.sorting,\n    enableColumnFilters: enabled.filtering,\n    enableRowSelection: enabled.rowSelection,\n    enableColumnResizing: enabled.columnResizing,\n    enableColumnPinning: enabled.columnPinning,\n    enableGrouping: enabled.grouping,\n    enableExpanding: enabled.rowExpansion,\n    enableGlobalFilter: enabled.globalFiltering,\n    columnResizeMode: 'onChange' as ColumnResizeMode,\n    getSubRows: getSubRows,\n    meta: meta,\n    initialState: {\n      pagination: initialState.pagination || { pageIndex: 0, pageSize: 10 },\n    },\n  });\n\n  // Feature toggle function\n  function toggleFeature(feature: FeatureKey) {\n    const newEnabled = { ...enabled, [feature]: !enabled[feature] };\n    setEnabled(newEnabled);\n    onFeatureToggle?.(feature, newEnabled[feature]);\n  }\n\n  // Handle preset changes\n  const handlePresetChange = (newPreset: TablePreset) => {\n    setCurrentPreset(newPreset.name.toLowerCase());\n    setEnabled({\n      ...defaultFeatures,\n      ...newPreset.features,\n      ...features, // Props override preset\n    });\n    \n    if (newPreset.theme) {\n      if (newPreset.theme.variant) {\n        setThemeVariant(newPreset.theme.variant);\n      }\n      if (newPreset.theme.colorScheme) {\n        setColorScheme(newPreset.theme.colorScheme);\n      }\n    }\n  };\n\n  // Debounced handlers for better performance\n  const finalPerformanceConfig = presetConfig?.performanceConfig || performanceConfig;\n  const debounceDelay = finalPerformanceConfig.debounceDelay || 300;\n  const debouncedSetGlobalFilter = useDebounce(setGlobalFilter, debounceDelay);\n\n  // Grouping handlers\n  const handleGroupChange = (columnId: string) => {\n    setGrouping(prev => [...prev, columnId]);\n  };\n\n  const handleRemoveGroup = (columnId: string) => {\n    setGrouping(prev => prev.filter(id => id !== columnId));\n  };\n\n  // Use ref for state change callback to avoid dependency issues\n  const onStateChangeRef = React.useRef(onStateChange);\n  onStateChangeRef.current = onStateChange;\n  \n  // Notify parent of state changes\n  React.useEffect(() => {\n    if (onStateChangeRef.current) {\n      onStateChangeRef.current({\n        sorting,\n        columnFilters,\n        rowSelection,\n        columnVisibility,\n        columnPinning,\n        grouping,\n        expanded,\n        globalFilter,\n      });\n    }\n  }, [sorting, columnFilters, rowSelection, columnVisibility, columnPinning, grouping, expanded, globalFilter]); // Remove onStateChange from dependencies\n\n  return (\n    <div className={`flex flex-col gap-6 w-full ${className}`}>\n      {/* Controls Header */}\n      <div className=\"flex flex-wrap gap-4 items-start\">\n        {/* Preset Selector */}\n        {showPresetSelector && (\n          <div className=\"flex-1 min-w-64\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Table Preset\n            </label>\n            <PresetSelector\n              currentPreset={currentPreset}\n              onPresetChange={handlePresetChange}\n            />\n          </div>\n        )}\n        \n        {/* Theme Selector */}\n        {showThemeSelector && (\n          <div className=\"flex-1 min-w-48\">\n            <ThemeSelector\n              variant={themeVariant}\n              colorScheme={colorScheme}\n              onVariantChange={setThemeVariant}\n              onColorSchemeChange={setColorScheme}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Table Controls */}\n      {allowFeatureToggling && (\n        <TableControls\n          enabled={enabled}\n          onToggleFeature={toggleFeature}\n          table={table}\n          globalFilter={globalFilter}\n          onGlobalFilterChange={setGlobalFilter}\n          onDebouncedGlobalFilterChange={debouncedSetGlobalFilter}\n          rowSelection={rowSelection}\n          theme={themeOptions}\n        />\n      )}\n\n      {/* Grouping Controls */}\n      {enabled.grouping && (\n        <DragDropArea<T>\n          groupedColumns={grouping}\n          onGroupChange={handleGroupChange}\n          onRemoveGroup={handleRemoveGroup}\n          allColumns={table.getAllColumns()}\n        />\n      )}\n\n      {/* Table View */}\n      {enabled.virtualization ? (\n        <VirtualizedTableView \n          table={table} \n          features={enabled}\n          height={virtualization.height || 400}\n          rowHeight={virtualization.rowHeight || 35}\n          overscan={virtualization.overscan || 5}\n          theme={themeOptions}\n        />\n      ) : (\n        <EnhancedTableView \n          table={table} \n          features={enabled} \n          theme={themeOptions} \n        />\n      )}\n\n      {/* Pagination */}\n      {enabled.pagination && (\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <button\n              className=\"border rounded px-3 py-1 disabled:opacity-50 hover:bg-gray-50 dark:hover:bg-gray-800\"\n              onClick={() => table.setPageIndex(0)}\n              disabled={!table.getCanPreviousPage()}\n            >\n              {'<<'}\n            </button>\n            <button\n              className=\"border rounded px-3 py-1 disabled:opacity-50 hover:bg-gray-50 dark:hover:bg-gray-800\"\n              onClick={() => table.previousPage()}\n              disabled={!table.getCanPreviousPage()}\n            >\n              {'<'}\n            </button>\n            <button\n              className=\"border rounded px-3 py-1 disabled:opacity-50 hover:bg-gray-50 dark:hover:bg-gray-800\"\n              onClick={() => table.nextPage()}\n              disabled={!table.getCanNextPage()}\n            >\n              {'>'}\n            </button>\n            <button\n              className=\"border rounded px-3 py-1 disabled:opacity-50 hover:bg-gray-50 dark:hover:bg-gray-800\"\n              onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n              disabled={!table.getCanNextPage()}\n            >\n              {'>>'}\n            </button>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-sm\">\n              Page {table.getState().pagination.pageIndex + 1} of{' '}\n              {table.getPageCount()}\n            </span>\n            <select\n              value={table.getState().pagination.pageSize}\n              onChange={e => {\n                table.setPageSize(Number(e.target.value))\n              }}\n              className=\"border rounded px-2 py-1 text-sm\"\n            >\n              {[10, 20, 30, 40, 50].map(pageSize => (\n                <option key={pageSize} value={pageSize}>\n                  Show {pageSize}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Showing {table.getRowModel().rows.length} of{' '}\n            {table.getFilteredRowModel().rows.length} results\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import React from \"react\";\n\ninterface EditableCellProps {\n  initialValue: string;\n  depth: number;\n  onUpdate?: (value: string) => void;\n}\n\nconst EditableCellComponent: React.FC<EditableCellProps> = ({ \n  initialValue, \n  depth, \n  onUpdate \n}) => {\n  const [value, setValue] = React.useState(initialValue);\n  const [isEditing, setIsEditing] = React.useState(false);\n  \n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n  \n  const onBlur = () => {\n    setIsEditing(false);\n    onUpdate?.(value);\n  };\n  \n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      {isEditing ? (\n        <input\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onBlur={onBlur}\n          onKeyDown={(e) => e.key === 'Enter' && onBlur()}\n          className=\"w-full px-1 py-0.5 border rounded\"\n          autoFocus\n        />\n      ) : (\n        <span\n          onClick={() => setIsEditing(true)}\n          className=\"cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 px-1 py-0.5 rounded\"\n        >\n          {value}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Memoized version for better performance\nexport const EditableCell = React.memo(EditableCellComponent, (prevProps, nextProps) => {\n  return (\n    prevProps.initialValue === nextProps.initialValue &&\n    prevProps.depth === nextProps.depth &&\n    prevProps.onUpdate === nextProps.onUpdate\n  );\n});","import React from \"react\";\n\ninterface StatusCellProps {\n  value: string;\n  depth: number;\n}\n\nconst StatusCellComponent: React.FC<StatusCellProps> = ({ value, depth }) => {\n  const getStatusStyles = (status: string) => {\n    switch (status) {\n      case 'Single':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'Married':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'Divorced':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      <span className={`px-2 py-1 rounded text-xs ${getStatusStyles(value)}`}>\n        {value}\n      </span>\n    </div>\n  );\n};\n\n// Memoized version for better performance\nexport const StatusCell = React.memo(StatusCellComponent, (prevProps, nextProps) => {\n  return (\n    prevProps.value === nextProps.value &&\n    prevProps.depth === nextProps.depth\n  );\n});","import React from \"react\";\n\ninterface ProgressCellProps {\n  value: number;\n  depth: number;\n}\n\nconst ProgressCellComponent: React.FC<ProgressCellProps> = ({ value, depth }) => {\n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      <div className=\"flex items-center gap-2\">\n        <div className=\"w-20 bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n          <div \n            className=\"bg-blue-500 h-2 rounded-full transition-all\" \n            style={{ width: `${value}%` }}\n          />\n        </div>\n        <span className=\"text-xs\">{value}%</span>\n      </div>\n    </div>\n  );\n};\n\n// Memoized version for better performance\nexport const ProgressCell = React.memo(ProgressCellComponent, (prevProps, nextProps) => {\n  return (\n    prevProps.value === nextProps.value &&\n    prevProps.depth === nextProps.depth\n  );\n});","import React from \"react\";\n\ninterface DepartmentCellProps {\n  value: string;\n  depth: number;\n}\n\nconst DepartmentCellComponent: React.FC<DepartmentCellProps> = ({ value, depth }) => {\n  const getDepartmentStyles = (department: string) => {\n    switch (department) {\n      case 'Sales':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'Marketing':\n        return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200';\n      case 'Engineering':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'HR':\n        return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200';\n      case 'Finance':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      <span className={`px-2 py-1 rounded text-xs ${getDepartmentStyles(value)}`}>\n        {value}\n      </span>\n    </div>\n  );\n};\n\n// Memoized version for better performance\nexport const DepartmentCell = React.memo(DepartmentCellComponent, (prevProps, nextProps) => {\n  return (\n    prevProps.value === nextProps.value &&\n    prevProps.depth === nextProps.depth\n  );\n});","import React from \"react\";\n\ninterface RegionCellProps {\n  value: string;\n  depth: number;\n}\n\nconst RegionCellComponent: React.FC<RegionCellProps> = ({ value, depth }) => {\n  const getRegionStyles = (region: string) => {\n    switch (region) {\n      case 'North':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'South':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      case 'East':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'West':\n        return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      <span className={`px-2 py-1 rounded text-xs ${getRegionStyles(value)}`}>\n        {value}\n      </span>\n    </div>\n  );\n};\n\n// Memoized version for better performance\nexport const RegionCell = React.memo(RegionCellComponent, (prevProps, nextProps) => {\n  return (\n    prevProps.value === nextProps.value &&\n    prevProps.depth === nextProps.depth\n  );\n});","import React, { useState, useEffect, useRef, useCallback } from \"react\";\n\ninterface BaseEditableCellProps {\n  initialValue: any;\n  depth: number;\n  onUpdate?: (value: any) => void;\n  onKeyDown?: (e: React.KeyboardEvent) => void;\n}\n\n// Text input cell\nexport const EditableTextCell: React.FC<BaseEditableCellProps> = ({ \n  initialValue, \n  depth, \n  onUpdate,\n  onKeyDown\n}) => {\n  const [value, setValue] = useState(String(initialValue || ''));\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const spanRef = useRef<HTMLSpanElement>(null);\n  \n  useEffect(() => {\n    setValue(String(initialValue || ''));\n  }, [initialValue]);\n  \n  const handleSave = useCallback(() => {\n    setIsEditing(false);\n    onUpdate?.(value);\n  }, [value, onUpdate]);\n  \n  const handleCancel = useCallback(() => {\n    setIsEditing(false);\n    setValue(String(initialValue || ''));\n  }, [initialValue]);\n  \n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (isEditing) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        handleSave();\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        handleCancel();\n      } else if (e.key === 'Tab') {\n        handleSave();\n      }\n    } else {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        setIsEditing(true);\n      }\n    }\n    onKeyDown?.(e);\n  }, [isEditing, handleSave, handleCancel, onKeyDown]);\n  \n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [isEditing]);\n  \n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      {isEditing ? (\n        <input\n          ref={inputRef}\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onBlur={handleSave}\n          onKeyDown={handleKeyDown}\n          className=\"w-full px-1 py-0.5 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        />\n      ) : (\n        <span\n          ref={spanRef}\n          onClick={() => setIsEditing(true)}\n          onKeyDown={handleKeyDown}\n          className=\"cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 px-1 py-0.5 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 block\"\n          tabIndex={0}\n          role=\"button\"\n          aria-label={`Edit ${value}`}\n        >\n          {value || 'Click to edit'}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Number input cell\nexport const EditableNumberCell: React.FC<BaseEditableCellProps> = ({ \n  initialValue, \n  depth, \n  onUpdate,\n  onKeyDown\n}) => {\n  const [value, setValue] = useState(String(initialValue || ''));\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  \n  useEffect(() => {\n    setValue(String(initialValue || ''));\n  }, [initialValue]);\n  \n  const handleSave = useCallback(() => {\n    setIsEditing(false);\n    const numValue = parseFloat(value);\n    onUpdate?.(isNaN(numValue) ? initialValue : numValue);\n  }, [value, onUpdate, initialValue]);\n  \n  const handleCancel = useCallback(() => {\n    setIsEditing(false);\n    setValue(String(initialValue || ''));\n  }, [initialValue]);\n  \n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (isEditing) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        handleSave();\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        handleCancel();\n      } else if (e.key === 'Tab') {\n        handleSave();\n      }\n    } else {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        setIsEditing(true);\n      }\n    }\n    onKeyDown?.(e);\n  }, [isEditing, handleSave, handleCancel, onKeyDown]);\n  \n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [isEditing]);\n  \n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      {isEditing ? (\n        <input\n          ref={inputRef}\n          type=\"number\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onBlur={handleSave}\n          onKeyDown={handleKeyDown}\n          className=\"w-full px-1 py-0.5 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        />\n      ) : (\n        <span\n          onClick={() => setIsEditing(true)}\n          onKeyDown={handleKeyDown}\n          className=\"cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 px-1 py-0.5 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 block\"\n          tabIndex={0}\n          role=\"button\"\n          aria-label={`Edit ${value}`}\n        >\n          {value || 'Click to edit'}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Date input cell\nexport const EditableDateCell: React.FC<BaseEditableCellProps> = ({ \n  initialValue, \n  depth, \n  onUpdate,\n  onKeyDown\n}) => {\n  const [value, setValue] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  \n  useEffect(() => {\n    if (initialValue) {\n      const date = new Date(initialValue);\n      setValue(date.toISOString().split('T')[0]);\n    }\n  }, [initialValue]);\n  \n  const handleSave = useCallback(() => {\n    setIsEditing(false);\n    onUpdate?.(value ? new Date(value).toISOString() : initialValue);\n  }, [value, onUpdate, initialValue]);\n  \n  const handleCancel = useCallback(() => {\n    setIsEditing(false);\n    if (initialValue) {\n      const date = new Date(initialValue);\n      setValue(date.toISOString().split('T')[0]);\n    }\n  }, [initialValue]);\n  \n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (isEditing) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        handleSave();\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        handleCancel();\n      } else if (e.key === 'Tab') {\n        handleSave();\n      }\n    } else {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        setIsEditing(true);\n      }\n    }\n    onKeyDown?.(e);\n  }, [isEditing, handleSave, handleCancel, onKeyDown]);\n  \n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isEditing]);\n  \n  const displayValue = initialValue ? new Date(initialValue).toLocaleDateString() : 'No date';\n  \n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      {isEditing ? (\n        <input\n          ref={inputRef}\n          type=\"date\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onBlur={handleSave}\n          onKeyDown={handleKeyDown}\n          className=\"w-full px-1 py-0.5 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        />\n      ) : (\n        <span\n          onClick={() => setIsEditing(true)}\n          onKeyDown={handleKeyDown}\n          className=\"cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 px-1 py-0.5 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 block\"\n          tabIndex={0}\n          role=\"button\"\n          aria-label={`Edit ${displayValue}`}\n        >\n          {displayValue}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Select dropdown cell\nexport const EditableSelectCell: React.FC<BaseEditableCellProps & { \n  options: string[];\n  getOptionStyles?: (option: string) => string;\n}> = ({ \n  initialValue, \n  depth, \n  onUpdate,\n  onKeyDown,\n  options,\n  getOptionStyles\n}) => {\n  const [value, setValue] = useState(String(initialValue || ''));\n  const [isEditing, setIsEditing] = useState(false);\n  const selectRef = useRef<HTMLSelectElement>(null);\n  \n  useEffect(() => {\n    setValue(String(initialValue || ''));\n  }, [initialValue]);\n  \n  const handleSave = useCallback(() => {\n    setIsEditing(false);\n    onUpdate?.(value);\n  }, [value, onUpdate]);\n  \n  const handleCancel = useCallback(() => {\n    setIsEditing(false);\n    setValue(String(initialValue || ''));\n  }, [initialValue]);\n  \n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (isEditing) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        handleSave();\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        handleCancel();\n      } else if (e.key === 'Tab') {\n        handleSave();\n      }\n    } else {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        setIsEditing(true);\n      }\n    }\n    onKeyDown?.(e);\n  }, [isEditing, handleSave, handleCancel, onKeyDown]);\n  \n  useEffect(() => {\n    if (isEditing && selectRef.current) {\n      selectRef.current.focus();\n    }\n  }, [isEditing]);\n  \n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      {isEditing ? (\n        <select\n          ref={selectRef}\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onBlur={handleSave}\n          onKeyDown={handleKeyDown}\n          className=\"w-full px-1 py-0.5 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          {options.map(option => (\n            <option key={option} value={option}>{option}</option>\n          ))}\n        </select>\n      ) : (\n        <span\n          onClick={() => setIsEditing(true)}\n          onKeyDown={handleKeyDown}\n          className={`cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 px-2 py-1 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 block text-xs ${getOptionStyles?.(value) || ''}`}\n          tabIndex={0}\n          role=\"button\"\n          aria-label={`Edit ${value}`}\n        >\n          {value || 'Select option'}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Currency input cell\nexport const EditableCurrencyCell: React.FC<BaseEditableCellProps> = ({ \n  initialValue, \n  depth, \n  onUpdate,\n  onKeyDown\n}) => {\n  const [value, setValue] = useState(String(initialValue || ''));\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  \n  useEffect(() => {\n    setValue(String(initialValue || ''));\n  }, [initialValue]);\n  \n  const handleSave = useCallback(() => {\n    setIsEditing(false);\n    const numValue = parseFloat(value.replace(/[^0-9.-]/g, ''));\n    onUpdate?.(isNaN(numValue) ? initialValue : numValue);\n  }, [value, onUpdate, initialValue]);\n  \n  const handleCancel = useCallback(() => {\n    setIsEditing(false);\n    setValue(String(initialValue || ''));\n  }, [initialValue]);\n  \n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (isEditing) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        handleSave();\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        handleCancel();\n      } else if (e.key === 'Tab') {\n        handleSave();\n      }\n    } else {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        setIsEditing(true);\n      }\n    }\n    onKeyDown?.(e);\n  }, [isEditing, handleSave, handleCancel, onKeyDown]);\n  \n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [isEditing]);\n  \n  const displayValue = typeof initialValue === 'number' \n    ? `$${initialValue.toLocaleString()}` \n    : initialValue || '$0';\n  \n  return (\n    <div style={{ paddingLeft: `${depth * 20}px` }}>\n      {isEditing ? (\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onBlur={handleSave}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Enter amount\"\n          className=\"w-full px-1 py-0.5 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        />\n      ) : (\n        <span\n          onClick={() => setIsEditing(true)}\n          onKeyDown={handleKeyDown}\n          className=\"cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 px-1 py-0.5 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 block\"\n          tabIndex={0}\n          role=\"button\"\n          aria-label={`Edit ${displayValue}`}\n        >\n          {displayValue}\n        </span>\n      )}\n    </div>\n  );\n};","import React from \"react\";\nimport { ColumnDef, Table, Row } from \"@tanstack/react-table\";\nimport { \n  StatusCell, \n  ProgressCell, \n  DepartmentCell, \n  RegionCell \n} from \"./cells\";\nimport {\n  EditableTextCell,\n  EditableNumberCell,\n  EditableDateCell,\n  EditableSelectCell,\n  EditableCurrencyCell\n} from \"./cells/EnhancedEditableCell\";\n\nexport type FeatureKey = \n  | \"sorting\"\n  | \"filtering\"\n  | \"pagination\"\n  | \"rowSelection\"\n  | \"columnVisibility\"\n  | \"columnResizing\"\n  | \"columnPinning\"\n  | \"rowExpansion\"\n  | \"globalFiltering\"\n  | \"grouping\"\n  | \"inlineEditing\"\n  | \"pivoting\"\n  | \"virtualization\"\n  | \"exporting\";\n\nexport const createColumns = <T = any>(\n  features: Record<FeatureKey, boolean>,\n  onDataUpdate?: (rowIndex: number, columnId: string, value: any) => void\n): ColumnDef<T>[] => [\n  // Row selection column\n  ...(features.rowSelection ? [{\n    id: 'select',\n    header: ({ table }: { table: Table<T> }) => (\n      React.createElement('input', {\n        type: 'checkbox',\n        checked: table.getIsAllRowsSelected(),\n        onChange: table.getToggleAllRowsSelectedHandler()\n      })\n    ),\n    cell: ({ row }: { row: Row<T> }) => (\n      React.createElement('input', {\n        type: 'checkbox',\n        checked: row.getIsSelected(),\n        onChange: row.getToggleSelectedHandler()\n      })\n    ),\n  }] : []),\n  // Expand column\n  ...(features.rowExpansion ? [{\n    id: 'expand',\n    header: 'Expand',\n    cell: ({ row }: { row: Row<T> }) => (\n      row.getCanExpand() ? (\n        React.createElement('button', {\n          onClick: row.getToggleExpandedHandler(),\n          className: 'px-2 py-1 text-xs border rounded'\n        }, row.getIsExpanded() ? '▼' : '▶')\n      ) : null\n    ),\n  }] : []),\n  // Main data columns\n  {\n    accessorKey: \"firstName\",\n    header: \"First Name\",\n    footer: (info) => info.column.id,\n    enableGrouping: true,\n    cell: ({ getValue, row }) => {\n      const value = getValue() as string;\n      const depth = row.depth;\n      \n      return features.inlineEditing \n        ? React.createElement(EditableTextCell, { \n            initialValue: value, \n            depth: 0, // Remove depth padding for structured table\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'firstName', newValue);\n            }\n          })\n        : React.createElement('span', {}, value);\n    },\n  },\n  {\n    accessorKey: \"lastName\",\n    header: \"Last Name\",\n    footer: (info) => info.column.id,\n    enableGrouping: true,\n    cell: ({ getValue, row }) => {\n      const value = getValue() as string;\n      \n      return features.inlineEditing \n        ? React.createElement(EditableTextCell, { \n            initialValue: value, \n            depth: 0,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'lastName', newValue);\n            }\n          })\n        : React.createElement('span', {}, value);\n    },\n  },\n  {\n    accessorKey: \"age\",\n    header: \"Age\",\n    footer: (info) => info.column.id,\n    aggregationFn: 'mean',\n    enableGrouping: true,\n    cell: ({ getValue, row }) => {\n      const value = getValue() as number;\n      \n      return features.inlineEditing \n        ? React.createElement(EditableNumberCell, { \n            initialValue: value, \n            depth: 0,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'age', newValue);\n            }\n          })\n        : React.createElement('span', {}, value);\n    },\n  },\n  {\n    accessorKey: \"visits\",\n    header: \"Visits\",\n    footer: (info) => info.column.id,\n    aggregationFn: 'sum',\n    cell: ({ getValue, row }) => {\n      const value = getValue() as number;\n      \n      return features.inlineEditing \n        ? React.createElement(EditableNumberCell, { \n            initialValue: value, \n            depth: 0,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'visits', newValue);\n            }\n          })\n        : React.createElement('span', {}, value);\n    },\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    footer: (info) => info.column.id,\n    enableGrouping: true,\n    cell: ({ getValue, row }) => {\n      const value = getValue() as string;\n      const depth = row.depth;\n      const statusOptions = ['relationship', 'complicated', 'single'];\n      \n      const getStatusStyles = (status: string) => {\n        switch (status) {\n          case 'relationship':\n            return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n          case 'complicated':\n            return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n          case 'single':\n            return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n          default:\n            return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n        }\n      };\n      \n      return features.inlineEditing \n        ? React.createElement(EditableSelectCell, { \n            initialValue: value, \n            depth: 0,\n            options: statusOptions,\n            getOptionStyles: getStatusStyles,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'status', newValue);\n            }\n          })\n        : React.createElement(StatusCell, {\n            value: value,\n            depth: 0\n          });\n    },\n  },\n  {\n    accessorKey: \"progress\",\n    header: \"Profile Progress\",\n    footer: (info) => info.column.id,\n    aggregationFn: 'mean',\n    cell: ({ getValue, row }) => {\n      const value = getValue() as number;\n      \n      return features.inlineEditing \n        ? React.createElement(EditableNumberCell, { \n            initialValue: value, \n            depth: 0,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'progress', newValue);\n            }\n          })\n        : React.createElement(ProgressCell, {\n            value: value,\n            depth: 0\n          });\n    },\n  },\n  {\n    accessorKey: \"department\",\n    header: \"Department\",\n    footer: (info) => info.column.id,\n    enableGrouping: true,\n    cell: ({ getValue, row }) => {\n      const value = getValue() as string;\n      const depth = row.depth;\n      const departmentOptions = ['Sales', 'Marketing', 'Engineering', 'HR', 'Finance'];\n      \n      const getDepartmentStyles = (dept: string) => {\n        switch (dept) {\n          case 'Sales':\n            return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n          case 'Marketing':\n            return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200';\n          case 'Engineering':\n            return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n          case 'HR':\n            return 'bg-pink-100 text-pink-800 dark:bg-pink-900 dark:text-pink-200';\n          case 'Finance':\n            return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n          default:\n            return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n        }\n      };\n      \n      return features.inlineEditing \n        ? React.createElement(EditableSelectCell, { \n            initialValue: value, \n            depth: 0,\n            options: departmentOptions,\n            getOptionStyles: getDepartmentStyles,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'department', newValue);\n            }\n          })\n        : React.createElement(DepartmentCell, {\n            value: value,\n            depth: 0\n          });\n    },\n  },\n  {\n    accessorKey: \"region\",\n    header: \"Region\",\n    footer: (info) => info.column.id,\n    enableGrouping: true,\n    cell: ({ getValue, row }) => {\n      const value = getValue() as string;\n      const depth = row.depth;\n      const regionOptions = ['North', 'South', 'East', 'West'];\n      \n      const getRegionStyles = (region: string) => {\n        switch (region) {\n          case 'North':\n            return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n          case 'South':\n            return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n          case 'East':\n            return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n          case 'West':\n            return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200';\n          default:\n            return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n        }\n      };\n      \n      return features.inlineEditing \n        ? React.createElement(EditableSelectCell, { \n            initialValue: value, \n            depth: 0,\n            options: regionOptions,\n            getOptionStyles: getRegionStyles,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'region', newValue);\n            }\n          })\n        : React.createElement(RegionCell, {\n            value: value,\n            depth: 0\n          });\n    },\n  },\n  {\n    accessorKey: \"salary\",\n    header: \"Salary\",\n    footer: (info) => info.column.id,\n    aggregationFn: 'mean',\n    cell: ({ getValue, row }) => {\n      const value = getValue() as number;\n      \n      return features.inlineEditing \n        ? React.createElement(EditableCurrencyCell, { \n            initialValue: value, \n            depth: 0,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'salary', newValue);\n            }\n          })\n        : React.createElement('span', {}, `$${(value)?.toLocaleString() || 'N/A'}`);\n    },\n  },\n  {\n    accessorKey: \"performance\",\n    header: \"Performance\",\n    footer: (info) => info.column.id,\n    enableGrouping: true,\n    cell: ({ getValue, row }) => {\n      const value = getValue() as string;\n      const depth = row.depth;\n      const performanceOptions = ['Excellent', 'Good', 'Average', 'Poor'];\n      \n      const getPerformanceStyles = (performance: string) => {\n        switch (performance) {\n          case 'Excellent':\n            return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n          case 'Good':\n            return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n          case 'Average':\n            return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n          case 'Poor':\n            return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n          default:\n            return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n        }\n      };\n\n      return features.inlineEditing \n        ? React.createElement(EditableSelectCell, { \n            initialValue: value, \n            depth: 0,\n            options: performanceOptions,\n            getOptionStyles: getPerformanceStyles,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'performance', newValue);\n            }\n          })\n        : React.createElement('span', {\n            className: `px-2 py-1 rounded text-xs ${getPerformanceStyles(value)}`\n          }, value);\n    },\n  },\n  {\n    accessorKey: \"joinDate\",\n    header: \"Join Date\",\n    footer: (info) => info.column.id,\n    cell: ({ getValue, row }) => {\n      const value = getValue() as string;\n      \n      return features.inlineEditing \n        ? React.createElement(EditableDateCell, { \n            initialValue: value, \n            depth: 0,\n            onUpdate: (newValue) => {\n              onDataUpdate?.(row.index, 'joinDate', newValue);\n            }\n          })\n        : React.createElement('span', {}, value ? new Date(value).toLocaleDateString() : 'N/A');\n    },\n  },\n];","import { FeatureKey } from \"../components/column-definitions\";\nimport { TablePreset, PerformanceOptions } from \"../types/table-config\";\n\n// Re-export for backward compatibility\nexport type { TablePreset };\n\nexport const TABLE_PRESETS: Record<string, TablePreset> = {\n  'basic-table': {\n    name: 'Basic Table',\n    description: 'Essential features for most use cases - sorting, filtering, and pagination',\n    category: 'basic',\n    tags: ['sorting', 'filtering', 'pagination', 'beginner-friendly'],\n    recommendedDataSize: { min: 0, max: 1000 },\n    features: {\n      sorting: true,\n      filtering: true,\n      pagination: true,\n      rowSelection: false,\n      columnVisibility: false,\n      columnResizing: false,\n      columnPinning: false,\n      rowExpansion: false,\n      globalFiltering: false,\n      grouping: false,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: false,\n    },\n    performance: {\n      debounceDelay: 300,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n    }\n  },\n  \n  'data-grid': {\n    name: 'Data Grid',\n    description: 'Full-featured data grid with all capabilities enabled',\n    category: 'advanced',\n    tags: ['full-featured', 'enterprise', 'advanced', 'all-features'],\n    recommendedDataSize: { min: 100, max: 5000 },\n    features: {\n      sorting: true,\n      filtering: true,\n      pagination: true,\n      rowSelection: true,\n      columnVisibility: true,\n      columnResizing: true,\n      columnPinning: true,\n      rowExpansion: true,\n      globalFiltering: true,\n      grouping: true,\n      inlineEditing: true,\n      pivoting: false, // Keep pivoting disabled as it's complex\n      virtualization: false,\n      exporting: true,\n    },\n    performance: {\n      debounceDelay: 200,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n      rendering: {\n        enableBatchUpdates: true,\n        renderThrottle: 16,\n      }\n    }\n  },\n  \n  'simple-list': {\n    name: 'Simple List',\n    description: 'Minimal table for displaying simple data lists',\n    category: 'basic',\n    tags: ['minimal', 'simple', 'lightweight', 'read-only'],\n    recommendedDataSize: { min: 0, max: 500 },\n    features: {\n      sorting: false,\n      filtering: false,\n      pagination: false,\n      rowSelection: false,\n      columnVisibility: false,\n      columnResizing: false,\n      columnPinning: false,\n      rowExpansion: false,\n      globalFiltering: false,\n      grouping: false,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: false,\n    },\n    performance: {\n      debounceDelay: 0,\n      enableMemoization: false,\n      enablePerformanceLogging: false,\n    }\n  },\n  \n  'analytics-dashboard': {\n    name: 'Analytics Dashboard',\n    description: 'Optimized for analytics with grouping and aggregation features',\n    category: 'specialized',\n    tags: ['analytics', 'grouping', 'aggregation', 'dashboard'],\n    recommendedDataSize: { min: 500, max: 10000 },\n    features: {\n      sorting: true,\n      filtering: true,\n      pagination: true,\n      rowSelection: false,\n      columnVisibility: true,\n      columnResizing: true,\n      columnPinning: false,\n      rowExpansion: true,\n      globalFiltering: true,\n      grouping: true,\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: false,\n      exporting: true,\n    },\n    performance: {\n      debounceDelay: 250,\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n      rendering: {\n        enableBatchUpdates: true,\n        renderThrottle: 16,\n      }\n    }\n  },\n  \n  'editable-form': {\n    name: 'Editable Form',\n    description: 'Table optimized for inline editing and data entry',\n    category: 'specialized',\n    tags: ['editable', 'form', 'data-entry', 'inline-editing'],\n    recommendedDataSize: { min: 10, max: 1000 },\n    features: {\n      sorting: true,\n      filtering: true,\n      pagination: true,\n      rowSelection: true,\n      columnVisibility: false,\n      columnResizing: true,\n      columnPinning: false,\n      rowExpansion: false,\n      globalFiltering: true,\n      grouping: false,\n      inlineEditing: true,\n      pivoting: false,\n      virtualization: false,\n      exporting: false,\n    },\n    performance: {\n      debounceDelay: 500, // Longer debounce for editing\n      enableMemoization: true,\n      enablePerformanceLogging: false,\n    }\n  },\n\n  'large-dataset': {\n    name: 'Large Dataset',\n    description: 'Optimized for handling large datasets with virtualization and essential features',\n    category: 'performance',\n    tags: ['virtualization', 'large-data', 'performance', 'scalable'],\n    recommendedDataSize: { min: 5000, max: 100000 },\n    features: {\n      sorting: true,\n      filtering: true,\n      pagination: false, // Disable pagination when using virtualization\n      rowSelection: true,\n      columnVisibility: true,\n      columnResizing: true,\n      columnPinning: true,\n      rowExpansion: false,\n      globalFiltering: true,\n      grouping: false, // Disable grouping for better virtualization performance\n      inlineEditing: false,\n      pivoting: false,\n      virtualization: true,\n      exporting: true,\n    },\n    performance: {\n      debounceDelay: 100, // Faster debounce for large datasets\n      enableMemoization: true,\n      enablePerformanceLogging: true,\n      virtualizationThreshold: 1000,\n      virtualization: {\n        enabled: true,\n        rowHeight: 35,\n        overscan: 10,\n        containerHeight: 600,\n      },\n      memory: {\n        enableGCHints: true,\n        maxCachedRows: 2000,\n      },\n      rendering: {\n        enableBatchUpdates: true,\n        renderThrottle: 8, // Higher frequency for smooth scrolling\n      }\n    }\n  }\n};\n\nexport const getPreset = (presetName: string): TablePreset | undefined => {\n  return TABLE_PRESETS[presetName];\n};\n\nexport const getPresetNames = (): string[] => {\n  return Object.keys(TABLE_PRESETS);\n};\n\nexport const getPresetFeatures = (presetName: string): Record<FeatureKey, boolean> | undefined => {\n  const preset = getPreset(presetName);\n  return preset?.features;\n};","import { useState, useCallback } from \"react\";\nimport { FeatureKey } from \"../components/column-definitions\";\nimport { TABLE_PRESETS, TablePreset, getPreset, getPresetFeatures } from \"../config/presets\";\n\nexport interface UseTablePresetsReturn {\n  currentPreset: string | null;\n  availablePresets: Record<string, TablePreset>;\n  applyPreset: (presetName: string) => Record<FeatureKey, boolean> | null;\n  getCurrentPresetInfo: () => TablePreset | null;\n  isPresetActive: (presetName: string, currentFeatures: Record<FeatureKey, boolean>) => boolean;\n}\n\nexport function useTablePresets(): UseTablePresetsReturn {\n  const [currentPreset, setCurrentPreset] = useState<string | null>(null);\n\n  const applyPreset = useCallback((presetName: string): Record<FeatureKey, boolean> | null => {\n    const features = getPresetFeatures(presetName);\n    if (features) {\n      setCurrentPreset(presetName);\n      return features;\n    }\n    return null;\n  }, []);\n\n  const getCurrentPresetInfo = useCallback((): TablePreset | null => {\n    if (!currentPreset) return null;\n    return getPreset(currentPreset) || null;\n  }, [currentPreset]);\n\n  const isPresetActive = useCallback((\n    presetName: string, \n    currentFeatures: Record<FeatureKey, boolean>\n  ): boolean => {\n    const presetFeatures = getPresetFeatures(presetName);\n    if (!presetFeatures) return false;\n\n    // Check if all features match the preset\n    return Object.keys(presetFeatures).every(key => {\n      const featureKey = key as FeatureKey;\n      return currentFeatures[featureKey] === presetFeatures[featureKey];\n    });\n  }, []);\n\n  return {\n    currentPreset,\n    availablePresets: TABLE_PRESETS,\n    applyPreset,\n    getCurrentPresetInfo,\n    isPresetActive,\n  };\n}","/**\n * Sample data for testing and demonstration purposes.\n * This is generic sample data that can be used to test the table component.\n * You can replace this with your own data structure.\n */\nexport const defaultData = [\n  // Sales Team\n  {\n    firstName: \"Sarah\",\n    lastName: \"Johnson\",\n    age: 32,\n    visits: 245,\n    status: \"Married\",\n    progress: 85,\n    department: \"Sales\",\n    region: \"North\",\n    salary: 75000,\n    performance: \"Excellent\",\n    joinDate: \"2020-03-15\",\n    subRows: [\n      {\n        firstName: \"Mike\",\n        lastName: \"Johnson\",\n        age: 28,\n        visits: 120,\n        status: \"Single\",\n        progress: 70,\n        department: \"Sales\",\n        region: \"North\",\n        salary: 55000,\n        performance: \"Good\",\n        joinDate: \"2022-01-10\",\n      },\n    ],\n  },\n  {\n    firstName: \"David\",\n    lastName: \"Chen\",\n    age: 29,\n    visits: 180,\n    status: \"Single\",\n    progress: 92,\n    department: \"Sales\",\n    region: \"West\",\n    salary: 68000,\n    performance: \"Excellent\",\n    joinDate: \"2021-06-20\",\n  },\n  {\n    firstName: \"Lisa\",\n    lastName: \"Rodriguez\",\n    age: 35,\n    visits: 320,\n    status: \"Married\",\n    progress: 78,\n    department: \"Sales\",\n    region: \"South\",\n    salary: 82000,\n    performance: \"Good\",\n    joinDate: \"2019-09-05\",\n  },\n  // Marketing Team\n  {\n    firstName: \"Emma\",\n    lastName: \"Wilson\",\n    age: 27,\n    visits: 95,\n    status: \"Single\",\n    progress: 88,\n    department: \"Marketing\",\n    region: \"East\",\n    salary: 62000,\n    performance: \"Excellent\",\n    joinDate: \"2022-02-14\",\n  },\n  {\n    firstName: \"James\",\n    lastName: \"Brown\",\n    age: 31,\n    visits: 150,\n    status: \"Married\",\n    progress: 65,\n    department: \"Marketing\",\n    region: \"North\",\n    salary: 58000,\n    performance: \"Average\",\n    joinDate: \"2020-11-30\",\n  },\n  {\n    firstName: \"Maria\",\n    lastName: \"Garcia\",\n    age: 26,\n    visits: 110,\n    status: \"Single\",\n    progress: 95,\n    department: \"Marketing\",\n    region: \"West\",\n    salary: 65000,\n    performance: \"Excellent\",\n    joinDate: \"2023-01-08\",\n  },\n  // Engineering Team\n  {\n    firstName: \"Alex\",\n    lastName: \"Thompson\",\n    age: 34,\n    visits: 75,\n    status: \"Married\",\n    progress: 90,\n    department: \"Engineering\",\n    region: \"West\",\n    salary: 95000,\n    performance: \"Excellent\",\n    joinDate: \"2018-05-12\",\n    subRows: [\n      {\n        firstName: \"Ryan\",\n        lastName: \"Thompson\",\n        age: 24,\n        visits: 45,\n        status: \"Single\",\n        progress: 75,\n        department: \"Engineering\",\n        region: \"West\",\n        salary: 72000,\n        performance: \"Good\",\n        joinDate: \"2023-03-20\",\n      },\n    ],\n  },\n  {\n    firstName: \"Priya\",\n    lastName: \"Patel\",\n    age: 28,\n    visits: 60,\n    status: \"Single\",\n    progress: 87,\n    department: \"Engineering\",\n    region: \"East\",\n    salary: 88000,\n    performance: \"Excellent\",\n    joinDate: \"2021-08-15\",\n  },\n  {\n    firstName: \"Kevin\",\n    lastName: \"Lee\",\n    age: 30,\n    visits: 85,\n    status: \"Married\",\n    progress: 82,\n    department: \"Engineering\",\n    region: \"North\",\n    salary: 92000,\n    performance: \"Good\",\n    joinDate: \"2020-01-25\",\n  },\n  // HR Team\n  {\n    firstName: \"Jennifer\",\n    lastName: \"Davis\",\n    age: 38,\n    visits: 200,\n    status: \"Married\",\n    progress: 75,\n    department: \"HR\",\n    region: \"East\",\n    salary: 70000,\n    performance: \"Good\",\n    joinDate: \"2017-12-10\",\n  },\n  {\n    firstName: \"Robert\",\n    lastName: \"Miller\",\n    age: 45,\n    visits: 180,\n    status: \"Divorced\",\n    progress: 68,\n    department: \"HR\",\n    region: \"South\",\n    salary: 65000,\n    performance: \"Average\",\n    joinDate: \"2019-04-18\",\n  },\n  // Finance Team\n  {\n    firstName: \"Amanda\",\n    lastName: \"Taylor\",\n    age: 33,\n    visits: 140,\n    status: \"Married\",\n    progress: 91,\n    department: \"Finance\",\n    region: \"North\",\n    salary: 78000,\n    performance: \"Excellent\",\n    joinDate: \"2020-07-22\",\n  },\n  {\n    firstName: \"Daniel\",\n    lastName: \"Anderson\",\n    age: 29,\n    visits: 125,\n    status: \"Single\",\n    progress: 79,\n    department: \"Finance\",\n    region: \"South\",\n    salary: 71000,\n    performance: \"Good\",\n    joinDate: \"2021-10-05\",\n  },\n];","import {\n  getCoreRowModel,\n  getPaginationRowModel,\n  getFilteredRowModel,\n  getSortedRowModel,\n  getGroupedRowModel,\n  getExpandedRowModel,\n  useReactTable,\n  SortingState,\n  ColumnFiltersState,\n  RowSelectionState,\n  VisibilityState,\n  ColumnResizeMode,\n  ColumnPinningState,\n  GroupingState,\n  ExpandedState,\n  ColumnDef,\n} from \"@tanstack/react-table\";\nimport { useMemo, useState } from \"react\";\nimport { FeatureKey, createColumns } from \"../components/table-columns\";\nimport { getPresetFeatures } from \"../config/presets\";\nimport { TableMemoization, useTablePerformance, PerformanceConfig, useDebounce } from \"../utils/performance\";\nimport { AdvancedTableConfig, PerformanceOptions } from \"../types/table-config\";\n\ninterface UseAdvancedTableProps<T = any> {\n  data: T[];\n  columns?: ColumnDef<T>[];\n  initialFeatures?: Partial<Record<FeatureKey, boolean>>;\n  preset?: string;\n  performanceConfig?: Partial<PerformanceConfig>;\n  // New enhanced configuration support\n  config?: Partial<AdvancedTableConfig<T>>;\n}\n\n// Backward compatibility type alias\ntype LegacyPerformanceConfig = PerformanceConfig;\n\nexport function useAdvancedTable<T = any>({\n  data,\n  columns: customColumns,\n  initialFeatures = {},\n  preset,\n  performanceConfig,\n  config,\n}: UseAdvancedTableProps<T>) {\n  // Enhanced configuration support - merge config with individual props\n  const enhancedConfig = useMemo(() => {\n    if (config) {\n      return {\n        data: config.data || data,\n        columns: config.columns || customColumns,\n        preset: config.preset || preset,\n        features: config.features || initialFeatures,\n        performance: config.performance || performanceConfig,\n      };\n    }\n    return {\n      data,\n      columns: customColumns,\n      preset,\n      features: initialFeatures,\n      performance: performanceConfig,\n    };\n  }, [config, data, customColumns, preset, initialFeatures, performanceConfig]);\n\n\n\n  // Get preset features if preset is provided\n  const presetFeatures = enhancedConfig.preset ? getPresetFeatures(enhancedConfig.preset) : {};\n  \n  // Feature toggles state - apply preset first, then features from config, then defaults\n  const [enabled, setEnabled] = useState<Record<FeatureKey, boolean>>({\n    sorting: true,\n    filtering: true,\n    pagination: true,\n    rowSelection: false,\n    columnVisibility: false,\n    columnResizing: false,\n    columnPinning: false,\n    rowExpansion: false,\n    globalFiltering: false,\n    grouping: false,\n    inlineEditing: false,\n    pivoting: false,\n    virtualization: false,\n    exporting: true,\n    ...presetFeatures,\n    ...enhancedConfig.features,\n  });\n\n  // Table state management - support initial state from config\n  const initialState = config?.initialState || {};\n  const [sorting, setSorting] = useState<SortingState>(initialState.sorting || []);\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>(initialState.columnFilters || []);\n  const [rowSelection, setRowSelection] = useState<RowSelectionState>(initialState.rowSelection || {});\n  const [columnVisibility, setColumnVisibility] = useState<VisibilityState>(initialState.columnVisibility || {});\n  const [columnPinning, setColumnPinning] = useState<ColumnPinningState>(initialState.columnPinning || {});\n  const [grouping, setGrouping] = useState<GroupingState>(initialState.grouping || []);\n  const [expanded, setExpanded] = useState<ExpandedState>(initialState.expanded || {});\n  const [globalFilter, setGlobalFilter] = useState(initialState.globalFilter || '');\n\n  // Performance optimizations - use enhanced configuration data and performance settings\n  const finalData = enhancedConfig.data;\n  const finalColumns = enhancedConfig.columns || createColumns(enabled);\n  const finalPerformanceConfig = enhancedConfig.performance;\n\n  const { memoizedData, memoizedColumns, computedState } = useTablePerformance(\n    finalData,\n    finalColumns,\n    enabled,\n    finalPerformanceConfig\n  );\n\n  // Use memoized columns for better performance\n  const columns = memoizedColumns;\n\n  // TanStack Table configuration - use memoized data for better performance\n  const table = useReactTable({\n    data: memoizedData,\n    columns,\n    state: {\n      sorting,\n      columnFilters,\n      rowSelection,\n      columnVisibility,\n      columnPinning,\n      grouping,\n      expanded,\n      globalFilter,\n    },\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onRowSelectionChange: setRowSelection,\n    onColumnVisibilityChange: setColumnVisibility,\n    onColumnPinningChange: setColumnPinning,\n    onGroupingChange: setGrouping,\n    onExpandedChange: setExpanded,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: enabled.filtering ? getFilteredRowModel() : undefined,\n    getSortedRowModel: enabled.sorting ? getSortedRowModel() : undefined,\n    getPaginationRowModel: enabled.pagination ? getPaginationRowModel() : undefined,\n    getGroupedRowModel: enabled.grouping ? getGroupedRowModel() : undefined,\n    getExpandedRowModel: enabled.rowExpansion ? getExpandedRowModel() : undefined,\n    enableSorting: enabled.sorting,\n    enableColumnFilters: enabled.filtering,\n    enableRowSelection: enabled.rowSelection,\n    enableColumnResizing: enabled.columnResizing,\n    enableColumnPinning: enabled.columnPinning,\n    enableGrouping: enabled.grouping,\n    enableExpanding: enabled.rowExpansion,\n    enableGlobalFilter: enabled.globalFiltering,\n    columnResizeMode: 'onChange' as ColumnResizeMode,\n    getSubRows: (row: T) => (row as any).subRows,\n  });\n\n  // Feature toggle function - keep existing implementation\n  function toggleFeature(feature: FeatureKey) {\n    setEnabled((prev) => ({ ...prev, [feature]: !prev[feature] }));\n  }\n\n  // Debounced handlers for better performance - use enhanced config settings\n  const debounceDelay = finalPerformanceConfig?.debounceDelay || performanceConfig?.debounceDelay || 300;\n  const debouncedSetGlobalFilter = useDebounce(setGlobalFilter, debounceDelay);\n  const debouncedSetColumnFilters = useDebounce(setColumnFilters, debounceDelay);\n\n  // Grouping handlers - keep existing implementation\n  const handleGroupChange = (columnId: string) => {\n    setGrouping(prev => [...prev, columnId]);\n  };\n\n  const handleRemoveGroup = (columnId: string) => {\n    setGrouping(prev => prev.filter(id => id !== columnId));\n  };\n\n  // Return all the state and handlers needed by the component\n  return {\n    table,\n    features: enabled,\n    toggleFeature,\n    // Table state\n    sorting,\n    setSorting,\n    columnFilters,\n    setColumnFilters,\n    rowSelection,\n    setRowSelection,\n    columnVisibility,\n    setColumnVisibility,\n    columnPinning,\n    setColumnPinning,\n    grouping,\n    setGrouping,\n    expanded,\n    setExpanded,\n    globalFilter,\n    setGlobalFilter,\n    // Debounced handlers for performance\n    debouncedSetGlobalFilter,\n    debouncedSetColumnFilters,\n    // Grouping handlers\n    handleGroupChange,\n    handleRemoveGroup,\n    // Performance state\n    computedState,\n  };\n}","import { ColumnDef } from \"@tanstack/react-table\";\nimport {\n  AdvancedTableConfig,\n  ConfigValidationResult,\n  ConfigValidationError,\n  ConfigValidationWarning,\n  ConfigValidationSuggestion,\n  PerformanceOptions,\n  TablePreset,\n} from \"../types/table-config\";\nimport { FeatureKey } from \"../components/column-definitions\";\n\n/**\n * Validation error codes for programmatic handling\n */\nexport enum ValidationErrorCode {\n  MISSING_DATA = 'MISSING_DATA',\n  MISSING_COLUMNS = 'MISSING_COLUMNS',\n  INVALID_DATA_TYPE = 'INVALID_DATA_TYPE',\n  INVALID_COLUMNS_TYPE = 'INVALID_COLUMNS_TYPE',\n  MISSING_COLUMN_ID = 'MISSING_COLUMN_ID',\n  INVALID_PRESET = 'INVALID_PRESET',\n  INVALID_PERFORMANCE_CONFIG = 'INVALID_PERFORMANCE_CONFIG',\n  CONFLICTING_FEATURES = 'CONFLICTING_FEATURES',\n  INVALID_VIRTUALIZATION_CONFIG = 'INVALID_VIRTUALIZATION_CONFIG',\n  INVALID_THEME_CONFIG = 'INVALID_THEME_CONFIG',\n  INVALID_ACCESSIBILITY_CONFIG = 'INVALID_ACCESSIBILITY_CONFIG',\n  INVALID_EXPORT_CONFIG = 'INVALID_EXPORT_CONFIG',\n  CIRCULAR_DEPENDENCY = 'CIRCULAR_DEPENDENCY',\n}\n\n/**\n * Validation warning codes for programmatic handling\n */\nexport enum ValidationWarningCode {\n  EMPTY_DATA = 'EMPTY_DATA',\n  MISSING_COLUMN_HEADER = 'MISSING_COLUMN_HEADER',\n  LARGE_DATASET_WITHOUT_VIRTUALIZATION = 'LARGE_DATASET_WITHOUT_VIRTUALIZATION',\n  CONFLICTING_FEATURE_COMBINATION = 'CONFLICTING_FEATURE_COMBINATION',\n  PERFORMANCE_CONCERN = 'PERFORMANCE_CONCERN',\n  ACCESSIBILITY_CONCERN = 'ACCESSIBILITY_CONCERN',\n  DEPRECATED_CONFIG = 'DEPRECATED_CONFIG',\n  SUBOPTIMAL_CONFIG = 'SUBOPTIMAL_CONFIG',\n}\n\n/**\n * Configuration validation result interface\n */\nexport interface ValidationResult extends ConfigValidationResult {\n  /** Validation timestamp */\n  timestamp: Date;\n  \n  /** Configuration hash for caching */\n  configHash?: string;\n  \n  /** Validation performance metrics */\n  metrics?: {\n    validationTime: number;\n    rulesExecuted: number;\n  };\n}\n\n/**\n * Validation rule interface for extensible validation\n */\nexport interface ValidationRule<T = any> {\n  /** Rule identifier */\n  id: string;\n  \n  /** Rule description */\n  description: string;\n  \n  /** Rule category */\n  category: 'error' | 'warning' | 'suggestion';\n  \n  /** Rule priority */\n  priority: 'low' | 'medium' | 'high' | 'critical';\n  \n  /** Rule execution function */\n  validate: (config: AdvancedTableConfig<T>) => ValidationResult | null;\n  \n  /** Rule dependencies (other rules that must pass first) */\n  dependencies?: string[];\n  \n  /** Rule applicability condition */\n  condition?: (config: AdvancedTableConfig<T>) => boolean;\n}\n\n/**\n * Comprehensive configuration validator with extensible rule system\n */\nexport class ConfigValidator {\n  private static rules: Map<string, ValidationRule> = new Map();\n  private static cache: Map<string, ValidationResult> = new Map();\n  \n  /**\n   * Register a custom validation rule\n   */\n  static registerRule(rule: ValidationRule): void {\n    this.rules.set(rule.id, rule);\n  }\n  \n  /**\n   * Unregister a validation rule\n   */\n  static unregisterRule(ruleId: string): void {\n    this.rules.delete(ruleId);\n  }\n  \n  /**\n   * Get all registered rules\n   */\n  static getRules(): ValidationRule[] {\n    return Array.from(this.rules.values());\n  }\n  \n  /**\n   * Clear validation cache\n   */\n  static clearCache(): void {\n    this.cache.clear();\n  }\n  \n  /**\n   * Validate a table configuration with comprehensive checks\n   */\n  static validate<T = any>(config: AdvancedTableConfig<T>, options?: {\n    useCache?: boolean;\n    includeMetrics?: boolean;\n    ruleFilter?: (rule: ValidationRule) => boolean;\n  }): ValidationResult {\n    const startTime = performance.now();\n    const configHash = this.generateConfigHash(config);\n    \n    // Check cache if enabled\n    if (options?.useCache && this.cache.has(configHash)) {\n      const cached = this.cache.get(configHash)!;\n      return { ...cached, timestamp: new Date() };\n    }\n    \n    const errors: ConfigValidationError[] = [];\n    const warnings: ConfigValidationWarning[] = [];\n    const suggestions: ConfigValidationSuggestion[] = [];\n    let rulesExecuted = 0;\n    \n    // Execute built-in validation rules\n    this.validateRequired(config, errors);\n    this.validateDataStructure(config, errors, warnings);\n    this.validateColumns(config, errors, warnings);\n    this.validateFeatures(config, errors, warnings, suggestions);\n    this.validatePerformance(config, warnings, suggestions);\n    this.validateAccessibility(config, warnings, suggestions);\n    this.validateTheme(config, warnings);\n    this.validateExport(config, warnings);\n    this.validatePreset(config, errors, warnings);\n    \n    rulesExecuted += 9; // Built-in rules count\n    \n    // Execute custom rules\n    const applicableRules = Array.from(this.rules.values())\n      .filter(rule => !options?.ruleFilter || options.ruleFilter(rule))\n      .filter(rule => !rule.condition || rule.condition(config));\n    \n    for (const rule of applicableRules) {\n      try {\n        const ruleResult = rule.validate(config);\n        if (ruleResult) {\n          errors.push(...ruleResult.errors);\n          warnings.push(...ruleResult.warnings);\n          suggestions.push(...ruleResult.suggestions);\n        }\n        rulesExecuted++;\n      } catch (error) {\n        console.warn(`Validation rule '${rule.id}' failed:`, error);\n      }\n    }\n    \n    const endTime = performance.now();\n    const result: ValidationResult = {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n      suggestions,\n      timestamp: new Date(),\n      configHash,\n      ...(options?.includeMetrics && {\n        metrics: {\n          validationTime: endTime - startTime,\n          rulesExecuted,\n        },\n      }),\n    };\n    \n    // Cache result if enabled\n    if (options?.useCache) {\n      this.cache.set(configHash, result);\n    }\n    \n    return result;\n  }\n  \n  /**\n   * Quick validation check - returns only boolean result\n   */\n  static isValid<T = any>(config: AdvancedTableConfig<T>): boolean {\n    return this.validate(config, { useCache: true }).isValid;\n  }\n  \n  /**\n   * Get only validation errors\n   */\n  static getErrors<T = any>(config: AdvancedTableConfig<T>): ConfigValidationError[] {\n    return this.validate(config, { useCache: true }).errors;\n  }\n  \n  /**\n   * Get only validation warnings\n   */\n  static getWarnings<T = any>(config: AdvancedTableConfig<T>): ConfigValidationWarning[] {\n    return this.validate(config, { useCache: true }).warnings;\n  }\n  \n  /**\n   * Get only validation suggestions\n   */\n  static getSuggestions<T = any>(config: AdvancedTableConfig<T>): ConfigValidationSuggestion[] {\n    return this.validate(config, { useCache: true }).suggestions;\n  }\n  \n  /**\n   * Validate required fields\n   */\n  private static validateRequired<T>(\n    config: AdvancedTableConfig<T>,\n    errors: ConfigValidationError[]\n  ): void {\n    if (!config.data) {\n      errors.push({\n        code: ValidationErrorCode.MISSING_DATA,\n        message: 'Data is required for table configuration',\n        path: 'data',\n        fix: 'Provide an array of data objects: { data: [{ ... }] }',\n      });\n    }\n    \n    if (!config.columns) {\n      errors.push({\n        code: ValidationErrorCode.MISSING_COLUMNS,\n        message: 'Columns are required for table configuration',\n        path: 'columns',\n        fix: 'Provide an array of column definitions: { columns: [{ id: \"...\", header: \"...\" }] }',\n      });\n    }\n  }\n  \n  /**\n   * Validate data structure and types\n   */\n  private static validateDataStructure<T>(\n    config: AdvancedTableConfig<T>,\n    errors: ConfigValidationError[],\n    warnings: ConfigValidationWarning[]\n  ): void {\n    if (config.data) {\n      if (!Array.isArray(config.data)) {\n        errors.push({\n          code: ValidationErrorCode.INVALID_DATA_TYPE,\n          message: 'Data must be an array',\n          path: 'data',\n          fix: 'Ensure data is an array: { data: [...] }',\n        });\n      } else if (config.data.length === 0) {\n        warnings.push({\n          code: ValidationWarningCode.EMPTY_DATA,\n          message: 'Data array is empty - table will show no content',\n          path: 'data',\n          suggestion: 'Consider providing sample data or an empty state component',\n        });\n      }\n    }\n    \n    if (config.columns) {\n      if (!Array.isArray(config.columns)) {\n        errors.push({\n          code: ValidationErrorCode.INVALID_COLUMNS_TYPE,\n          message: 'Columns must be an array',\n          path: 'columns',\n          fix: 'Ensure columns is an array: { columns: [...] }',\n        });\n      } else if (config.columns.length === 0) {\n        errors.push({\n          code: ValidationErrorCode.MISSING_COLUMNS,\n          message: 'At least one column definition is required',\n          path: 'columns',\n          fix: 'Add at least one column definition',\n        });\n      }\n    }\n  }\n  \n  /**\n   * Validate column definitions\n   */\n  private static validateColumns<T>(\n    config: AdvancedTableConfig<T>,\n    errors: ConfigValidationError[],\n    warnings: ConfigValidationWarning[]\n  ): void {\n    if (!config.columns || !Array.isArray(config.columns)) return;\n    \n    config.columns.forEach((column, index) => {\n      const columnPath = `columns[${index}]`;\n      \n      // Check for required identifiers\n      if (!column.id && !(column as any).accessorKey && !(column as any).accessorFn) {\n        errors.push({\n          code: ValidationErrorCode.MISSING_COLUMN_ID,\n          message: `Column at index ${index} is missing identifier`,\n          path: columnPath,\n          fix: 'Provide either id, accessorKey, or accessorFn: { id: \"columnId\" } or { accessorKey: \"dataProperty\" }',\n        });\n      }\n      \n      // Check for headers (UX warning)\n      if (!column.header) {\n        warnings.push({\n          code: ValidationWarningCode.MISSING_COLUMN_HEADER,\n          message: `Column at index ${index} is missing header`,\n          path: `${columnPath}.header`,\n          suggestion: 'Provide a header for better user experience: { header: \"Column Title\" }',\n        });\n      }\n      \n      // Check for duplicate IDs\n      const columnId = column.id || (column as any).accessorKey;\n      if (columnId) {\n        const duplicates = config.columns.filter((col, idx) => \n          idx !== index && (col.id === columnId || (col as any).accessorKey === columnId)\n        );\n        \n        if (duplicates.length > 0) {\n          errors.push({\n            code: ValidationErrorCode.MISSING_COLUMN_ID,\n            message: `Duplicate column identifier '${columnId}' found`,\n            path: columnPath,\n            fix: 'Ensure all column identifiers are unique',\n          });\n        }\n      }\n    });\n  }\n  \n  /**\n   * Validate feature configurations\n   */\n  private static validateFeatures<T>(\n    config: AdvancedTableConfig<T>,\n    errors: ConfigValidationError[],\n    warnings: ConfigValidationWarning[],\n    suggestions: ConfigValidationSuggestion[]\n  ): void {\n    if (!config.features) return;\n    \n    // Check for conflicting features\n    if (config.features.virtualization && config.features.pagination) {\n      warnings.push({\n        code: ValidationWarningCode.CONFLICTING_FEATURE_COMBINATION,\n        message: 'Virtualization and pagination should not be used together',\n        path: 'features',\n        suggestion: 'Disable pagination when using virtualization for better performance',\n      });\n    }\n    \n    // Check for grouping with virtualization\n    if (config.features.virtualization && config.features.grouping) {\n      warnings.push({\n        code: ValidationWarningCode.CONFLICTING_FEATURE_COMBINATION,\n        message: 'Virtualization with grouping may cause performance issues',\n        path: 'features',\n        suggestion: 'Consider disabling grouping or virtualization for better performance',\n      });\n    }\n    \n    // Suggest features for large datasets\n    if (config.data && config.data.length > 1000) {\n      if (!config.features.virtualization) {\n        suggestions.push({\n          type: 'performance',\n          message: 'Consider enabling virtualization for large datasets (>1000 rows)',\n          path: 'features.virtualization',\n          priority: 'high',\n        });\n      }\n      \n      if (!config.features.pagination) {\n        suggestions.push({\n          type: 'performance',\n          message: 'Consider enabling pagination for large datasets',\n          path: 'features.pagination',\n          priority: 'medium',\n        });\n      }\n    }\n  }\n  \n  /**\n   * Validate performance configuration\n   */\n  private static validatePerformance<T>(\n    config: AdvancedTableConfig<T>,\n    warnings: ConfigValidationWarning[],\n    suggestions: ConfigValidationSuggestion[]\n  ): void {\n    const perf = config.performance;\n    if (!perf) return;\n    \n    // Validate virtualization settings\n    if (perf.virtualization?.enabled) {\n      if (!perf.virtualization.rowHeight || perf.virtualization.rowHeight <= 0) {\n        warnings.push({\n          code: ValidationWarningCode.PERFORMANCE_CONCERN,\n          message: 'Invalid row height for virtualization',\n          path: 'performance.virtualization.rowHeight',\n          suggestion: 'Provide a positive row height value (e.g., 35)',\n        });\n      }\n      \n      if (perf.virtualization.overscan && perf.virtualization.overscan < 0) {\n        warnings.push({\n          code: ValidationWarningCode.PERFORMANCE_CONCERN,\n          message: 'Overscan value should be non-negative',\n          path: 'performance.virtualization.overscan',\n          suggestion: 'Use a non-negative overscan value (e.g., 5)',\n        });\n      }\n    }\n    \n    // Validate debounce settings\n    if (perf.debounceDelay && perf.debounceDelay < 0) {\n      warnings.push({\n        code: ValidationWarningCode.PERFORMANCE_CONCERN,\n        message: 'Debounce delay should be non-negative',\n        path: 'performance.debounceDelay',\n        suggestion: 'Use a non-negative debounce delay (e.g., 300)',\n      });\n    }\n    \n    // Performance suggestions\n    if (config.data && config.data.length > 500 && !perf.enableMemoization) {\n      suggestions.push({\n        type: 'performance',\n        message: 'Consider enabling memoization for better performance with medium-large datasets',\n        path: 'performance.enableMemoization',\n        priority: 'medium',\n      });\n    }\n  }\n  \n  /**\n   * Validate accessibility configuration\n   */\n  private static validateAccessibility<T>(\n    config: AdvancedTableConfig<T>,\n    warnings: ConfigValidationWarning[],\n    suggestions: ConfigValidationSuggestion[]\n  ): void {\n    const a11y = config.accessibility;\n    \n    if (!a11y?.ariaLabel && !a11y?.ariaDescription) {\n      suggestions.push({\n        type: 'accessibility',\n        message: 'Consider adding ARIA labels for better screen reader support',\n        path: 'accessibility.ariaLabel',\n        priority: 'medium',\n      });\n    }\n    \n    if (a11y?.keyboardNavigation === false) {\n      warnings.push({\n        code: ValidationWarningCode.ACCESSIBILITY_CONCERN,\n        message: 'Disabling keyboard navigation reduces accessibility',\n        path: 'accessibility.keyboardNavigation',\n        suggestion: 'Keep keyboard navigation enabled for better accessibility',\n      });\n    }\n    \n    if (a11y?.screenReaderAnnouncements === false) {\n      suggestions.push({\n        type: 'accessibility',\n        message: 'Screen reader announcements improve accessibility for dynamic content',\n        path: 'accessibility.screenReaderAnnouncements',\n        priority: 'medium',\n      });\n    }\n  }\n  \n  /**\n   * Validate theme configuration\n   */\n  private static validateTheme<T>(\n    config: AdvancedTableConfig<T>,\n    warnings: ConfigValidationWarning[]\n  ): void {\n    const theme = config.theme;\n    if (!theme) return;\n    \n    // Validate color scheme\n    if (theme.colorScheme && !['light', 'dark', 'auto'].includes(theme.colorScheme)) {\n      warnings.push({\n        code: ValidationWarningCode.SUBOPTIMAL_CONFIG,\n        message: 'Invalid color scheme value',\n        path: 'theme.colorScheme',\n        suggestion: 'Use \"light\", \"dark\", or \"auto\"',\n      });\n    }\n    \n    // Validate variant\n    const validVariants = ['default', 'minimal', 'enterprise', 'compact', 'spacious'];\n    if (theme.variant && !validVariants.includes(theme.variant)) {\n      warnings.push({\n        code: ValidationWarningCode.SUBOPTIMAL_CONFIG,\n        message: 'Invalid theme variant',\n        path: 'theme.variant',\n        suggestion: `Use one of: ${validVariants.join(', ')}`,\n      });\n    }\n  }\n  \n  /**\n   * Validate export configuration\n   */\n  private static validateExport<T>(\n    config: AdvancedTableConfig<T>,\n    warnings: ConfigValidationWarning[]\n  ): void {\n    const exportConfig = config.export;\n    if (!exportConfig) return;\n    \n    // Validate CSV settings\n    if (exportConfig.csv?.enabled && exportConfig.csv.delimiter) {\n      if (exportConfig.csv.delimiter.length !== 1) {\n        warnings.push({\n          code: ValidationWarningCode.SUBOPTIMAL_CONFIG,\n          message: 'CSV delimiter should be a single character',\n          path: 'export.csv.delimiter',\n          suggestion: 'Use a single character like \",\" or \";\"',\n        });\n      }\n    }\n    \n    // Validate print settings\n    if (exportConfig.print?.enabled && exportConfig.print.paperSize) {\n      const validSizes = ['A4', 'letter', 'legal'];\n      if (!validSizes.includes(exportConfig.print.paperSize)) {\n        warnings.push({\n          code: ValidationWarningCode.SUBOPTIMAL_CONFIG,\n          message: 'Invalid paper size for print export',\n          path: 'export.print.paperSize',\n          suggestion: `Use one of: ${validSizes.join(', ')}`,\n        });\n      }\n    }\n  }\n  \n  /**\n   * Validate preset configuration\n   */\n  private static validatePreset<T>(\n    config: AdvancedTableConfig<T>,\n    errors: ConfigValidationError[],\n    warnings: ConfigValidationWarning[]\n  ): void {\n    if (!config.preset) return;\n    \n    // This would typically check against available presets\n    // For now, we'll validate the preset name format\n    if (typeof config.preset !== 'string' || config.preset.trim().length === 0) {\n      errors.push({\n        code: ValidationErrorCode.INVALID_PRESET,\n        message: 'Preset name must be a non-empty string',\n        path: 'preset',\n        fix: 'Provide a valid preset name like \"basic-table\" or \"data-grid\"',\n      });\n    }\n  }\n  \n  /**\n   * Generate a hash for configuration caching\n   */\n  private static generateConfigHash<T>(config: AdvancedTableConfig<T>): string {\n    // Simple hash generation for caching purposes\n    const configString = JSON.stringify({\n      dataLength: config.data?.length || 0,\n      columnsLength: config.columns?.length || 0,\n      preset: config.preset,\n      features: config.features,\n      performance: config.performance,\n      theme: config.theme,\n      accessibility: config.accessibility,\n      export: config.export,\n    });\n    \n    let hash = 0;\n    for (let i = 0; i < configString.length; i++) {\n      const char = configString.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    \n    return hash.toString(36);\n  }\n}\n\n/**\n * Built-in validation rules that can be extended\n */\nexport const BuiltInValidationRules = {\n  /**\n   * Rule to check for required fields\n   */\n  REQUIRED_FIELDS: {\n    id: 'required-fields',\n    description: 'Validates that required configuration fields are present',\n    category: 'error' as const,\n    priority: 'critical' as const,\n    validate: <T>(config: AdvancedTableConfig<T>) => {\n      const errors: ConfigValidationError[] = [];\n      \n      if (!config.data) {\n        errors.push({\n          code: ValidationErrorCode.MISSING_DATA,\n          message: 'Data is required',\n          path: 'data',\n          fix: 'Provide data array',\n        });\n      }\n      \n      if (!config.columns) {\n        errors.push({\n          code: ValidationErrorCode.MISSING_COLUMNS,\n          message: 'Columns are required',\n          path: 'columns',\n          fix: 'Provide columns array',\n        });\n      }\n      \n      return {\n        isValid: errors.length === 0,\n        errors,\n        warnings: [],\n        suggestions: [],\n        timestamp: new Date(),\n      };\n    },\n  },\n  \n  /**\n   * Rule to check for performance optimizations\n   */\n  PERFORMANCE_OPTIMIZATION: {\n    id: 'performance-optimization',\n    description: 'Suggests performance optimizations based on data size',\n    category: 'suggestion' as const,\n    priority: 'medium' as const,\n    validate: <T>(config: AdvancedTableConfig<T>) => {\n      const suggestions: ConfigValidationSuggestion[] = [];\n      \n      if (config.data && config.data.length > 1000 && !config.features?.virtualization) {\n        suggestions.push({\n          type: 'performance',\n          message: 'Enable virtualization for large datasets',\n          path: 'features.virtualization',\n          priority: 'high',\n        });\n      }\n      \n      return {\n        isValid: true,\n        errors: [],\n        warnings: [],\n        suggestions,\n        timestamp: new Date(),\n      };\n    },\n  },\n} as const;\n\n// Register built-in rules\nObject.values(BuiltInValidationRules).forEach(rule => {\n  ConfigValidator.registerRule(rule);\n});\n\n/**\n * Utility functions for validation\n */\nexport const ValidationUtils = {\n  /**\n   * Create a validation error\n   */\n  createError(\n    code: ValidationErrorCode | string,\n    message: string,\n    path: string,\n    fix?: string\n  ): ConfigValidationError {\n    return { code, message, path, fix };\n  },\n  \n  /**\n   * Create a validation warning\n   */\n  createWarning(\n    code: ValidationWarningCode | string,\n    message: string,\n    path: string,\n    suggestion?: string\n  ): ConfigValidationWarning {\n    return { code, message, path, suggestion };\n  },\n  \n  /**\n   * Create a validation suggestion\n   */\n  createSuggestion(\n    type: ConfigValidationSuggestion['type'],\n    message: string,\n    priority: ConfigValidationSuggestion['priority'],\n    path?: string\n  ): ConfigValidationSuggestion {\n    return { type, message, priority, path };\n  },\n  \n  /**\n   * Format validation results for display\n   */\n  formatResults(result: ValidationResult): string {\n    const lines: string[] = [];\n    \n    if (result.errors.length > 0) {\n      lines.push('❌ Errors:');\n      result.errors.forEach(error => {\n        lines.push(`  • ${error.message} (${error.path})`);\n        if (error.fix) {\n          lines.push(`    Fix: ${error.fix}`);\n        }\n      });\n    }\n    \n    if (result.warnings.length > 0) {\n      lines.push('⚠️  Warnings:');\n      result.warnings.forEach(warning => {\n        lines.push(`  • ${warning.message} (${warning.path})`);\n        if (warning.suggestion) {\n          lines.push(`    Suggestion: ${warning.suggestion}`);\n        }\n      });\n    }\n    \n    if (result.suggestions.length > 0) {\n      lines.push('💡 Suggestions:');\n      result.suggestions.forEach(suggestion => {\n        lines.push(`  • ${suggestion.message} [${suggestion.priority}]`);\n      });\n    }\n    \n    if (result.isValid && result.errors.length === 0 && result.warnings.length === 0) {\n      lines.push('✅ Configuration is valid');\n    }\n    \n    return lines.join('\\n');\n  },\n};","import React from \"react\";\nimport { ColumnDef } from \"@tanstack/react-table\";\n\nexport type ColumnType = \n  | \"text\" \n  | \"number\" \n  | \"date\" \n  | \"boolean\" \n  | \"currency\" \n  | \"percentage\" \n  | \"email\" \n  | \"url\" \n  | \"select\" \n  | \"multiselect\"\n  | \"custom\";\n\nexport interface ColumnConfig<T = any> {\n  /** Column key/accessor */\n  key: keyof T | string;\n  \n  /** Column header display name */\n  header: string;\n  \n  /** Column type for automatic formatting */\n  type?: ColumnType;\n  \n  /** Whether column is sortable */\n  sortable?: boolean;\n  \n  /** Whether column is filterable */\n  filterable?: boolean;\n  \n  /** Whether column is resizable */\n  resizable?: boolean;\n  \n  /** Whether column can be hidden */\n  hideable?: boolean;\n  \n  /** Initial column width */\n  width?: number;\n  \n  /** Minimum column width */\n  minWidth?: number;\n  \n  /** Maximum column width */\n  maxWidth?: number;\n  \n  /** Aggregation function for grouping */\n  aggregationFn?: 'sum' | 'count' | 'min' | 'max' | 'mean' | 'median';\n  \n  /** Custom cell renderer */\n  cell?: (props: { value: any; row: T; column: any }) => React.ReactNode;\n  \n  /** Custom header renderer */\n  headerCell?: (props: { column: any }) => React.ReactNode;\n  \n  /** Options for select/multiselect columns */\n  options?: Array<{ value: any; label: string; color?: string }>;\n  \n  /** Format function for display */\n  format?: (value: any) => string;\n  \n  /** CSS classes for the column */\n  className?: string;\n  \n  /** Whether column should be pinned */\n  pinned?: 'left' | 'right';\n  \n  /** Custom styles */\n  style?: React.CSSProperties;\n}\n\n/**\n * Helper function to create TanStack Table columns from simplified configuration\n */\nexport function createColumnDef<T = any>(config: ColumnConfig<T>): ColumnDef<T> {\n  const {\n    key,\n    header,\n    type = \"text\",\n    sortable = true,\n    filterable = true,\n    resizable = true,\n    width,\n    minWidth,\n    maxWidth,\n    aggregationFn,\n    cell,\n    headerCell,\n    options = [],\n    format,\n    className,\n    style,\n  } = config;\n\n  const columnDef: ColumnDef<T> = {\n    accessorKey: key as string,\n    header: headerCell ? headerCell : header,\n    enableSorting: sortable,\n    enableColumnFilter: filterable,\n    enableResizing: resizable,\n    size: width,\n    minSize: minWidth,\n    maxSize: maxWidth,\n    aggregationFn: aggregationFn as any,\n  };\n\n  // Custom cell renderer or auto-generate based on type\n  if (cell) {\n    columnDef.cell = ({ getValue, row, column }) => \n      cell({ value: getValue(), row: row.original, column });\n  } else {\n    columnDef.cell = ({ getValue }) => {\n      const value = getValue();\n      return createCellRenderer(type, value, options, format, className, style);\n    };\n  }\n\n  return columnDef;\n}\n\n/**\n * Auto-generate cell renderer based on column type\n */\nfunction createCellRenderer(\n  type: ColumnType,\n  value: any,\n  options: Array<{ value: any; label: string; color?: string }>,\n  format?: (value: any) => string,\n  className?: string,\n  style?: React.CSSProperties\n): React.ReactNode {\n  if (value == null) {\n    return React.createElement('span', { className: 'text-gray-400' }, 'N/A');\n  }\n\n  // Use custom format function if provided\n  if (format) {\n    return React.createElement('span', { className, style }, format(value));\n  }\n\n  const baseProps = { className, style };\n\n  switch (type) {\n    case \"text\":\n      return React.createElement('span', baseProps, String(value));\n\n    case \"number\":\n      return React.createElement('span', baseProps, Number(value).toLocaleString());\n\n    case \"currency\":\n      return React.createElement('span', baseProps, \n        new Intl.NumberFormat('en-US', { \n          style: 'currency', \n          currency: 'USD' \n        }).format(Number(value))\n      );\n\n    case \"percentage\":\n      return React.createElement('span', baseProps, `${Number(value)}%`);\n\n    case \"date\":\n      const date = new Date(value);\n      return React.createElement('span', baseProps, \n        isNaN(date.getTime()) ? 'Invalid Date' : date.toLocaleDateString()\n      );\n\n    case \"boolean\":\n      return React.createElement('span', {\n        ...baseProps,\n        className: `px-2 py-1 rounded text-xs ${value ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'} ${className || ''}`\n      }, value ? 'Yes' : 'No');\n\n    case \"email\":\n      return React.createElement('a', {\n        ...baseProps,\n        href: `mailto:${value}`,\n        className: `text-blue-600 hover:underline ${className || ''}`\n      }, String(value));\n\n    case \"url\":\n      return React.createElement('a', {\n        ...baseProps,\n        href: String(value),\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        className: `text-blue-600 hover:underline ${className || ''}`\n      }, String(value));\n\n    case \"select\":\n      const option = options.find(opt => opt.value === value);\n      const optionLabel = option?.label || String(value);\n      const optionColor = option?.color;\n      \n      return React.createElement('span', {\n        ...baseProps,\n        className: `px-2 py-1 rounded text-xs ${optionColor || 'bg-gray-100 text-gray-800'} ${className || ''}`\n      }, optionLabel);\n\n    case \"multiselect\":\n      if (!Array.isArray(value)) return React.createElement('span', baseProps, 'N/A');\n      \n      return React.createElement('div', { className: 'flex flex-wrap gap-1' },\n        value.map((item, index) => {\n          const option = options.find(opt => opt.value === item);\n          const optionLabel = option?.label || String(item);\n          const optionColor = option?.color;\n          \n          return React.createElement('span', {\n            key: index,\n            className: `px-1 py-0.5 rounded text-xs ${optionColor || 'bg-gray-100 text-gray-800'}`\n          }, optionLabel);\n        })\n      );\n\n    default:\n      return React.createElement('span', baseProps, String(value));\n  }\n}\n\n/**\n * Helper to create multiple columns at once\n */\nexport function createColumns<T = any>(configs: ColumnConfig<T>[]): ColumnDef<T>[] {\n  return configs.map(config => createColumnDef(config));\n}\n\n/**\n * Predefined column configurations for common data types\n */\nexport const ColumnPresets = {\n  id: (key = 'id'): ColumnConfig => ({\n    key,\n    header: 'ID',\n    type: 'number',\n    width: 80,\n    pinned: 'left',\n  }),\n\n  name: (key = 'name'): ColumnConfig => ({\n    key,\n    header: 'Name',\n    type: 'text',\n    sortable: true,\n    filterable: true,\n  }),\n\n  email: (key = 'email'): ColumnConfig => ({\n    key,\n    header: 'Email',\n    type: 'email',\n    sortable: true,\n    filterable: true,\n  }),\n\n  date: (key: string, header: string): ColumnConfig => ({\n    key,\n    header,\n    type: 'date',\n    sortable: true,\n    filterable: true,\n  }),\n\n  currency: (key: string, header: string): ColumnConfig => ({\n    key,\n    header,\n    type: 'currency',\n    sortable: true,\n    aggregationFn: 'sum',\n  }),\n\n  status: (key = 'status', options: Array<{ value: any; label: string; color?: string }> = []): ColumnConfig => ({\n    key,\n    header: 'Status',\n    type: 'select',\n    options,\n    filterable: true,\n  }),\n\n  boolean: (key: string, header: string): ColumnConfig => ({\n    key,\n    header,\n    type: 'boolean',\n    filterable: true,\n  }),\n\n  actions: (cell: (props: { value: any; row: any; column: any }) => React.ReactNode): ColumnConfig => ({\n    key: 'actions',\n    header: 'Actions',\n    type: 'custom',\n    sortable: false,\n    filterable: false,\n    resizable: false,\n    cell,\n    pinned: 'right',\n    width: 120,\n  }),\n};\n\n/**\n * Helper to infer column types from data\n */\nexport function inferColumnTypes<T extends Record<string, any>>(\n  data: T[], \n  sampleSize = 10\n): ColumnConfig<T>[] {\n  if (!data.length) return [];\n\n  const sample = data.slice(0, sampleSize);\n  const keys = Object.keys(sample[0]) as (keyof T)[];\n\n  return keys.map(key => {\n    const values = sample.map(row => row[key]).filter(val => val != null);\n    \n    let type: ColumnType = 'text';\n    \n    if (values.length > 0) {\n      const firstValue = values[0];\n      \n      if (typeof firstValue === 'number') {\n        type = 'number';\n      } else if (typeof firstValue === 'boolean') {\n        type = 'boolean';\n      } else if ((firstValue as any) instanceof Date || \n                 (typeof firstValue === 'string' && !isNaN(Date.parse(firstValue)))) {\n        type = 'date';\n      } else if (typeof firstValue === 'string') {\n        if (firstValue.includes('@')) {\n          type = 'email';\n        } else if (firstValue.startsWith('http')) {\n          type = 'url';\n        } else if (firstValue.startsWith('$') || key.toString().toLowerCase().includes('price') || key.toString().toLowerCase().includes('cost')) {\n          type = 'currency';\n        }\n      }\n    }\n\n    return {\n      key,\n      header: String(key).replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()),\n      type,\n    };\n  });\n}"],"names":["memo","React","useMemo","_jsx","_jsxs","useState","t","useTheme","useEffect","useRef","useCallback","flushSync","TABLE_PRESETS","getPreset","_Fragment","ValidationErrorCode","ValidationWarningCode"],"mappings":"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","x_google_ignoreList":[0,1,6,13,14,15]}